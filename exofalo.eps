%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: exof1.pdf
%%Creator: Adobe Acrobat 11.0.0
%%For: xintao
%%CreationDate: 2016/10/12, 17:41:05
%%BoundingBox: -1 0 455 671
%%HiResBoundingBox: 0 0 454.2566 670.2576
%%CropBox: 0 0 454.2566 670.2576
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1180 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.4-c005 78.147326, 2012/08/23-13:03:03        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   dc:format="application/pdf"
   xmp:CreateDate="2016-10-12T17:40:36+08:00"
   xmp:CreatorTool="Microsoft® Visio® 2013"
   xmp:ModifyDate="2016-10-12T17:40:51+08:00"
   xmp:MetadataDate="2016-10-12T17:40:51+08:00"
   pdf:Keywords=""
   pdf:Producer="Microsoft® Visio® 2013"
   xmpMM:DocumentID="uuid:e1b50548-76c1-4e90-ab74-a42df520c4cd"
   xmpMM:InstanceID="uuid:1bba2ca0-81a1-4a32-9535-fd3f21665dd6">
   <dc:creator>
    <rdf:Seq>
     <rdf:li>xintao niu</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:description>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:description>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -670.258 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
-7.62939e-6 0 mo
-7.62939e-6 670.258 li
454.257 670.258 li
454.257 0 li
cp
clp
gsave
-.873161 671.177 mo
455.127 671.177 li
455.127 -.822998 li
-.873161 -.822998 li
cp
clp
2.74483 264.777 mo
450.215 264.777 li
450.215 2.78699 li
2.74483 2.78699 li
cp
false sop
/0 
<<
/Name (Black)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
0 sep
ef
.75075 lw
2 lc
0 lj
10 ml
[] 0 dsh
true sadj
2.74483 264.777 mo
450.215 264.777 li
450.215 2.78699 li
2.74483 2.78699 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
2.74483 264.777 mo
28.2568 264.777 li
28.2568 2.78699 li
2.74483 2.78699 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
2.74483 264.777 mo
28.2568 264.777 li
28.2568 2.78699 li
2.74483 2.78699 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
12.5468 192.357 mo
12.6268 192.357 12.6868 192.357 12.7468 192.367 cv
12.8068 192.377 12.8468 192.387 12.8868 192.407 cv
12.9268 192.427 12.9468 192.447 12.9668 192.467 cv
12.9768 192.497 12.9868 192.527 12.9868 192.557 cv
12.9868 192.607 12.9568 192.697 12.8768 192.817 cv
12.8068 192.937 12.7168 193.097 12.6268 193.297 cv
12.5468 193.497 12.4568 193.737 12.3868 194.017 cv
12.3068 194.307 12.2768 194.637 12.2768 195.027 cv
12.2768 195.487 12.3468 195.897 12.5068 196.257 cv
12.6568 196.627 12.8668 196.937 13.1368 197.187 cv
13.4068 197.447 13.7268 197.637 14.0968 197.777 cv
14.4668 197.907 14.8668 197.977 15.3068 197.977 cv
15.7868 197.977 16.2168 197.897 16.5968 197.757 cv
16.9668 197.607 17.2868 197.397 17.5468 197.137 cv
17.7968 196.877 17.9968 196.567 18.1268 196.197 cv
18.2568 195.837 18.3268 195.437 18.3268 195.007 cv
18.3268 194.747 18.2968 194.487 18.2468 194.217 cv
18.1868 193.957 18.0968 193.707 17.9868 193.487 cv
15.7768 193.487 li
15.7768 195.417 li
15.7768 195.487 15.7468 195.547 15.6768 195.577 cv
15.6168 195.617 15.5068 195.637 15.3668 195.637 cv
15.2968 195.637 15.2268 195.637 15.1768 195.627 cv
15.1268 195.617 15.0868 195.597 15.0468 195.577 cv
15.0168 195.567 14.9868 195.537 14.9768 195.517 cv
14.9568 195.487 14.9568 195.457 14.9568 195.417 cv
14.9568 192.767 li
14.9568 192.717 14.9568 192.677 14.9768 192.627 cv
14.9868 192.577 15.0168 192.537 15.0468 192.497 cv
15.0768 192.457 15.1168 192.427 15.1768 192.407 cv
15.2268 192.387 15.2968 192.377 15.3668 192.377 cv
18.2468 192.377 li
18.3568 192.377 18.4368 192.397 18.5168 192.437 cv
18.5868 192.467 18.6568 192.557 18.7068 192.677 cv
18.7668 192.807 18.8268 192.967 18.8968 193.157 cv
18.9668 193.357 19.0168 193.567 19.0668 193.777 cv
19.1168 193.987 19.1468 194.197 19.1668 194.407 cv
19.1968 194.627 19.2068 194.837 19.2068 195.047 cv
19.2068 195.697 19.1168 196.267 18.9368 196.777 cv
18.7568 197.287 18.4968 197.717 18.1568 198.067 cv
17.8168 198.417 17.4168 198.677 16.9468 198.867 cv
16.4768 199.047 15.9568 199.147 15.3768 199.147 cv
14.7768 199.147 14.2368 199.047 13.7468 198.847 cv
13.2568 198.647 12.8368 198.357 12.4968 197.997 cv
12.1568 197.637 11.8868 197.197 11.6968 196.687 cv
11.5068 196.177 11.4168 195.617 11.4168 194.997 cv
11.4168 194.677 11.4368 194.377 11.4868 194.107 cv
11.5368 193.827 11.5968 193.577 11.6668 193.357 cv
11.7368 193.137 11.8068 192.957 11.8868 192.807 cv
11.9668 192.657 12.0368 192.557 12.0868 192.507 cv
12.1368 192.447 12.1968 192.407 12.2668 192.387 cv
12.3268 192.367 12.4268 192.357 12.5468 192.357 cv
cp
16.0868 185.547 mo
16.2368 185.547 16.3468 185.587 16.4168 185.667 cv
16.4768 185.757 16.5068 185.847 16.5068 185.957 cv
16.5068 189.777 li
16.8068 189.777 17.0668 189.747 17.2968 189.677 cv
17.5368 189.617 17.7368 189.507 17.9068 189.357 cv
18.0768 189.207 18.2068 189.007 18.2968 188.767 cv
18.3768 188.527 18.4268 188.227 18.4268 187.877 cv
18.4268 187.607 18.4068 187.357 18.3668 187.137 cv
18.3268 186.927 18.2768 186.737 18.2268 186.577 cv
18.1768 186.427 18.1268 186.297 18.0868 186.197 cv
18.0468 186.087 18.0268 186.017 18.0268 185.967 cv
18.0268 185.937 18.0368 185.907 18.0468 185.877 cv
18.0668 185.857 18.0868 185.837 18.1068 185.827 cv
18.1368 185.817 18.1768 185.807 18.2268 185.797 cv
18.2768 185.787 18.3368 185.787 18.4068 185.787 cv
18.4568 185.787 18.4968 185.787 18.5368 185.797 cv
18.5768 185.797 18.6068 185.807 18.6368 185.807 cv
18.6668 185.817 18.6868 185.827 18.7168 185.847 cv
18.7368 185.857 18.7568 185.877 18.7768 185.897 cv
18.8068 185.927 18.8368 185.997 18.8868 186.107 cv
18.9368 186.227 18.9868 186.377 19.0268 186.557 cv
19.0768 186.747 19.1168 186.957 19.1568 187.207 cv
19.1968 187.447 19.2168 187.707 19.2168 187.977 cv
19.2168 188.457 19.1468 188.877 19.0268 189.237 cv
18.9068 189.587 18.7268 189.897 18.4868 190.137 cv
18.2568 190.387 17.9568 190.567 17.5968 190.697 cv
17.2368 190.817 16.8168 190.877 16.3368 190.877 cv
15.8868 190.877 15.4768 190.817 15.1168 190.687 cv
14.7568 190.557 14.4468 190.367 14.1968 190.127 cv
13.9468 189.887 13.7568 189.597 13.6168 189.247 cv
13.4868 188.907 13.4168 188.517 13.4168 188.097 cv
13.4168 187.637 13.4868 187.257 13.6168 186.927 cv
13.7468 186.607 13.9268 186.347 14.1568 186.147 cv
14.3768 185.937 14.6368 185.787 14.9468 185.687 cv
15.2468 185.587 15.5668 185.547 15.9168 185.547 cv
cp
15.7968 186.617 mo
15.2968 186.597 14.8968 186.727 14.6068 186.987 cv
14.3168 187.247 14.1768 187.637 14.1768 188.147 cv
14.1768 188.417 14.2168 188.647 14.3068 188.847 cv
14.3968 189.047 14.5168 189.207 14.6668 189.347 cv
14.8168 189.477 14.9868 189.577 15.1868 189.657 cv
15.3768 189.727 15.5868 189.767 15.7968 189.777 cv
cp
18.5668 180.727 mo
18.6768 180.727 18.7668 180.737 18.8368 180.757 cv
18.9068 180.767 18.9568 180.797 18.9868 180.827 cv
19.0168 180.867 19.0468 180.917 19.0668 180.987 cv
19.0968 181.057 19.1168 181.127 19.1368 181.217 cv
19.1568 181.307 19.1668 181.397 19.1868 181.497 cv
19.1968 181.597 19.1968 181.697 19.1968 181.797 cv
19.1968 182.097 19.1668 182.357 19.0868 182.567 cv
19.0168 182.787 18.9068 182.957 18.7668 183.097 cv
18.6168 183.237 18.4268 183.337 18.2068 183.397 cv
17.9868 183.457 17.7168 183.487 17.4168 183.487 cv
14.3268 183.487 li
14.3268 184.307 li
14.3268 184.367 14.2968 184.417 14.2368 184.457 cv
14.1768 184.497 14.0768 184.517 13.9368 184.517 cv
13.8568 184.517 13.7968 184.507 13.7468 184.497 cv
13.6968 184.487 13.6568 184.477 13.6168 184.457 cv
13.5868 184.437 13.5668 184.417 13.5468 184.387 cv
13.5368 184.367 13.5268 184.327 13.5268 184.297 cv
13.5268 183.487 li
12.2768 183.487 li
12.2468 183.487 12.2168 183.487 12.1968 183.467 cv
12.1768 183.457 12.1568 183.427 12.1368 183.387 cv
12.1168 183.347 12.1068 183.287 12.0968 183.217 cv
12.0868 183.157 12.0868 183.067 12.0868 182.967 cv
12.0868 182.857 12.0868 182.767 12.0968 182.697 cv
12.1068 182.627 12.1168 182.577 12.1368 182.537 cv
12.1568 182.497 12.1768 182.467 12.1968 182.457 cv
12.2168 182.437 12.2468 182.427 12.2768 182.427 cv
13.5268 182.427 li
13.5268 180.937 li
13.5268 180.907 13.5368 180.877 13.5468 180.847 cv
13.5668 180.827 13.5868 180.797 13.6168 180.777 cv
13.6568 180.767 13.6968 180.747 13.7468 180.737 cv
13.7968 180.727 13.8568 180.727 13.9368 180.727 cv
14.0768 180.727 14.1768 180.747 14.2368 180.787 cv
14.2968 180.827 14.3268 180.877 14.3268 180.937 cv
14.3268 182.427 li
17.2768 182.427 li
17.6368 182.427 17.9068 182.367 18.0968 182.247 cv
18.2768 182.137 18.3768 181.917 18.3768 181.617 cv
18.3768 181.517 18.3668 181.427 18.3468 181.347 cv
18.3268 181.277 18.3068 181.207 18.2968 181.147 cv
18.2768 181.087 18.2568 181.037 18.2368 180.987 cv
18.2168 180.947 18.2068 180.907 18.2068 180.877 cv
18.2068 180.857 18.2168 180.837 18.2268 180.817 cv
18.2368 180.797 18.2568 180.777 18.2768 180.767 cv
18.3068 180.757 18.3468 180.747 18.3868 180.737 cv
18.4368 180.727 18.4968 180.727 18.5668 180.727 cv
cp
13.7368 170.997 mo
14.1168 170.997 14.4568 171.067 14.7668 171.207 cv
15.0668 171.337 15.3268 171.537 15.5468 171.797 cv
15.7568 172.047 15.9268 172.357 16.0468 172.737 cv
16.1568 173.107 16.2168 173.547 16.2168 174.067 cv
16.2168 175.007 li
18.9468 175.007 li
18.9768 175.007 19.0068 175.017 19.0268 175.037 cv
19.0568 175.057 19.0768 175.087 19.0868 175.127 cv
19.0968 175.177 19.1068 175.227 19.1168 175.297 cv
19.1268 175.367 19.1368 175.457 19.1368 175.567 cv
19.1368 175.677 19.1268 175.767 19.1168 175.837 cv
19.1068 175.907 19.0968 175.957 19.0868 176.007 cv
19.0768 176.047 19.0568 176.077 19.0268 176.097 cv
19.0068 176.107 18.9768 176.117 18.9468 176.117 cv
11.9568 176.117 li
11.7968 176.117 11.6868 176.077 11.6168 175.987 cv
11.5468 175.897 11.5168 175.797 11.5168 175.687 cv
11.5168 173.897 li
11.5168 173.717 11.5268 173.547 11.5368 173.377 cv
11.5568 173.217 11.5868 173.017 11.6268 172.787 cv
11.6668 172.567 11.7568 172.337 11.8768 172.097 cv
12.0068 171.867 12.1568 171.667 12.3368 171.507 cv
12.5168 171.347 12.7168 171.217 12.9568 171.127 cv
13.1968 171.037 13.4568 170.997 13.7368 170.997 cv
cp
13.8168 172.167 mo
13.5168 172.167 13.2568 172.227 13.0468 172.357 cv
12.8368 172.477 12.6868 172.637 12.5868 172.827 cv
12.4868 173.007 12.4168 173.207 12.3868 173.407 cv
12.3668 173.607 12.3468 173.797 12.3468 173.987 cv
12.3468 175.007 li
15.3868 175.007 li
15.3868 174.017 li
15.3868 173.677 15.3568 173.397 15.2768 173.177 cv
15.1968 172.957 15.0868 172.767 14.9468 172.617 cv
14.8068 172.467 14.6468 172.357 14.4468 172.277 cv
14.2568 172.197 14.0468 172.167 13.8168 172.167 cv
cp
16.0868 164.547 mo
16.2368 164.547 16.3468 164.587 16.4168 164.667 cv
16.4768 164.757 16.5068 164.847 16.5068 164.957 cv
16.5068 168.777 li
16.8068 168.777 17.0668 168.747 17.2968 168.677 cv
17.5368 168.617 17.7368 168.507 17.9068 168.357 cv
18.0768 168.207 18.2068 168.007 18.2968 167.767 cv
18.3768 167.527 18.4268 167.227 18.4268 166.877 cv
18.4268 166.607 18.4068 166.357 18.3668 166.137 cv
18.3268 165.927 18.2768 165.737 18.2268 165.577 cv
18.1768 165.427 18.1268 165.297 18.0868 165.197 cv
18.0468 165.087 18.0268 165.017 18.0268 164.967 cv
18.0268 164.937 18.0368 164.907 18.0468 164.877 cv
18.0668 164.857 18.0868 164.837 18.1068 164.827 cv
18.1368 164.817 18.1768 164.807 18.2268 164.797 cv
18.2768 164.787 18.3368 164.787 18.4068 164.787 cv
18.4568 164.787 18.4968 164.787 18.5368 164.797 cv
18.5768 164.797 18.6068 164.807 18.6368 164.807 cv
18.6668 164.817 18.6868 164.827 18.7168 164.847 cv
18.7368 164.857 18.7568 164.877 18.7768 164.897 cv
18.8068 164.927 18.8368 164.997 18.8868 165.107 cv
18.9368 165.227 18.9868 165.377 19.0268 165.557 cv
19.0768 165.747 19.1168 165.957 19.1568 166.207 cv
19.1968 166.447 19.2168 166.707 19.2168 166.977 cv
19.2168 167.457 19.1468 167.877 19.0268 168.237 cv
18.9068 168.587 18.7268 168.897 18.4868 169.137 cv
18.2568 169.387 17.9568 169.567 17.5968 169.697 cv
17.2368 169.817 16.8168 169.877 16.3368 169.877 cv
15.8868 169.877 15.4768 169.817 15.1168 169.687 cv
14.7568 169.557 14.4468 169.367 14.1968 169.127 cv
13.9468 168.887 13.7568 168.597 13.6168 168.247 cv
13.4868 167.907 13.4168 167.517 13.4168 167.097 cv
13.4168 166.637 13.4868 166.257 13.6168 165.927 cv
13.7468 165.607 13.9268 165.347 14.1568 165.147 cv
14.3768 164.937 14.6368 164.787 14.9468 164.687 cv
15.2468 164.587 15.5668 164.547 15.9168 164.547 cv
cp
15.7968 165.617 mo
15.2968 165.597 14.8968 165.727 14.6068 165.987 cv
14.3168 166.247 14.1768 166.637 14.1768 167.147 cv
14.1768 167.417 14.2168 167.647 14.3068 167.847 cv
14.3968 168.047 14.5168 168.207 14.6668 168.347 cv
14.8168 168.477 14.9868 168.577 15.1868 168.657 cv
15.3768 168.727 15.5868 168.767 15.7968 168.777 cv
cp
18.9568 157.747 mo
18.9868 157.747 19.0068 157.757 19.0368 157.777 cv
19.0568 157.787 19.0768 157.817 19.0868 157.857 cv
19.1068 157.897 19.1168 157.947 19.1268 158.017 cv
19.1268 158.087 19.1368 158.177 19.1368 158.277 cv
19.1368 158.387 19.1268 158.467 19.1268 158.537 cv
19.1168 158.607 19.1068 158.667 19.0868 158.697 cv
19.0768 158.737 19.0568 158.767 19.0368 158.787 cv
19.0068 158.807 18.9868 158.807 18.9568 158.807 cv
15.8668 158.807 li
15.5668 158.807 15.3268 158.837 15.1368 158.887 cv
14.9568 158.937 14.7968 159.017 14.6668 159.117 cv
14.5368 159.217 14.4268 159.337 14.3568 159.497 cv
14.2868 159.657 14.2568 159.837 14.2568 160.047 cv
14.2568 160.307 14.3368 160.577 14.5168 160.837 cv
14.6868 161.107 14.9368 161.387 15.2668 161.677 cv
18.9568 161.677 li
18.9868 161.677 19.0068 161.687 19.0368 161.707 cv
19.0568 161.727 19.0768 161.747 19.0868 161.787 cv
19.1068 161.827 19.1168 161.877 19.1268 161.947 cv
19.1268 162.017 19.1368 162.107 19.1368 162.217 cv
19.1368 162.317 19.1268 162.407 19.1268 162.477 cv
19.1168 162.537 19.1068 162.597 19.0868 162.637 cv
19.0768 162.677 19.0568 162.707 19.0368 162.717 cv
19.0068 162.737 18.9868 162.747 18.9568 162.747 cv
13.6768 162.747 li
13.6468 162.747 13.6268 162.737 13.5968 162.727 cv
13.5768 162.707 13.5568 162.687 13.5468 162.647 cv
13.5268 162.607 13.5168 162.557 13.5068 162.497 cv
13.5068 162.437 13.4968 162.357 13.4968 162.257 cv
13.4968 162.167 13.5068 162.087 13.5068 162.027 cv
13.5168 161.967 13.5268 161.917 13.5468 161.877 cv
13.5568 161.847 13.5768 161.817 13.5968 161.807 cv
13.6268 161.787 13.6468 161.787 13.6768 161.787 cv
14.3768 161.787 li
14.0468 161.457 13.8068 161.127 13.6468 160.807 cv
13.4968 160.477 13.4168 160.157 13.4168 159.827 cv
13.4168 159.437 13.4768 159.107 13.5968 158.847 cv
13.7168 158.587 13.8768 158.367 14.0768 158.207 cv
14.2768 158.047 14.5068 157.927 14.7768 157.857 cv
15.0368 157.787 15.3668 157.747 15.7368 157.747 cv
cp
18.9568 151.027 mo
18.9868 151.027 19.0168 151.027 19.0368 151.047 cv
19.0568 151.057 19.0768 151.087 19.0868 151.127 cv
19.1068 151.157 19.1168 151.207 19.1268 151.267 cv
19.1268 151.327 19.1368 151.397 19.1368 151.487 cv
19.1368 151.577 19.1268 151.657 19.1268 151.717 cv
19.1168 151.777 19.1068 151.827 19.0868 151.857 cv
19.0768 151.897 19.0568 151.927 19.0368 151.947 cv
19.0168 151.967 18.9868 151.967 18.9568 151.967 cv
18.2568 151.967 li
18.5568 152.277 18.7968 152.597 18.9568 152.917 cv
19.1268 153.247 19.2168 153.607 19.2168 153.997 cv
19.2168 154.427 19.1368 154.787 18.9868 155.087 cv
18.8368 155.387 18.6368 155.637 18.3768 155.827 cv
18.1168 156.007 17.8168 156.147 17.4768 156.227 cv
17.1268 156.317 16.7668 156.357 16.3768 156.357 cv
15.9268 156.357 15.5168 156.307 15.1568 156.197 cv
14.7868 156.087 14.4768 155.937 14.2168 155.727 cv
13.9668 155.507 13.7668 155.247 13.6268 154.937 cv
13.4868 154.627 13.4168 154.267 13.4168 153.857 cv
13.4168 153.517 13.4868 153.207 13.6168 152.927 cv
13.7568 152.647 13.9568 152.367 14.2168 152.097 cv
11.1468 152.097 li
11.1268 152.097 11.0968 152.087 11.0668 152.067 cv
11.0468 152.057 11.0268 152.027 11.0068 151.987 cv
10.9968 151.937 10.9868 151.887 10.9768 151.817 cv
10.9668 151.757 10.9568 151.667 10.9568 151.567 cv
10.9568 151.457 10.9668 151.367 10.9768 151.297 cv
10.9868 151.237 10.9968 151.177 11.0068 151.137 cv
11.0268 151.097 11.0468 151.077 11.0668 151.057 cv
11.0968 151.037 11.1268 151.027 11.1468 151.027 cv
cp
15.2468 152.097 mo
14.9168 152.377 14.6768 152.657 14.5068 152.927 cv
14.3368 153.197 14.2468 153.477 14.2468 153.767 cv
14.2468 154.037 14.3068 154.267 14.4268 154.457 cv
14.5468 154.647 14.6968 154.797 14.8868 154.917 cv
15.0768 155.037 15.2968 155.127 15.5368 155.177 cv
15.7768 155.227 16.0268 155.257 16.2768 155.257 cv
16.5468 155.257 16.7968 155.237 17.0568 155.187 cv
17.3068 155.147 17.5368 155.067 17.7368 154.957 cv
17.9268 154.847 18.0868 154.697 18.2068 154.507 cv
18.3268 154.327 18.3868 154.097 18.3868 153.817 cv
18.3868 153.677 18.3668 153.537 18.3368 153.407 cv
18.2968 153.277 18.2368 153.137 18.1568 153.007 cv
18.0768 152.867 17.9668 152.717 17.8368 152.567 cv
17.7068 152.417 17.5468 152.257 17.3568 152.097 cv
cp
18.9568 148.177 mo
18.9868 148.177 19.0068 148.187 19.0368 148.207 cv
19.0568 148.227 19.0768 148.247 19.0868 148.287 cv
19.1068 148.327 19.1168 148.377 19.1268 148.447 cv
19.1268 148.517 19.1368 148.607 19.1368 148.717 cv
19.1368 148.817 19.1268 148.907 19.1268 148.977 cv
19.1168 149.037 19.1068 149.097 19.0868 149.137 cv
19.0768 149.177 19.0568 149.207 19.0368 149.217 cv
19.0068 149.237 18.9868 149.247 18.9568 149.247 cv
13.6768 149.247 li
13.6568 149.247 13.6268 149.237 13.6068 149.217 cv
13.5768 149.207 13.5568 149.177 13.5468 149.137 cv
13.5268 149.097 13.5168 149.037 13.5068 148.977 cv
13.5068 148.907 13.4968 148.817 13.4968 148.717 cv
13.4968 148.607 13.5068 148.517 13.5068 148.447 cv
13.5168 148.377 13.5268 148.327 13.5468 148.287 cv
13.5568 148.247 13.5768 148.227 13.6068 148.207 cv
13.6268 148.187 13.6568 148.177 13.6768 148.177 cv
cp
11.8968 148.057 mo
12.1268 148.057 12.2768 148.107 12.3668 148.197 cv
12.4468 148.297 12.4868 148.467 12.4868 148.717 cv
12.4868 148.967 12.4468 149.137 12.3668 149.237 cv
12.2868 149.327 12.1368 149.367 11.9068 149.367 cv
11.6868 149.367 11.5268 149.327 11.4468 149.227 cv
11.3668 149.137 11.3268 148.957 11.3268 148.707 cv
11.3268 148.457 11.3668 148.287 11.4468 148.197 cv
11.5268 148.107 11.6768 148.057 11.8968 148.057 cv
cp
18.9568 141.247 mo
18.9868 141.247 19.0068 141.257 19.0368 141.277 cv
19.0568 141.287 19.0768 141.317 19.0868 141.357 cv
19.1068 141.397 19.1168 141.447 19.1268 141.517 cv
19.1268 141.587 19.1368 141.677 19.1368 141.777 cv
19.1368 141.887 19.1268 141.967 19.1268 142.037 cv
19.1168 142.107 19.1068 142.167 19.0868 142.197 cv
19.0768 142.237 19.0568 142.267 19.0368 142.287 cv
19.0068 142.307 18.9868 142.307 18.9568 142.307 cv
15.8668 142.307 li
15.5668 142.307 15.3268 142.337 15.1368 142.387 cv
14.9568 142.437 14.7968 142.517 14.6668 142.617 cv
14.5368 142.717 14.4268 142.837 14.3568 142.997 cv
14.2868 143.157 14.2568 143.337 14.2568 143.547 cv
14.2568 143.807 14.3368 144.077 14.5168 144.337 cv
14.6868 144.607 14.9368 144.887 15.2668 145.177 cv
18.9568 145.177 li
18.9868 145.177 19.0068 145.187 19.0368 145.207 cv
19.0568 145.227 19.0768 145.247 19.0868 145.287 cv
19.1068 145.327 19.1168 145.377 19.1268 145.447 cv
19.1268 145.517 19.1368 145.607 19.1368 145.717 cv
19.1368 145.817 19.1268 145.907 19.1268 145.977 cv
19.1168 146.037 19.1068 146.097 19.0868 146.137 cv
19.0768 146.177 19.0568 146.207 19.0368 146.217 cv
19.0068 146.237 18.9868 146.247 18.9568 146.247 cv
13.6768 146.247 li
13.6468 146.247 13.6268 146.237 13.5968 146.227 cv
13.5768 146.207 13.5568 146.187 13.5468 146.147 cv
13.5268 146.107 13.5168 146.057 13.5068 145.997 cv
13.5068 145.937 13.4968 145.857 13.4968 145.757 cv
13.4968 145.667 13.5068 145.587 13.5068 145.527 cv
13.5168 145.467 13.5268 145.417 13.5468 145.377 cv
13.5568 145.347 13.5768 145.317 13.5968 145.307 cv
13.6268 145.287 13.6468 145.287 13.6768 145.287 cv
14.3768 145.287 li
14.0468 144.957 13.8068 144.627 13.6468 144.307 cv
13.4968 143.977 13.4168 143.657 13.4168 143.327 cv
13.4168 142.937 13.4768 142.607 13.5968 142.347 cv
13.7168 142.087 13.8768 141.867 14.0768 141.707 cv
14.2768 141.547 14.5068 141.427 14.7768 141.357 cv
15.0368 141.287 15.3668 141.247 15.7368 141.247 cv
cp
13.9168 134.647 mo
14.0568 134.647 14.1568 134.667 14.2168 134.707 cv
14.2768 134.747 14.3068 134.797 14.3068 134.867 cv
14.3068 135.697 li
14.4468 135.547 14.6068 135.437 14.7768 135.377 cv
14.9468 135.317 15.1168 135.287 15.3068 135.287 cv
15.6068 135.287 15.8768 135.347 16.1168 135.447 cv
16.3468 135.557 16.5468 135.717 16.7068 135.917 cv
16.8668 136.117 16.9968 136.347 17.0768 136.627 cv
17.1668 136.897 17.2068 137.207 17.2068 137.537 cv
17.2068 137.777 17.1768 137.997 17.1268 138.217 cv
17.0668 138.427 16.9968 138.587 16.9068 138.707 cv
16.9768 138.787 17.0568 138.847 17.1468 138.897 cv
17.2368 138.947 17.3468 138.967 17.4568 138.967 cv
17.5968 138.967 17.7068 138.897 17.7968 138.757 cv
17.8868 138.617 17.9368 138.437 17.9468 138.207 cv
18.0068 136.687 li
18.0168 136.397 18.0468 136.137 18.1168 135.897 cv
18.1768 135.657 18.2668 135.447 18.3868 135.267 cv
18.5068 135.097 18.6568 134.957 18.8268 134.857 cv
19.0068 134.757 19.2068 134.707 19.4368 134.707 cv
19.6768 134.707 19.9068 134.767 20.1268 134.877 cv
20.3468 134.987 20.5368 135.157 20.7068 135.387 cv
20.8668 135.617 20.9968 135.917 21.0968 136.267 cv
21.1868 136.627 21.2368 137.047 21.2368 137.537 cv
21.2368 138.007 21.2068 138.397 21.1268 138.727 cv
21.0568 139.057 20.9568 139.327 20.8368 139.537 cv
20.7068 139.747 20.5568 139.897 20.3868 139.997 cv
20.2168 140.087 20.0268 140.137 19.8168 140.137 cv
19.6968 140.137 19.5668 140.117 19.4468 140.087 cv
19.3268 140.047 19.2068 139.997 19.0968 139.927 cv
18.9868 139.857 18.8868 139.767 18.7868 139.667 cv
18.6868 139.557 18.5868 139.437 18.4868 139.297 cv
18.3968 139.507 18.2668 139.667 18.1268 139.767 cv
17.9768 139.867 17.8168 139.917 17.6368 139.917 cv
17.4068 139.917 17.1868 139.867 17.0068 139.757 cv
16.8168 139.647 16.6468 139.517 16.4968 139.357 cv
16.3568 139.487 16.1868 139.597 16.0068 139.677 cv
15.8268 139.747 15.6068 139.787 15.3468 139.787 cv
15.0468 139.787 14.7768 139.737 14.5468 139.617 cv
14.3068 139.507 14.1068 139.357 13.9368 139.157 cv
13.7768 138.957 13.6468 138.727 13.5568 138.447 cv
13.4768 138.167 13.4268 137.867 13.4268 137.537 cv
13.4268 137.367 13.4368 137.197 13.4568 137.047 cv
13.4768 136.897 13.4968 136.747 13.5268 136.617 cv
13.5268 134.867 li
13.5268 134.797 13.5568 134.737 13.6268 134.697 cv
13.6868 134.667 13.7868 134.647 13.9168 134.647 cv
cp
15.3068 136.307 mo
14.9468 136.307 14.6668 136.417 14.4668 136.637 cv
14.2668 136.847 14.1668 137.157 14.1668 137.557 cv
14.1668 137.767 14.1968 137.947 14.2568 138.097 cv
14.3268 138.247 14.4068 138.377 14.5168 138.477 cv
14.6268 138.577 14.7568 138.657 14.8968 138.707 cv
15.0368 138.757 15.1868 138.777 15.3468 138.777 cv
15.6968 138.777 15.9668 138.667 16.1668 138.457 cv
16.3668 138.237 16.4668 137.927 16.4668 137.537 cv
16.4668 137.327 16.4368 137.147 16.3768 136.997 cv
16.3168 136.837 16.2268 136.707 16.1168 136.607 cv
16.0168 136.507 15.8868 136.437 15.7468 136.387 cv
15.6068 136.337 15.4668 136.307 15.3068 136.307 cv
cp
19.4868 135.777 mo
19.2568 135.777 19.0868 135.877 18.9668 136.077 cv
18.8368 136.287 18.7768 136.557 18.7668 136.907 cv
18.7168 138.407 li
18.8168 138.547 18.9068 138.657 18.9968 138.747 cv
19.0868 138.837 19.1668 138.907 19.2468 138.957 cv
19.3268 139.007 19.4068 139.047 19.4868 139.067 cv
19.5668 139.087 19.6468 139.097 19.7268 139.097 cv
19.9768 139.097 20.1768 138.947 20.3068 138.667 cv
20.4368 138.387 20.4968 137.987 20.4968 137.487 cv
20.4968 137.157 20.4768 136.887 20.4168 136.677 cv
20.3568 136.457 20.2868 136.277 20.1868 136.147 cv
20.0968 136.017 19.9868 135.917 19.8668 135.857 cv
19.7468 135.807 19.6168 135.777 19.4868 135.777 cv
cp
16.9768 125.137 mo
17.3268 125.137 17.6468 125.217 17.9268 125.357 cv
18.1968 125.497 18.4368 125.697 18.6268 125.957 cv
18.8268 126.217 18.9668 126.517 19.0668 126.857 cv
19.1668 127.207 19.2168 127.577 19.2168 127.977 cv
19.2168 128.257 19.1868 128.517 19.1468 128.757 cv
19.1068 128.997 19.0468 129.207 18.9868 129.387 cv
18.9268 129.577 18.8668 129.737 18.7968 129.867 cv
18.7268 129.987 18.6768 130.077 18.6268 130.127 cv
18.5768 130.177 18.5168 130.217 18.4468 130.237 cv
18.3768 130.257 18.2768 130.267 18.1568 130.267 cv
18.0668 130.267 17.9968 130.267 17.9468 130.257 cv
17.8868 130.247 17.8368 130.237 17.8068 130.217 cv
17.7668 130.207 17.7468 130.177 17.7368 130.157 cv
17.7168 130.127 17.7168 130.097 17.7168 130.067 cv
17.7168 130.007 17.7468 129.917 17.8068 129.807 cv
17.8768 129.697 17.9468 129.557 18.0268 129.387 cv
18.1068 129.217 18.1768 129.007 18.2468 128.767 cv
18.3168 128.527 18.3468 128.247 18.3468 127.927 cv
18.3468 127.687 18.3168 127.467 18.2668 127.267 cv
18.2068 127.067 18.1168 126.897 18.0168 126.747 cv
17.9068 126.607 17.7768 126.497 17.6168 126.417 cv
17.4668 126.337 17.2868 126.297 17.0868 126.297 cv
16.8668 126.297 16.6868 126.357 16.5368 126.467 cv
16.3768 126.567 16.2468 126.707 16.1368 126.887 cv
16.0168 127.067 15.9168 127.267 15.8168 127.487 cv
15.7168 127.717 15.6268 127.947 15.5268 128.187 cv
15.4268 128.417 15.3168 128.647 15.1968 128.877 cv
15.0668 129.097 14.9268 129.297 14.7668 129.477 cv
14.5968 129.647 14.4068 129.787 14.1868 129.897 cv
13.9668 130.007 13.7068 130.067 13.3968 130.067 cv
13.0768 130.067 12.7968 129.997 12.5468 129.877 cv
12.2968 129.747 12.0868 129.577 11.9268 129.347 cv
11.7568 129.117 11.6268 128.857 11.5368 128.537 cv
11.4468 128.227 11.4068 127.897 11.4068 127.537 cv
11.4068 127.347 11.4168 127.157 11.4468 126.977 cv
11.4768 126.787 11.5168 126.607 11.5668 126.447 cv
11.6168 126.277 11.6668 126.137 11.7368 126.007 cv
11.7968 125.877 11.8368 125.787 11.8768 125.747 cv
11.9168 125.707 11.9468 125.687 11.9668 125.667 cv
11.9868 125.657 12.0168 125.647 12.0468 125.637 cv
12.0868 125.627 12.1268 125.627 12.1668 125.617 cv
12.2168 125.617 12.2768 125.607 12.3468 125.607 cv
12.4168 125.607 12.4868 125.617 12.5368 125.617 cv
12.5968 125.627 12.6368 125.637 12.6768 125.647 cv
12.7168 125.667 12.7368 125.677 12.7568 125.707 cv
12.7768 125.727 12.7868 125.757 12.7868 125.787 cv
12.7868 125.837 12.7568 125.907 12.7068 126.007 cv
12.6468 126.107 12.5868 126.237 12.5168 126.377 cv
12.4468 126.527 12.3868 126.697 12.3268 126.897 cv
12.2768 127.097 12.2468 127.317 12.2468 127.567 cv
12.2468 127.807 12.2768 128.007 12.3268 128.177 cv
12.3868 128.347 12.4568 128.487 12.5568 128.607 cv
12.6468 128.717 12.7568 128.797 12.8868 128.857 cv
13.0168 128.907 13.1568 128.937 13.2968 128.937 cv
13.5068 128.937 13.6968 128.887 13.8468 128.777 cv
13.9968 128.667 14.1268 128.527 14.2468 128.347 cv
14.3668 128.167 14.4768 127.967 14.5668 127.737 cv
14.6668 127.507 14.7668 127.277 14.8668 127.047 cv
14.9668 126.807 15.0768 126.577 15.1968 126.347 cv
15.3168 126.117 15.4568 125.917 15.6168 125.737 cv
15.7768 125.557 15.9668 125.417 16.1868 125.307 cv
16.4168 125.197 16.6768 125.137 16.9768 125.137 cv
cp
18.1468 119.577 mo
18.2168 119.577 18.2768 119.577 18.3268 119.577 cv
18.3768 119.587 18.4168 119.587 18.4468 119.597 cv
18.4768 119.617 18.5068 119.627 18.5368 119.637 cv
18.5568 119.657 18.5968 119.687 18.6468 119.747 cv
18.6968 119.797 18.7568 119.887 18.8268 120.017 cv
18.8968 120.147 18.9668 120.287 19.0168 120.457 cv
19.0768 120.617 19.1268 120.787 19.1568 120.977 cv
19.1968 121.167 19.2168 121.367 19.2168 121.567 cv
19.2168 121.977 19.1468 122.347 19.0268 122.677 cv
18.8968 122.997 18.7168 123.267 18.4768 123.477 cv
18.2368 123.697 17.9368 123.867 17.5868 123.977 cv
17.2468 124.097 16.8368 124.147 16.3768 124.147 cv
15.8668 124.147 15.4168 124.077 15.0468 123.937 cv
14.6668 123.797 14.3668 123.607 14.1268 123.367 cv
13.8868 123.127 13.7068 122.837 13.5968 122.507 cv
13.4768 122.177 13.4268 121.827 13.4268 121.447 cv
13.4268 121.257 13.4368 121.077 13.4668 120.907 cv
13.4968 120.727 13.5468 120.567 13.5968 120.427 cv
13.6468 120.277 13.7068 120.147 13.7668 120.037 cv
13.8368 119.917 13.8868 119.837 13.9368 119.787 cv
13.9868 119.737 14.0268 119.697 14.0468 119.677 cv
14.0768 119.657 14.1068 119.647 14.1468 119.627 cv
14.1868 119.617 14.2268 119.607 14.2768 119.607 cv
14.3168 119.597 14.3768 119.597 14.4468 119.597 cv
14.5968 119.597 14.7068 119.617 14.7668 119.657 cv
14.8268 119.697 14.8568 119.747 14.8568 119.797 cv
14.8568 119.867 14.8268 119.937 14.7568 120.017 cv
14.6968 120.107 14.6268 120.207 14.5468 120.337 cv
14.4668 120.467 14.3968 120.627 14.3368 120.807 cv
14.2668 120.987 14.2368 121.207 14.2368 121.457 cv
14.2368 121.967 14.4168 122.357 14.7768 122.627 cv
15.1268 122.907 15.6468 123.037 16.3268 123.037 cv
16.6668 123.037 16.9668 123.007 17.2268 122.937 cv
17.4768 122.867 17.6968 122.757 17.8668 122.617 cv
18.0368 122.487 18.1668 122.317 18.2468 122.117 cv
18.3368 121.917 18.3768 121.687 18.3768 121.427 cv
18.3768 121.187 18.3368 120.967 18.2668 120.787 cv
18.1968 120.597 18.1168 120.437 18.0368 120.307 cv
17.9568 120.167 17.8768 120.057 17.8068 119.967 cv
17.7368 119.867 17.7068 119.797 17.7068 119.747 cv
17.7068 119.717 17.7168 119.687 17.7268 119.667 cv
17.7468 119.647 17.7668 119.627 17.8068 119.617 cv
17.8468 119.597 17.8968 119.587 17.9468 119.587 cv
18.0068 119.577 18.0768 119.577 18.1468 119.577 cv
cp
18.9568 113.497 mo
18.9868 113.497 19.0068 113.507 19.0368 113.527 cv
19.0568 113.537 19.0768 113.567 19.0868 113.607 cv
19.1068 113.647 19.1168 113.697 19.1268 113.767 cv
19.1268 113.837 19.1368 113.927 19.1368 114.027 cv
19.1368 114.137 19.1268 114.217 19.1268 114.287 cv
19.1168 114.357 19.1068 114.417 19.0868 114.447 cv
19.0768 114.487 19.0568 114.517 19.0368 114.537 cv
19.0068 114.557 18.9868 114.557 18.9568 114.557 cv
15.8668 114.557 li
15.5668 114.557 15.3268 114.587 15.1368 114.637 cv
14.9568 114.687 14.7968 114.767 14.6668 114.867 cv
14.5368 114.967 14.4268 115.087 14.3568 115.247 cv
14.2868 115.407 14.2568 115.587 14.2568 115.797 cv
14.2568 116.057 14.3368 116.327 14.5168 116.587 cv
14.6868 116.857 14.9368 117.137 15.2668 117.427 cv
18.9568 117.427 li
18.9868 117.427 19.0068 117.437 19.0368 117.457 cv
19.0568 117.477 19.0768 117.497 19.0868 117.537 cv
19.1068 117.577 19.1168 117.627 19.1268 117.697 cv
19.1268 117.767 19.1368 117.857 19.1368 117.967 cv
19.1368 118.067 19.1268 118.157 19.1268 118.227 cv
19.1168 118.287 19.1068 118.347 19.0868 118.387 cv
19.0768 118.427 19.0568 118.457 19.0368 118.467 cv
19.0068 118.487 18.9868 118.497 18.9568 118.497 cv
11.1268 118.497 li
11.0968 118.497 11.0668 118.487 11.0468 118.467 cv
11.0168 118.457 10.9968 118.427 10.9868 118.387 cv
10.9668 118.347 10.9568 118.287 10.9468 118.227 cv
10.9468 118.157 10.9368 118.067 10.9368 117.967 cv
10.9368 117.857 10.9468 117.767 10.9468 117.697 cv
10.9568 117.627 10.9668 117.577 10.9868 117.537 cv
10.9968 117.497 11.0168 117.477 11.0468 117.457 cv
11.0668 117.437 11.0968 117.427 11.1268 117.427 cv
14.2868 117.427 li
13.9868 117.127 13.7768 116.817 13.6268 116.507 cv
13.4868 116.197 13.4168 115.887 13.4168 115.577 cv
13.4168 115.187 13.4768 114.857 13.5968 114.597 cv
13.7168 114.337 13.8768 114.117 14.0768 113.957 cv
14.2768 113.797 14.5068 113.677 14.7768 113.607 cv
15.0368 113.537 15.3668 113.497 15.7468 113.497 cv
cp
16.0868 106.797 mo
16.2368 106.797 16.3468 106.837 16.4168 106.917 cv
16.4768 107.007 16.5068 107.097 16.5068 107.207 cv
16.5068 111.027 li
16.8068 111.027 17.0668 110.997 17.2968 110.927 cv
17.5368 110.867 17.7368 110.757 17.9068 110.607 cv
18.0768 110.457 18.2068 110.257 18.2968 110.017 cv
18.3768 109.777 18.4268 109.477 18.4268 109.127 cv
18.4268 108.857 18.4068 108.607 18.3668 108.387 cv
18.3268 108.177 18.2768 107.987 18.2268 107.827 cv
18.1768 107.677 18.1268 107.547 18.0868 107.447 cv
18.0468 107.337 18.0268 107.267 18.0268 107.217 cv
18.0268 107.187 18.0368 107.157 18.0468 107.127 cv
18.0668 107.107 18.0868 107.087 18.1068 107.077 cv
18.1368 107.067 18.1768 107.057 18.2268 107.047 cv
18.2768 107.037 18.3368 107.037 18.4068 107.037 cv
18.4568 107.037 18.4968 107.037 18.5368 107.047 cv
18.5768 107.047 18.6068 107.057 18.6368 107.057 cv
18.6668 107.067 18.6868 107.077 18.7168 107.097 cv
18.7368 107.107 18.7568 107.127 18.7768 107.147 cv
18.8068 107.177 18.8368 107.247 18.8868 107.357 cv
18.9368 107.477 18.9868 107.627 19.0268 107.807 cv
19.0768 107.997 19.1168 108.207 19.1568 108.457 cv
19.1968 108.697 19.2168 108.957 19.2168 109.227 cv
19.2168 109.707 19.1468 110.127 19.0268 110.487 cv
18.9068 110.837 18.7268 111.147 18.4868 111.387 cv
18.2568 111.637 17.9568 111.817 17.5968 111.947 cv
17.2368 112.067 16.8168 112.127 16.3368 112.127 cv
15.8868 112.127 15.4768 112.067 15.1168 111.937 cv
14.7568 111.807 14.4468 111.617 14.1968 111.377 cv
13.9468 111.137 13.7568 110.847 13.6168 110.497 cv
13.4868 110.157 13.4168 109.767 13.4168 109.347 cv
13.4168 108.887 13.4868 108.507 13.6168 108.177 cv
13.7468 107.857 13.9268 107.597 14.1568 107.397 cv
14.3768 107.187 14.6368 107.037 14.9468 106.937 cv
15.2468 106.837 15.5668 106.797 15.9168 106.797 cv
cp
15.7968 107.867 mo
15.2968 107.847 14.8968 107.977 14.6068 108.237 cv
14.3168 108.497 14.1768 108.887 14.1768 109.397 cv
14.1768 109.667 14.2168 109.897 14.3068 110.097 cv
14.3968 110.297 14.5168 110.457 14.6668 110.597 cv
14.8168 110.727 14.9868 110.827 15.1868 110.907 cv
15.3768 110.977 15.5868 111.017 15.7968 111.027 cv
cp
18.9568 96.387 mo
18.9868 96.387 19.0068 96.397 19.0368 96.417 cv
19.0568 96.427 19.0768 96.457 19.0868 96.497 cv
19.1068 96.537 19.1168 96.587 19.1268 96.657 cv
19.1268 96.727 19.1368 96.817 19.1368 96.917 cv
19.1368 97.027 19.1268 97.117 19.1268 97.177 cv
19.1168 97.247 19.1068 97.307 19.0868 97.347 cv
19.0768 97.387 19.0568 97.417 19.0368 97.437 cv
19.0068 97.447 18.9868 97.457 18.9568 97.457 cv
15.7468 97.457 li
15.5268 97.457 15.3268 97.477 15.1368 97.527 cv
14.9568 97.567 14.7968 97.637 14.6668 97.727 cv
14.5368 97.827 14.4268 97.947 14.3568 98.087 cv
14.2868 98.237 14.2568 98.407 14.2568 98.607 cv
14.2568 98.847 14.3368 99.097 14.5168 99.347 cv
14.6868 99.587 14.9368 99.867 15.2668 100.157 cv
18.9568 100.157 li
18.9868 100.157 19.0068 100.167 19.0368 100.187 cv
19.0568 100.207 19.0768 100.227 19.0868 100.267 cv
19.1068 100.317 19.1168 100.367 19.1268 100.437 cv
19.1268 100.507 19.1368 100.587 19.1368 100.697 cv
19.1368 100.797 19.1268 100.877 19.1268 100.947 cv
19.1168 101.017 19.1068 101.077 19.0868 101.117 cv
19.0768 101.157 19.0568 101.187 19.0368 101.197 cv
19.0068 101.217 18.9868 101.227 18.9568 101.227 cv
15.7468 101.227 li
15.5268 101.227 15.3268 101.247 15.1368 101.297 cv
14.9568 101.337 14.7968 101.407 14.6668 101.507 cv
14.5368 101.597 14.4268 101.717 14.3568 101.867 cv
14.2868 102.007 14.2568 102.177 14.2568 102.377 cv
14.2568 102.617 14.3368 102.867 14.5168 103.117 cv
14.6868 103.367 14.9368 103.637 15.2668 103.927 cv
18.9568 103.927 li
18.9868 103.927 19.0068 103.937 19.0368 103.957 cv
19.0568 103.977 19.0768 103.997 19.0868 104.037 cv
19.1068 104.077 19.1168 104.127 19.1268 104.197 cv
19.1268 104.267 19.1368 104.357 19.1368 104.467 cv
19.1368 104.567 19.1268 104.657 19.1268 104.727 cv
19.1168 104.787 19.1068 104.847 19.0868 104.887 cv
19.0768 104.927 19.0568 104.957 19.0368 104.967 cv
19.0068 104.987 18.9868 104.997 18.9568 104.997 cv
13.6768 104.997 li
13.6468 104.997 13.6268 104.987 13.5968 104.977 cv
13.5768 104.957 13.5568 104.937 13.5468 104.897 cv
13.5268 104.857 13.5168 104.807 13.5068 104.747 cv
13.5068 104.687 13.4968 104.607 13.4968 104.507 cv
13.4968 104.417 13.5068 104.337 13.5068 104.277 cv
13.5168 104.217 13.5268 104.167 13.5468 104.127 cv
13.5568 104.097 13.5768 104.067 13.5968 104.057 cv
13.6268 104.037 13.6468 104.037 13.6768 104.037 cv
14.3768 104.037 li
14.0468 103.707 13.8068 103.387 13.6468 103.087 cv
13.4968 102.777 13.4168 102.467 13.4168 102.147 cv
13.4168 101.907 13.4468 101.697 13.4968 101.507 cv
13.5468 101.307 13.6168 101.147 13.7068 100.997 cv
13.7968 100.847 13.9068 100.727 14.0368 100.627 cv
14.1668 100.517 14.3068 100.437 14.4568 100.367 cv
14.2668 100.167 14.1068 99.987 13.9768 99.817 cv
13.8368 99.637 13.7368 99.477 13.6468 99.307 cv
13.5668 99.147 13.5068 98.997 13.4768 98.837 cv
13.4368 98.687 13.4168 98.537 13.4168 98.377 cv
13.4168 98.007 13.4768 97.697 13.5968 97.437 cv
13.7168 97.187 13.8768 96.977 14.0768 96.827 cv
14.2768 96.667 14.5068 96.557 14.7768 96.487 cv
15.0368 96.417 15.3268 96.387 15.6168 96.387 cv
cp
18.9568 90.127 mo
19.0068 90.127 19.0468 90.137 19.0668 90.177 cv
19.0868 90.207 19.1068 90.257 19.1168 90.317 cv
19.1268 90.377 19.1368 90.467 19.1368 90.577 cv
19.1368 90.697 19.1268 90.777 19.1168 90.847 cv
19.1068 90.917 19.0868 90.967 19.0668 90.997 cv
19.0468 91.027 19.0068 91.037 18.9568 91.037 cv
18.4368 91.037 li
18.6768 91.287 18.8668 91.577 19.0068 91.887 cv
19.1468 92.197 19.2168 92.527 19.2168 92.877 cv
19.2168 93.177 19.1768 93.457 19.1068 93.707 cv
19.0268 93.947 18.9268 94.157 18.7868 94.337 cv
18.6568 94.507 18.4868 94.647 18.2868 94.737 cv
18.0868 94.837 17.8568 94.887 17.6068 94.887 cv
17.3068 94.887 17.0468 94.817 16.8368 94.687 cv
16.6168 94.557 16.4368 94.357 16.2868 94.117 cv
16.1468 93.867 16.0368 93.557 15.9668 93.197 cv
15.8868 92.837 15.8568 92.427 15.8568 91.977 cv
15.8568 91.177 li
15.4468 91.177 li
15.2368 91.177 15.0568 91.207 14.9068 91.247 cv
14.7468 91.297 14.6168 91.377 14.5168 91.477 cv
14.4168 91.587 14.3368 91.717 14.2768 91.887 cv
14.2268 92.057 14.2068 92.267 14.2068 92.507 cv
14.2068 92.767 14.2268 93.007 14.2868 93.217 cv
14.3468 93.427 14.4068 93.607 14.4768 93.757 cv
14.5468 93.917 14.6068 94.047 14.6668 94.157 cv
14.7168 94.257 14.7468 94.337 14.7468 94.387 cv
14.7468 94.427 14.7368 94.457 14.7268 94.477 cv
14.7068 94.507 14.6868 94.527 14.6568 94.547 cv
14.6268 94.567 14.5868 94.577 14.5368 94.587 cv
14.4868 94.597 14.4268 94.607 14.3768 94.607 cv
14.2768 94.607 14.1968 94.597 14.1368 94.577 cv
14.0868 94.567 14.0268 94.527 13.9768 94.467 cv
13.9268 94.417 13.8668 94.317 13.7968 94.167 cv
13.7368 94.027 13.6668 93.867 13.6168 93.677 cv
13.5568 93.497 13.5068 93.297 13.4768 93.077 cv
13.4368 92.857 13.4168 92.637 13.4168 92.407 cv
13.4168 91.997 13.4568 91.637 13.5468 91.347 cv
13.6268 91.057 13.7568 90.817 13.9268 90.637 cv
14.0868 90.457 14.2968 90.327 14.5468 90.247 cv
14.7868 90.167 15.0768 90.127 15.4068 90.127 cv
cp
16.5468 91.177 mo
16.5468 92.087 li
16.5468 92.377 16.5768 92.637 16.6168 92.847 cv
16.6668 93.067 16.7268 93.247 16.8168 93.387 cv
16.9068 93.527 17.0068 93.627 17.1368 93.697 cv
17.2568 93.767 17.3968 93.797 17.5568 93.797 cv
17.8368 93.797 18.0468 93.697 18.2168 93.507 cv
18.3768 93.317 18.4568 93.047 18.4568 92.707 cv
18.4568 92.427 18.3868 92.167 18.2668 91.927 cv
18.1368 91.697 17.9368 91.447 17.6668 91.177 cv
cp
18.6568 80.297 mo
18.7368 80.297 18.8068 80.297 18.8568 80.307 cv
18.9068 80.317 18.9568 80.327 18.9968 80.347 cv
19.0268 80.367 19.0568 80.397 19.0768 80.417 cv
19.0868 80.447 19.0968 80.487 19.0968 80.517 cv
19.0968 84.207 li
19.0968 84.307 19.0668 84.397 19.0068 84.487 cv
18.9468 84.577 18.8468 84.617 18.6868 84.617 cv
11.6668 84.617 li
11.6368 84.617 11.6168 84.607 11.5868 84.597 cv
11.5668 84.577 11.5468 84.547 11.5368 84.507 cv
11.5168 84.457 11.5068 84.407 11.4968 84.327 cv
11.4868 84.257 11.4868 84.167 11.4868 84.067 cv
11.4868 83.957 11.4868 83.867 11.4968 83.797 cv
11.5068 83.727 11.5168 83.667 11.5368 83.627 cv
11.5468 83.587 11.5668 83.557 11.5868 83.537 cv
11.6168 83.517 11.6368 83.507 11.6668 83.507 cv
18.2268 83.507 li
18.2268 80.517 li
18.2268 80.487 18.2368 80.447 18.2568 80.417 cv
18.2668 80.397 18.2968 80.367 18.3268 80.347 cv
18.3668 80.327 18.4068 80.317 18.4668 80.307 cv
18.5168 80.297 18.5868 80.297 18.6568 80.297 cv
cp
18.9568 78.427 mo
18.9868 78.427 19.0068 78.437 19.0368 78.457 cv
19.0568 78.477 19.0768 78.497 19.0868 78.537 cv
19.1068 78.577 19.1168 78.627 19.1268 78.697 cv
19.1268 78.767 19.1368 78.857 19.1368 78.967 cv
19.1368 79.067 19.1268 79.157 19.1268 79.227 cv
19.1168 79.287 19.1068 79.347 19.0868 79.387 cv
19.0768 79.427 19.0568 79.457 19.0368 79.467 cv
19.0068 79.487 18.9868 79.497 18.9568 79.497 cv
13.6768 79.497 li
13.6568 79.497 13.6268 79.487 13.6068 79.467 cv
13.5768 79.457 13.5568 79.427 13.5468 79.387 cv
13.5268 79.347 13.5168 79.287 13.5068 79.227 cv
13.5068 79.157 13.4968 79.067 13.4968 78.967 cv
13.4968 78.857 13.5068 78.767 13.5068 78.697 cv
13.5168 78.627 13.5268 78.577 13.5468 78.537 cv
13.5568 78.497 13.5768 78.477 13.6068 78.457 cv
13.6268 78.437 13.6568 78.427 13.6768 78.427 cv
cp
11.8968 78.307 mo
12.1268 78.307 12.2768 78.357 12.3668 78.447 cv
12.4468 78.547 12.4868 78.717 12.4868 78.967 cv
12.4868 79.217 12.4468 79.387 12.3668 79.487 cv
12.2868 79.577 12.1368 79.617 11.9068 79.617 cv
11.6868 79.617 11.5268 79.577 11.4468 79.477 cv
11.3668 79.387 11.3268 79.207 11.3268 78.957 cv
11.3268 78.707 11.3668 78.537 11.4468 78.447 cv
11.5268 78.357 11.6768 78.307 11.8968 78.307 cv
cp
17.5168 72.847 mo
17.7868 72.847 18.0268 72.907 18.2368 73.017 cv
18.4468 73.127 18.6268 73.277 18.7768 73.487 cv
18.9168 73.687 19.0268 73.927 19.0968 74.207 cv
19.1768 74.487 19.2168 74.787 19.2168 75.127 cv
19.2168 75.337 19.1968 75.527 19.1668 75.717 cv
19.1368 75.907 19.0968 76.067 19.0568 76.217 cv
19.0068 76.367 18.9668 76.497 18.9168 76.597 cv
18.8668 76.697 18.8268 76.777 18.7868 76.817 cv
18.7468 76.867 18.6868 76.907 18.6168 76.927 cv
18.5468 76.947 18.4568 76.957 18.3368 76.957 cv
18.2568 76.957 18.1968 76.957 18.1468 76.947 cv
18.0968 76.937 18.0568 76.927 18.0268 76.907 cv
17.9868 76.897 17.9668 76.877 17.9568 76.857 cv
17.9368 76.837 17.9368 76.807 17.9368 76.777 cv
17.9368 76.727 17.9568 76.657 18.0168 76.567 cv
18.0668 76.477 18.1268 76.357 18.1868 76.227 cv
18.2468 76.087 18.3068 75.927 18.3568 75.747 cv
18.4168 75.557 18.4368 75.347 18.4368 75.107 cv
18.4368 74.927 18.4168 74.767 18.3868 74.617 cv
18.3468 74.467 18.2968 74.347 18.2268 74.237 cv
18.1668 74.127 18.0768 74.047 17.9668 73.987 cv
17.8668 73.927 17.7368 73.897 17.5968 73.897 cv
17.4468 73.897 17.3168 73.947 17.2168 74.027 cv
17.1168 74.107 17.0268 74.227 16.9468 74.357 cv
16.8768 74.497 16.8068 74.647 16.7468 74.827 cv
16.6768 74.997 16.6168 75.177 16.5468 75.357 cv
16.4868 75.537 16.4068 75.717 16.3268 75.887 cv
16.2468 76.067 16.1368 76.217 16.0168 76.357 cv
15.8968 76.497 15.7568 76.607 15.5868 76.687 cv
15.4168 76.777 15.2168 76.817 14.9768 76.817 cv
14.7768 76.817 14.5768 76.767 14.3868 76.687 cv
14.1968 76.597 14.0268 76.467 13.8868 76.287 cv
13.7468 76.107 13.6268 75.887 13.5468 75.627 cv
13.4568 75.357 13.4168 75.057 13.4168 74.697 cv
13.4168 74.547 13.4268 74.387 13.4568 74.237 cv
13.4768 74.087 13.5068 73.947 13.5368 73.817 cv
13.5768 73.697 13.6168 73.587 13.6568 73.497 cv
13.6968 73.407 13.7268 73.347 13.7668 73.297 cv
13.7968 73.257 13.8168 73.227 13.8468 73.207 cv
13.8668 73.197 13.8968 73.187 13.9268 73.177 cv
13.9568 73.167 13.9868 73.167 14.0368 73.157 cv
14.0768 73.147 14.1268 73.147 14.1868 73.147 cv
14.2568 73.147 14.3168 73.147 14.3668 73.157 cv
14.4168 73.167 14.4568 73.177 14.4868 73.187 cv
14.5168 73.207 14.5368 73.227 14.5468 73.247 cv
14.5668 73.267 14.5668 73.287 14.5668 73.317 cv
14.5668 73.357 14.5468 73.407 14.5068 73.487 cv
14.4668 73.557 14.4168 73.647 14.3668 73.767 cv
14.3168 73.887 14.2768 74.017 14.2268 74.177 cv
14.1868 74.337 14.1668 74.517 14.1668 74.717 cv
14.1668 74.897 14.1868 75.057 14.2268 75.187 cv
14.2568 75.327 14.3168 75.437 14.3768 75.527 cv
14.4468 75.617 14.5268 75.687 14.6268 75.727 cv
14.7168 75.777 14.8168 75.797 14.9268 75.797 cv
15.0768 75.797 15.2068 75.757 15.3168 75.667 cv
15.4168 75.587 15.5068 75.467 15.5868 75.337 cv
15.6668 75.197 15.7368 75.037 15.7968 74.867 cv
15.8568 74.687 15.9268 74.507 15.9868 74.327 cv
16.0568 74.137 16.1268 73.957 16.2168 73.787 cv
16.2968 73.607 16.3968 73.447 16.5068 73.307 cv
16.6268 73.167 16.7668 73.057 16.9368 72.977 cv
17.0968 72.897 17.2968 72.847 17.5168 72.847 cv
cp
18.5668 68.227 mo
18.6768 68.227 18.7668 68.237 18.8368 68.257 cv
18.9068 68.267 18.9568 68.297 18.9868 68.327 cv
19.0168 68.367 19.0468 68.417 19.0668 68.487 cv
19.0968 68.557 19.1168 68.627 19.1368 68.717 cv
19.1568 68.807 19.1668 68.897 19.1868 68.997 cv
19.1968 69.097 19.1968 69.197 19.1968 69.297 cv
19.1968 69.597 19.1668 69.857 19.0868 70.067 cv
19.0168 70.287 18.9068 70.457 18.7668 70.597 cv
18.6168 70.737 18.4268 70.837 18.2068 70.897 cv
17.9868 70.957 17.7168 70.987 17.4168 70.987 cv
14.3268 70.987 li
14.3268 71.807 li
14.3268 71.867 14.2968 71.917 14.2368 71.957 cv
14.1768 71.997 14.0768 72.017 13.9368 72.017 cv
13.8568 72.017 13.7968 72.007 13.7468 71.997 cv
13.6968 71.987 13.6568 71.977 13.6168 71.957 cv
13.5868 71.937 13.5668 71.917 13.5468 71.887 cv
13.5368 71.867 13.5268 71.827 13.5268 71.797 cv
13.5268 70.987 li
12.2768 70.987 li
12.2468 70.987 12.2168 70.987 12.1968 70.967 cv
12.1768 70.957 12.1568 70.927 12.1368 70.887 cv
12.1168 70.847 12.1068 70.787 12.0968 70.717 cv
12.0868 70.657 12.0868 70.567 12.0868 70.467 cv
12.0868 70.357 12.0868 70.267 12.0968 70.197 cv
12.1068 70.127 12.1168 70.077 12.1368 70.037 cv
12.1568 69.997 12.1768 69.967 12.1968 69.957 cv
12.2168 69.937 12.2468 69.927 12.2768 69.927 cv
13.5268 69.927 li
13.5268 68.437 li
13.5268 68.407 13.5368 68.377 13.5468 68.347 cv
13.5668 68.327 13.5868 68.297 13.6168 68.277 cv
13.6568 68.267 13.6968 68.247 13.7468 68.237 cv
13.7968 68.227 13.8568 68.227 13.9368 68.227 cv
14.0768 68.227 14.1768 68.247 14.2368 68.287 cv
14.2968 68.327 14.3268 68.377 14.3268 68.437 cv
14.3268 69.927 li
17.2768 69.927 li
17.6368 69.927 17.9068 69.867 18.0968 69.747 cv
18.2768 69.637 18.3768 69.417 18.3768 69.117 cv
18.3768 69.017 18.3668 68.927 18.3468 68.847 cv
18.3268 68.777 18.3068 68.707 18.2968 68.647 cv
18.2768 68.587 18.2568 68.537 18.2368 68.487 cv
18.2168 68.447 18.2068 68.407 18.2068 68.377 cv
18.2068 68.357 18.2168 68.337 18.2268 68.317 cv
18.2368 68.297 18.2568 68.277 18.2768 68.267 cv
18.3068 68.257 18.3468 68.247 18.3868 68.237 cv
18.4368 68.227 18.4968 68.227 18.5668 68.227 cv
cp
f
2.74483 359.897 mo
450.215 359.897 li
450.215 272.081 li
2.74483 272.081 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
2.74483 359.897 mo
450.215 359.897 li
450.215 272.081 li
2.74483 272.081 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
2.74483 359.897 mo
28.2568 359.897 li
28.2568 272.081 li
2.74483 272.081 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
2.74483 359.897 mo
28.2568 359.897 li
28.2568 272.081 li
2.74483 272.081 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
18.0268 325.377 mo
18.0868 325.377 18.1468 325.377 18.1968 325.387 cv
18.2368 325.387 18.2768 325.397 18.3168 325.407 cv
18.3468 325.417 18.3768 325.427 18.4068 325.447 cv
18.4368 325.467 18.4668 325.497 18.5068 325.537 cv
18.5468 325.577 18.6068 325.667 18.6868 325.807 cv
18.7668 325.947 18.8468 326.117 18.9268 326.317 cv
18.9968 326.527 19.0668 326.757 19.1168 327.027 cv
19.1668 327.287 19.1968 327.577 19.1968 327.887 cv
19.1968 328.437 19.1168 328.917 18.9468 329.357 cv
18.7868 329.797 18.5468 330.167 18.2168 330.477 cv
17.8968 330.777 17.5068 331.017 17.0368 331.177 cv
16.5668 331.347 16.0268 331.427 15.4068 331.427 cv
14.7768 331.427 14.2168 331.337 13.7268 331.157 cv
13.2368 330.987 12.8168 330.737 12.4768 330.407 cv
12.1368 330.087 11.8768 329.707 11.6968 329.257 cv
11.5168 328.807 11.4268 328.307 11.4268 327.757 cv
11.4268 327.517 11.4468 327.287 11.4868 327.057 cv
11.5268 326.827 11.5768 326.617 11.6368 326.427 cv
11.7068 326.237 11.7768 326.067 11.8568 325.907 cv
11.9368 325.757 12.0068 325.657 12.0568 325.597 cv
12.1168 325.537 12.1568 325.507 12.1768 325.487 cv
12.2068 325.467 12.2368 325.457 12.2768 325.447 cv
12.3168 325.437 12.3568 325.427 12.4068 325.417 cv
12.4568 325.417 12.5168 325.407 12.5868 325.407 cv
12.6668 325.407 12.7368 325.417 12.7868 325.427 cv
12.8468 325.427 12.8868 325.447 12.9268 325.457 cv
12.9668 325.477 12.9968 325.497 13.0068 325.527 cv
13.0268 325.547 13.0368 325.577 13.0368 325.607 cv
13.0368 325.667 12.9968 325.757 12.9168 325.867 cv
12.8468 325.967 12.7568 326.107 12.6668 326.277 cv
12.5768 326.447 12.4968 326.657 12.4168 326.907 cv
12.3368 327.147 12.3068 327.437 12.3068 327.777 cv
12.3068 328.157 12.3668 328.487 12.5068 328.797 cv
12.6368 329.097 12.8368 329.357 13.0968 329.577 cv
13.3668 329.787 13.6768 329.957 14.0568 330.077 cv
14.4368 330.197 14.8668 330.257 15.3468 330.257 cv
15.8268 330.257 16.2568 330.197 16.6268 330.087 cv
16.9968 329.967 17.3068 329.807 17.5468 329.587 cv
17.7968 329.377 17.9868 329.117 18.1168 328.807 cv
18.2368 328.497 18.3068 328.137 18.3068 327.747 cv
18.3068 327.417 18.2668 327.127 18.1968 326.877 cv
18.1168 326.627 18.0368 326.417 17.9468 326.247 cv
17.8468 326.067 17.7668 325.927 17.6968 325.807 cv
17.6168 325.697 17.5868 325.607 17.5868 325.547 cv
17.5868 325.517 17.5868 325.487 17.5968 325.467 cv
17.6168 325.447 17.6368 325.427 17.6668 325.417 cv
17.6968 325.407 17.7468 325.397 17.8068 325.387 cv
17.8668 325.377 17.9368 325.377 18.0268 325.377 cv
cp
18.9568 319.327 mo
18.9868 319.327 19.0068 319.327 19.0368 319.347 cv
19.0568 319.367 19.0768 319.397 19.0868 319.437 cv
19.1068 319.467 19.1168 319.527 19.1268 319.597 cv
19.1268 319.667 19.1368 319.747 19.1368 319.847 cv
19.1368 319.957 19.1268 320.047 19.1268 320.117 cv
19.1168 320.187 19.1068 320.237 19.0868 320.277 cv
19.0768 320.317 19.0568 320.347 19.0368 320.357 cv
19.0068 320.377 18.9868 320.387 18.9568 320.387 cv
15.8668 320.387 li
15.5668 320.387 15.3268 320.417 15.1368 320.467 cv
14.9568 320.517 14.7968 320.587 14.6668 320.687 cv
14.5368 320.787 14.4268 320.917 14.3568 321.077 cv
14.2868 321.227 14.2568 321.407 14.2568 321.617 cv
14.2568 321.887 14.3368 322.147 14.5168 322.417 cv
14.6868 322.687 14.9368 322.967 15.2668 323.257 cv
18.9568 323.257 li
18.9868 323.257 19.0068 323.267 19.0368 323.277 cv
19.0568 323.297 19.0768 323.327 19.0868 323.367 cv
19.1068 323.407 19.1168 323.457 19.1268 323.527 cv
19.1268 323.597 19.1368 323.687 19.1368 323.787 cv
19.1368 323.897 19.1268 323.977 19.1268 324.047 cv
19.1168 324.117 19.1068 324.167 19.0868 324.207 cv
19.0768 324.257 19.0568 324.277 19.0368 324.297 cv
19.0068 324.307 18.9868 324.317 18.9568 324.317 cv
11.1268 324.317 li
11.0968 324.317 11.0668 324.307 11.0468 324.297 cv
11.0168 324.277 10.9968 324.257 10.9868 324.207 cv
10.9668 324.167 10.9568 324.117 10.9468 324.047 cv
10.9468 323.977 10.9368 323.897 10.9368 323.787 cv
10.9368 323.687 10.9468 323.597 10.9468 323.527 cv
10.9568 323.457 10.9668 323.407 10.9868 323.367 cv
10.9968 323.327 11.0168 323.297 11.0468 323.277 cv
11.0668 323.267 11.0968 323.257 11.1268 323.257 cv
14.2868 323.257 li
13.9868 322.947 13.7768 322.647 13.6268 322.337 cv
13.4868 322.027 13.4168 321.717 13.4168 321.397 cv
13.4168 321.007 13.4768 320.687 13.5968 320.427 cv
13.7168 320.157 13.8768 319.947 14.0768 319.777 cv
14.2768 319.617 14.5068 319.497 14.7768 319.427 cv
15.0368 319.357 15.3668 319.327 15.7468 319.327 cv
cp
16.0868 311.867 mo
16.2368 311.867 16.3468 311.907 16.4168 311.997 cv
16.4768 312.077 16.5068 312.177 16.5068 312.287 cv
16.5068 316.107 li
16.8068 316.107 17.0668 316.067 17.2968 316.007 cv
17.5368 315.937 17.7368 315.837 17.9068 315.677 cv
18.0768 315.527 18.2068 315.337 18.2968 315.097 cv
18.3768 314.847 18.4268 314.557 18.4268 314.207 cv
18.4268 313.927 18.4068 313.687 18.3668 313.467 cv
18.3268 313.247 18.2768 313.067 18.2268 312.907 cv
18.1768 312.747 18.1268 312.617 18.0868 312.517 cv
18.0468 312.417 18.0268 312.337 18.0268 312.287 cv
18.0268 312.257 18.0368 312.227 18.0468 312.207 cv
18.0668 312.187 18.0868 312.167 18.1068 312.157 cv
18.1368 312.137 18.1768 312.127 18.2268 312.127 cv
18.2768 312.117 18.3368 312.117 18.4068 312.117 cv
18.4568 312.117 18.4968 312.117 18.5368 312.117 cv
18.5768 312.127 18.6068 312.127 18.6368 312.137 cv
18.6668 312.147 18.6868 312.157 18.7168 312.167 cv
18.7368 312.187 18.7568 312.207 18.7768 312.227 cv
18.8068 312.247 18.8368 312.317 18.8868 312.437 cv
18.9368 312.547 18.9868 312.697 19.0268 312.887 cv
19.0768 313.067 19.1168 313.287 19.1568 313.527 cv
19.1968 313.767 19.2168 314.027 19.2168 314.307 cv
19.2168 314.777 19.1468 315.197 19.0268 315.557 cv
18.9068 315.917 18.7268 316.217 18.4868 316.467 cv
18.2568 316.707 17.9568 316.897 17.5968 317.017 cv
17.2368 317.147 16.8168 317.207 16.3368 317.207 cv
15.8868 317.207 15.4768 317.137 15.1168 317.007 cv
14.7568 316.887 14.4468 316.697 14.1968 316.457 cv
13.9468 316.207 13.7568 315.917 13.6168 315.577 cv
13.4868 315.227 13.4168 314.847 13.4168 314.417 cv
13.4168 313.967 13.4868 313.577 13.6168 313.257 cv
13.7468 312.937 13.9268 312.677 14.1568 312.467 cv
14.3768 312.257 14.6368 312.107 14.9468 312.017 cv
15.2468 311.917 15.5668 311.867 15.9168 311.867 cv
cp
15.7968 312.937 mo
15.2968 312.927 14.8968 313.047 14.6068 313.307 cv
14.3168 313.577 14.1768 313.957 14.1768 314.477 cv
14.1768 314.737 14.2168 314.967 14.3068 315.167 cv
14.3968 315.367 14.5168 315.537 14.6668 315.667 cv
14.8168 315.807 14.9868 315.907 15.1868 315.977 cv
15.3768 316.057 15.5868 316.097 15.7968 316.107 cv
cp
18.1468 306.647 mo
18.2168 306.647 18.2768 306.647 18.3268 306.657 cv
18.3768 306.657 18.4168 306.667 18.4468 306.677 cv
18.4768 306.687 18.5068 306.697 18.5368 306.717 cv
18.5568 306.727 18.5968 306.767 18.6468 306.817 cv
18.6968 306.877 18.7568 306.967 18.8268 307.097 cv
18.8968 307.217 18.9668 307.367 19.0168 307.527 cv
19.0768 307.687 19.1268 307.867 19.1568 308.057 cv
19.1968 308.247 19.2168 308.437 19.2168 308.637 cv
19.2168 309.057 19.1468 309.427 19.0268 309.747 cv
18.8968 310.067 18.7168 310.337 18.4768 310.557 cv
18.2368 310.777 17.9368 310.937 17.5868 311.057 cv
17.2468 311.167 16.8368 311.227 16.3768 311.227 cv
15.8668 311.227 15.4168 311.157 15.0468 311.017 cv
14.6668 310.877 14.3668 310.687 14.1268 310.437 cv
13.8868 310.197 13.7068 309.917 13.5968 309.587 cv
13.4768 309.257 13.4268 308.897 13.4268 308.517 cv
13.4268 308.337 13.4368 308.157 13.4668 307.977 cv
13.4968 307.807 13.5468 307.647 13.5968 307.497 cv
13.6468 307.357 13.7068 307.227 13.7668 307.107 cv
13.8368 306.997 13.8868 306.917 13.9368 306.857 cv
13.9868 306.807 14.0268 306.777 14.0468 306.757 cv
14.0768 306.737 14.1068 306.717 14.1468 306.707 cv
14.1868 306.697 14.2268 306.687 14.2768 306.677 cv
14.3168 306.677 14.3768 306.677 14.4468 306.677 cv
14.5968 306.677 14.7068 306.697 14.7668 306.727 cv
14.8268 306.767 14.8568 306.817 14.8568 306.877 cv
14.8568 306.937 14.8268 307.017 14.7568 307.097 cv
14.6968 307.177 14.6268 307.287 14.5468 307.417 cv
14.4668 307.547 14.3968 307.697 14.3368 307.887 cv
14.2668 308.067 14.2368 308.277 14.2368 308.527 cv
14.2368 309.037 14.4168 309.437 14.7768 309.707 cv
15.1268 309.977 15.6468 310.117 16.3268 310.117 cv
16.6668 310.117 16.9668 310.077 17.2268 310.007 cv
17.4768 309.937 17.6968 309.837 17.8668 309.697 cv
18.0368 309.557 18.1668 309.387 18.2468 309.187 cv
18.3368 308.987 18.3768 308.767 18.3768 308.507 cv
18.3768 308.257 18.3368 308.047 18.2668 307.857 cv
18.1968 307.677 18.1168 307.517 18.0368 307.377 cv
17.9568 307.247 17.8768 307.127 17.8068 307.037 cv
17.7368 306.947 17.7068 306.877 17.7068 306.827 cv
17.7068 306.797 17.7168 306.767 17.7268 306.747 cv
17.7468 306.727 17.7668 306.707 17.8068 306.687 cv
17.8468 306.677 17.8968 306.667 17.9468 306.657 cv
18.0068 306.647 18.0768 306.647 18.1468 306.647 cv
cp
18.9468 300.057 mo
18.9768 300.057 19.0068 300.067 19.0268 300.077 cv
19.0568 300.097 19.0768 300.127 19.0868 300.167 cv
19.1068 300.207 19.1168 300.267 19.1268 300.337 cv
19.1268 300.407 19.1368 300.507 19.1368 300.617 cv
19.1368 300.727 19.1368 300.827 19.1268 300.907 cv
19.1168 300.977 19.1068 301.037 19.0968 301.097 cv
19.0868 301.147 19.0668 301.187 19.0368 301.217 cv
19.0168 301.247 18.9868 301.277 18.9468 301.307 cv
16.0268 303.757 li
18.9568 303.757 li
18.9868 303.757 19.0068 303.767 19.0368 303.777 cv
19.0568 303.797 19.0768 303.827 19.0868 303.867 cv
19.1068 303.907 19.1168 303.957 19.1268 304.027 cv
19.1268 304.097 19.1368 304.187 19.1368 304.287 cv
19.1368 304.397 19.1268 304.477 19.1268 304.547 cv
19.1168 304.617 19.1068 304.667 19.0868 304.707 cv
19.0768 304.757 19.0568 304.777 19.0368 304.797 cv
19.0068 304.807 18.9868 304.817 18.9568 304.817 cv
11.1268 304.817 li
11.0968 304.817 11.0668 304.807 11.0468 304.797 cv
11.0168 304.777 10.9968 304.757 10.9868 304.707 cv
10.9668 304.667 10.9568 304.617 10.9468 304.547 cv
10.9468 304.477 10.9368 304.397 10.9368 304.287 cv
10.9368 304.187 10.9468 304.097 10.9468 304.027 cv
10.9568 303.957 10.9668 303.907 10.9868 303.867 cv
10.9968 303.827 11.0168 303.797 11.0468 303.777 cv
11.0668 303.767 11.0968 303.757 11.1268 303.757 cv
15.8968 303.757 li
13.7068 301.567 li
13.6668 301.527 13.6368 301.497 13.6068 301.457 cv
13.5868 301.417 13.5568 301.367 13.5468 301.317 cv
13.5268 301.257 13.5168 301.197 13.5068 301.127 cv
13.5068 301.047 13.4968 300.967 13.4968 300.857 cv
13.4968 300.757 13.5068 300.667 13.5068 300.587 cv
13.5168 300.517 13.5268 300.457 13.5368 300.417 cv
13.5468 300.367 13.5668 300.337 13.5868 300.317 cv
13.6068 300.297 13.6368 300.287 13.6768 300.287 cv
13.7168 300.287 13.7668 300.297 13.8168 300.327 cv
13.8668 300.357 13.9168 300.407 13.9768 300.467 cv
15.8868 302.567 li
18.6768 300.207 li
18.7368 300.157 18.7968 300.117 18.8368 300.087 cv
18.8768 300.067 18.9168 300.057 18.9468 300.057 cv
cp
f
2.33984 605.037 mo
450.21 605.037 li
450.21 380.897 li
2.33984 380.897 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
2.33984 605.037 mo
450.21 605.037 li
450.21 380.897 li
2.33984 380.897 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
2.33984 605.037 mo
27.8518 605.037 li
27.8518 380.897 li
2.33984 380.897 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
2.33984 605.037 mo
27.8518 605.037 li
27.8518 380.897 li
2.33984 380.897 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
18.2768 561.897 mo
18.3568 561.897 18.4268 561.907 18.4768 561.937 cv
18.5368 561.967 18.5768 562.007 18.6168 562.057 cv
18.6468 562.097 18.6768 562.157 18.6868 562.207 cv
18.7068 562.267 18.7168 562.327 18.7168 562.387 cv
18.7168 562.747 li
18.7168 562.867 18.7068 562.967 18.6768 563.057 cv
18.6568 563.137 18.6168 563.217 18.5668 563.297 cv
18.5068 563.377 18.4268 563.457 18.3368 563.537 cv
18.2368 563.607 18.1068 563.697 17.9568 563.777 cv
13.6468 566.327 li
13.4268 566.457 13.1868 566.587 12.9468 566.727 cv
12.6968 566.867 12.4668 566.987 12.2368 567.107 cv
12.2368 567.117 li
12.5168 567.107 12.7968 567.107 13.0968 567.097 cv
13.3868 567.097 13.6768 567.087 13.9668 567.087 cv
18.5468 567.087 li
18.5668 567.087 18.5968 567.097 18.6268 567.117 cv
18.6468 567.137 18.6668 567.167 18.6768 567.207 cv
18.6968 567.257 18.7068 567.307 18.7168 567.377 cv
18.7268 567.447 18.7268 567.537 18.7268 567.647 cv
18.7268 567.757 18.7268 567.847 18.7168 567.917 cv
18.7068 567.987 18.6968 568.047 18.6768 568.087 cv
18.6668 568.127 18.6468 568.157 18.6268 568.177 cv
18.5968 568.187 18.5668 568.197 18.5468 568.197 cv
11.5468 568.197 li
11.3868 568.197 11.2768 568.147 11.2168 568.057 cv
11.1468 567.957 11.1168 567.847 11.1168 567.737 cv
11.1168 567.187 li
11.1168 567.057 11.1268 566.957 11.1468 566.867 cv
11.1668 566.777 11.1968 566.707 11.2368 566.637 cv
11.2868 566.567 11.3468 566.497 11.4268 566.437 cv
11.5068 566.367 11.6068 566.307 11.7268 566.227 cv
15.0568 564.277 li
15.2568 564.157 15.4568 564.037 15.6468 563.927 cv
15.8468 563.817 16.0368 563.707 16.2268 563.607 cv
16.4068 563.497 16.5968 563.397 16.7768 563.297 cv
16.9568 563.197 17.1368 563.087 17.3268 562.997 cv
17.3268 562.987 li
17.0168 562.997 16.6968 562.997 16.3568 562.997 cv
16.0268 563.007 15.7068 563.007 15.3968 563.007 cv
11.2868 563.007 li
11.2568 563.007 11.2268 562.997 11.2068 562.977 cv
11.1868 562.957 11.1668 562.927 11.1468 562.887 cv
11.1268 562.847 11.1168 562.787 11.1068 562.717 cv
11.0968 562.647 11.0968 562.557 11.0968 562.437 cv
11.0968 562.337 11.0968 562.257 11.1068 562.187 cv
11.1168 562.107 11.1268 562.057 11.1468 562.017 cv
11.1668 561.967 11.1868 561.937 11.2068 561.927 cv
11.2268 561.907 11.2568 561.897 11.2868 561.897 cv
cp
18.5568 555.707 mo
18.6068 555.707 18.6368 555.717 18.6568 555.757 cv
18.6868 555.787 18.6968 555.837 18.7168 555.897 cv
18.7268 555.957 18.7268 556.047 18.7268 556.157 cv
18.7268 556.267 18.7268 556.357 18.7168 556.427 cv
18.6968 556.497 18.6868 556.547 18.6568 556.577 cv
18.6368 556.607 18.6068 556.617 18.5568 556.617 cv
18.0268 556.617 li
18.2768 556.867 18.4668 557.157 18.6068 557.467 cv
18.7368 557.777 18.8068 558.107 18.8068 558.457 cv
18.8068 558.757 18.7668 559.037 18.6968 559.287 cv
18.6268 559.527 18.5168 559.737 18.3868 559.917 cv
18.2468 560.087 18.0768 560.227 17.8768 560.317 cv
17.6868 560.417 17.4568 560.467 17.1968 560.467 cv
16.9068 560.467 16.6468 560.397 16.4268 560.267 cv
16.2068 560.137 16.0268 559.937 15.8868 559.697 cv
15.7368 559.447 15.6268 559.137 15.5568 558.777 cv
15.4868 558.417 15.4468 558.007 15.4468 557.557 cv
15.4468 556.757 li
15.0368 556.757 li
14.8368 556.757 14.6568 556.787 14.4968 556.827 cv
14.3468 556.877 14.2168 556.957 14.1068 557.057 cv
14.0068 557.167 13.9268 557.297 13.8768 557.467 cv
13.8268 557.637 13.7968 557.847 13.7968 558.087 cv
13.7968 558.347 13.8268 558.587 13.8868 558.797 cv
13.9368 558.997 13.9968 559.187 14.0668 559.337 cv
14.1368 559.497 14.1968 559.627 14.2568 559.737 cv
14.3168 559.837 14.3468 559.917 14.3468 559.967 cv
14.3468 560.007 14.3368 560.037 14.3168 560.057 cv
14.3068 560.087 14.2768 560.107 14.2468 560.127 cv
14.2168 560.147 14.1768 560.157 14.1268 560.167 cv
14.0768 560.177 14.0268 560.187 13.9668 560.187 cv
13.8668 560.187 13.7968 560.177 13.7368 560.157 cv
13.6768 560.147 13.6268 560.107 13.5768 560.047 cv
13.5268 559.987 13.4668 559.897 13.3968 559.747 cv
13.3268 559.607 13.2668 559.447 13.2068 559.257 cv
13.1468 559.077 13.1068 558.877 13.0668 558.657 cv
13.0268 558.437 13.0168 558.217 13.0168 557.987 cv
13.0168 557.577 13.0568 557.217 13.1368 556.927 cv
13.2268 556.637 13.3568 556.397 13.5168 556.217 cv
13.6868 556.037 13.8868 555.907 14.1368 555.827 cv
14.3868 555.747 14.6668 555.707 14.9968 555.707 cv
cp
16.1468 556.757 mo
16.1468 557.667 li
16.1468 557.957 16.1668 558.217 16.2168 558.427 cv
16.2568 558.647 16.3268 558.827 16.4168 558.967 cv
16.4968 559.107 16.6068 559.207 16.7268 559.277 cv
16.8568 559.347 16.9968 559.377 17.1568 559.377 cv
17.4268 559.377 17.6468 559.277 17.8068 559.087 cv
17.9668 558.897 18.0468 558.627 18.0468 558.287 cv
18.0468 558.007 17.9868 557.747 17.8568 557.507 cv
17.7268 557.277 17.5268 557.017 17.2668 556.757 cv
cp
13.6168 549.937 mo
13.7068 549.937 13.7768 549.937 13.8368 549.937 cv
13.8968 549.947 13.9468 549.947 13.9768 549.967 cv
14.0068 549.977 14.0368 549.997 14.0568 550.017 cv
14.0668 550.037 14.0768 550.057 14.0768 550.097 cv
14.0768 550.127 14.0668 550.167 14.0568 550.217 cv
14.0368 550.267 14.0168 550.327 13.9968 550.387 cv
13.9768 550.447 13.9668 550.517 13.9468 550.597 cv
13.9368 550.677 13.9268 550.757 13.9268 550.847 cv
13.9268 550.957 13.9468 551.057 13.9868 551.167 cv
14.0268 551.267 14.0868 551.377 14.1768 551.487 cv
14.2668 551.607 14.3868 551.717 14.5368 551.847 cv
14.6868 551.967 14.8668 552.107 15.0768 552.257 cv
18.5468 552.257 li
18.5768 552.257 18.6068 552.267 18.6268 552.287 cv
18.6468 552.307 18.6668 552.327 18.6868 552.367 cv
18.6968 552.407 18.7068 552.457 18.7168 552.527 cv
18.7268 552.597 18.7268 552.687 18.7268 552.797 cv
18.7268 552.897 18.7268 552.987 18.7168 553.047 cv
18.7068 553.117 18.6968 553.177 18.6868 553.217 cv
18.6668 553.257 18.6468 553.287 18.6268 553.297 cv
18.6068 553.317 18.5768 553.327 18.5468 553.327 cv
13.2768 553.327 li
13.2468 553.327 13.2168 553.317 13.1968 553.307 cv
13.1768 553.287 13.1568 553.267 13.1368 553.227 cv
13.1168 553.187 13.1068 553.137 13.1068 553.077 cv
13.0968 553.017 13.0968 552.937 13.0968 552.837 cv
13.0968 552.747 13.0968 552.667 13.1068 552.607 cv
13.1068 552.537 13.1168 552.497 13.1368 552.457 cv
13.1568 552.427 13.1768 552.397 13.1968 552.387 cv
13.2168 552.367 13.2468 552.367 13.2768 552.367 cv
14.0468 552.367 li
13.8368 552.207 13.6568 552.057 13.5268 551.917 cv
13.3968 551.777 13.2868 551.647 13.2168 551.517 cv
13.1368 551.397 13.0868 551.267 13.0568 551.147 cv
13.0268 551.027 13.0168 550.897 13.0168 550.777 cv
13.0168 550.717 13.0168 550.657 13.0168 550.587 cv
13.0268 550.517 13.0368 550.437 13.0568 550.367 cv
13.0668 550.287 13.0868 550.217 13.1068 550.157 cv
13.1268 550.097 13.1468 550.047 13.1668 550.027 cv
13.1868 549.997 13.2068 549.977 13.2168 549.967 cv
13.2368 549.967 13.2568 549.957 13.2868 549.947 cv
13.3168 549.937 13.3568 549.937 13.4068 549.937 cv
13.4568 549.937 13.5268 549.937 13.6168 549.937 cv
cp
13.6168 545.437 mo
13.7068 545.437 13.7768 545.437 13.8368 545.437 cv
13.8968 545.447 13.9468 545.447 13.9768 545.467 cv
14.0068 545.477 14.0368 545.497 14.0568 545.517 cv
14.0668 545.537 14.0768 545.557 14.0768 545.597 cv
14.0768 545.627 14.0668 545.667 14.0568 545.717 cv
14.0368 545.767 14.0168 545.827 13.9968 545.887 cv
13.9768 545.947 13.9668 546.017 13.9468 546.097 cv
13.9368 546.177 13.9268 546.257 13.9268 546.347 cv
13.9268 546.457 13.9468 546.557 13.9868 546.667 cv
14.0268 546.767 14.0868 546.877 14.1768 546.987 cv
14.2668 547.107 14.3868 547.217 14.5368 547.347 cv
14.6868 547.467 14.8668 547.607 15.0768 547.757 cv
18.5468 547.757 li
18.5768 547.757 18.6068 547.767 18.6268 547.787 cv
18.6468 547.807 18.6668 547.827 18.6868 547.867 cv
18.6968 547.907 18.7068 547.957 18.7168 548.027 cv
18.7268 548.097 18.7268 548.187 18.7268 548.297 cv
18.7268 548.397 18.7268 548.487 18.7168 548.547 cv
18.7068 548.617 18.6968 548.677 18.6868 548.717 cv
18.6668 548.757 18.6468 548.787 18.6268 548.797 cv
18.6068 548.817 18.5768 548.827 18.5468 548.827 cv
13.2768 548.827 li
13.2468 548.827 13.2168 548.817 13.1968 548.807 cv
13.1768 548.787 13.1568 548.767 13.1368 548.727 cv
13.1168 548.687 13.1068 548.637 13.1068 548.577 cv
13.0968 548.517 13.0968 548.437 13.0968 548.337 cv
13.0968 548.247 13.0968 548.167 13.1068 548.107 cv
13.1068 548.037 13.1168 547.997 13.1368 547.957 cv
13.1568 547.927 13.1768 547.897 13.1968 547.887 cv
13.2168 547.867 13.2468 547.867 13.2768 547.867 cv
14.0468 547.867 li
13.8368 547.707 13.6568 547.557 13.5268 547.417 cv
13.3968 547.277 13.2868 547.147 13.2168 547.017 cv
13.1368 546.897 13.0868 546.767 13.0568 546.647 cv
13.0268 546.527 13.0168 546.397 13.0168 546.277 cv
13.0168 546.217 13.0168 546.157 13.0168 546.087 cv
13.0268 546.017 13.0368 545.937 13.0568 545.867 cv
13.0668 545.787 13.0868 545.717 13.1068 545.657 cv
13.1268 545.597 13.1468 545.547 13.1668 545.527 cv
13.1868 545.497 13.2068 545.477 13.2168 545.467 cv
13.2368 545.467 13.2568 545.457 13.2868 545.447 cv
13.3168 545.437 13.3568 545.437 13.4068 545.437 cv
13.4568 545.437 13.5268 545.437 13.6168 545.437 cv
cp
15.8568 538.927 mo
16.2868 538.927 16.6768 538.987 17.0368 539.117 cv
17.3968 539.237 17.7168 539.427 17.9768 539.677 cv
18.2368 539.917 18.4368 540.227 18.5868 540.597 cv
18.7368 540.977 18.8068 541.407 18.8068 541.897 cv
18.8068 542.367 18.7468 542.787 18.6168 543.137 cv
18.4868 543.497 18.2968 543.787 18.0468 544.027 cv
17.8068 544.267 17.5068 544.437 17.1568 544.557 cv
16.8068 544.667 16.4068 544.727 15.9568 544.727 cv
15.5268 544.727 15.1368 544.667 14.7768 544.547 cv
14.4068 544.427 14.0968 544.237 13.8368 543.987 cv
13.5768 543.747 13.3768 543.437 13.2268 543.067 cv
13.0868 542.697 13.0168 542.267 13.0168 541.767 cv
13.0168 541.297 13.0768 540.877 13.2068 540.527 cv
13.3368 540.167 13.5168 539.877 13.7668 539.637 cv
14.0168 539.397 14.3168 539.227 14.6668 539.107 cv
15.0168 538.987 15.4168 538.927 15.8568 538.927 cv
cp
15.9168 540.027 mo
15.6368 540.027 15.3668 540.057 15.1068 540.117 cv
14.8568 540.177 14.6368 540.277 14.4368 540.407 cv
14.2468 540.537 14.0968 540.727 13.9868 540.957 cv
13.8768 541.187 13.8168 541.467 13.8168 541.817 cv
13.8168 542.127 13.8668 542.397 13.9768 542.627 cv
14.0768 542.857 14.2168 543.047 14.4068 543.187 cv
14.5868 543.337 14.8068 543.447 15.0668 543.517 cv
15.3168 543.587 15.5968 543.627 15.8968 543.627 cv
16.1868 543.627 16.4568 543.597 16.7068 543.537 cv
16.9668 543.477 17.1868 543.387 17.3768 543.247 cv
17.5668 543.107 17.7168 542.927 17.8268 542.697 cv
17.9368 542.467 17.9968 542.177 17.9968 541.837 cv
17.9968 541.527 17.9368 541.257 17.8368 541.027 cv
17.7368 540.797 17.5968 540.607 17.4168 540.457 cv
17.2268 540.307 17.0068 540.207 16.7568 540.137 cv
16.5068 540.067 16.2268 540.027 15.9168 540.027 cv
cp
13.2668 529.457 mo
13.2868 529.457 13.3268 529.467 13.3668 529.467 cv
13.4068 529.477 13.4468 529.497 13.5068 529.517 cv
18.5168 531.227 li
18.5668 531.237 18.5968 531.257 18.6268 531.287 cv
18.6568 531.317 18.6768 531.347 18.6868 531.397 cv
18.7068 531.447 18.7168 531.517 18.7268 531.607 cv
18.7268 531.687 18.7268 531.797 18.7268 531.927 cv
18.7268 532.057 18.7268 532.167 18.7168 532.257 cv
18.7068 532.347 18.6968 532.427 18.6868 532.477 cv
18.6668 532.527 18.6468 532.567 18.6168 532.597 cv
18.5968 532.627 18.5568 532.637 18.5168 532.657 cv
14.6968 533.877 li
14.6368 533.887 li
14.6968 533.897 li
18.5168 535.027 li
18.5668 535.037 18.5968 535.057 18.6268 535.087 cv
18.6568 535.117 18.6768 535.157 18.6868 535.217 cv
18.7068 535.267 18.7168 535.337 18.7268 535.427 cv
18.7268 535.517 18.7268 535.627 18.7268 535.757 cv
18.7268 535.887 18.7268 535.997 18.7168 536.077 cv
18.7068 536.167 18.6968 536.237 18.6868 536.287 cv
18.6668 536.337 18.6468 536.377 18.6168 536.407 cv
18.5968 536.427 18.5568 536.447 18.5168 536.467 cv
13.5068 538.157 li
13.4468 538.177 13.4068 538.197 13.3668 538.207 cv
13.3268 538.217 13.2868 538.217 13.2668 538.217 cv
13.2268 538.217 13.1968 538.207 13.1768 538.187 cv
13.1568 538.177 13.1368 538.147 13.1268 538.107 cv
13.1168 538.067 13.1068 538.007 13.0968 537.937 cv
13.0968 537.867 13.0968 537.787 13.0968 537.687 cv
13.0968 537.567 13.0968 537.467 13.1068 537.397 cv
13.1068 537.327 13.1168 537.267 13.1368 537.227 cv
13.1468 537.197 13.1668 537.167 13.1868 537.147 cv
13.2168 537.127 13.2468 537.117 13.2768 537.107 cv
17.6268 535.707 li
17.6868 535.687 li
17.6268 535.677 li
13.2768 534.397 li
13.2468 534.387 13.2168 534.377 13.1868 534.357 cv
13.1668 534.337 13.1468 534.307 13.1368 534.267 cv
13.1168 534.227 13.1068 534.177 13.1068 534.107 cv
13.0968 534.037 13.0968 533.957 13.0968 533.847 cv
13.0968 533.747 13.0968 533.657 13.1068 533.597 cv
13.1068 533.527 13.1168 533.477 13.1368 533.437 cv
13.1468 533.397 13.1668 533.367 13.1868 533.347 cv
13.2068 533.337 13.2368 533.317 13.2668 533.317 cv
17.6268 531.927 li
17.6868 531.917 li
17.6268 531.907 li
13.2768 530.527 li
13.2468 530.517 13.2168 530.507 13.1868 530.487 cv
13.1668 530.467 13.1468 530.437 13.1368 530.397 cv
13.1168 530.357 13.1068 530.297 13.1068 530.227 cv
13.0968 530.157 13.0968 530.067 13.0968 529.957 cv
13.0968 529.847 13.0968 529.767 13.0968 529.707 cv
13.1068 529.647 13.1168 529.597 13.1268 529.557 cv
13.1468 529.517 13.1668 529.497 13.1868 529.477 cv
13.1968 529.467 13.2268 529.457 13.2668 529.457 cv
cp
14.7968 518.287 mo
15.4468 518.287 16.0268 518.377 16.5168 518.567 cv
17.0068 518.747 17.4068 519.017 17.7268 519.377 cv
18.0568 519.727 18.2968 520.167 18.4568 520.677 cv
18.6168 521.197 18.6968 521.807 18.6968 522.517 cv
18.6968 524.287 li
18.6968 524.387 18.6668 524.477 18.6068 524.567 cv
18.5468 524.657 18.4368 524.697 18.2868 524.697 cv
11.5268 524.697 li
11.3668 524.697 11.2668 524.657 11.2068 524.567 cv
11.1468 524.477 11.1168 524.387 11.1168 524.287 cv
11.1168 522.397 li
11.1168 521.677 11.1968 521.067 11.3668 520.567 cv
11.5368 520.067 11.7868 519.657 12.0968 519.317 cv
12.4168 518.977 12.8068 518.727 13.2568 518.547 cv
13.7068 518.377 14.2268 518.287 14.7968 518.287 cv
cp
14.8368 519.457 mo
14.4268 519.457 14.0468 519.507 13.6868 519.617 cv
13.3368 519.737 13.0268 519.907 12.7668 520.147 cv
12.5168 520.387 12.3168 520.687 12.1668 521.057 cv
12.0268 521.417 11.9468 521.887 11.9468 522.467 cv
11.9468 523.587 li
17.8568 523.587 li
17.8568 522.447 li
17.8568 521.917 17.7868 521.467 17.6668 521.107 cv
17.5468 520.737 17.3668 520.437 17.1168 520.187 cv
16.8668 519.947 16.5468 519.757 16.1768 519.637 cv
15.7968 519.517 15.3468 519.457 14.8368 519.457 cv
cp
15.8568 511.177 mo
16.2868 511.177 16.6768 511.237 17.0368 511.367 cv
17.3968 511.487 17.7168 511.677 17.9768 511.927 cv
18.2368 512.167 18.4368 512.477 18.5868 512.847 cv
18.7368 513.227 18.8068 513.657 18.8068 514.147 cv
18.8068 514.617 18.7468 515.037 18.6168 515.387 cv
18.4868 515.747 18.2968 516.037 18.0468 516.277 cv
17.8068 516.517 17.5068 516.687 17.1568 516.807 cv
16.8068 516.917 16.4068 516.977 15.9568 516.977 cv
15.5268 516.977 15.1368 516.917 14.7768 516.797 cv
14.4068 516.677 14.0968 516.487 13.8368 516.237 cv
13.5768 515.997 13.3768 515.687 13.2268 515.317 cv
13.0868 514.947 13.0168 514.517 13.0168 514.017 cv
13.0168 513.547 13.0768 513.127 13.2068 512.777 cv
13.3368 512.417 13.5168 512.127 13.7668 511.887 cv
14.0168 511.647 14.3168 511.477 14.6668 511.357 cv
15.0168 511.237 15.4168 511.177 15.8568 511.177 cv
cp
15.9168 512.277 mo
15.6368 512.277 15.3668 512.307 15.1068 512.367 cv
14.8568 512.427 14.6368 512.527 14.4368 512.657 cv
14.2468 512.787 14.0968 512.977 13.9868 513.207 cv
13.8768 513.437 13.8168 513.717 13.8168 514.067 cv
13.8168 514.377 13.8668 514.647 13.9768 514.877 cv
14.0768 515.107 14.2168 515.297 14.4068 515.437 cv
14.5868 515.587 14.8068 515.697 15.0668 515.767 cv
15.3168 515.837 15.5968 515.877 15.8968 515.877 cv
16.1868 515.877 16.4568 515.847 16.7068 515.787 cv
16.9668 515.727 17.1868 515.637 17.3768 515.497 cv
17.5668 515.357 17.7168 515.177 17.8268 514.947 cv
17.9368 514.717 17.9968 514.427 17.9968 514.087 cv
17.9968 513.777 17.9368 513.507 17.8368 513.277 cv
17.7368 513.047 17.5968 512.857 17.4168 512.707 cv
17.2268 512.557 17.0068 512.457 16.7568 512.387 cv
16.5068 512.317 16.2268 512.277 15.9168 512.277 cv
cp
13.2668 501.707 mo
13.2868 501.707 13.3268 501.717 13.3668 501.717 cv
13.4068 501.727 13.4468 501.747 13.5068 501.767 cv
18.5168 503.477 li
18.5668 503.487 18.5968 503.507 18.6268 503.537 cv
18.6568 503.567 18.6768 503.597 18.6868 503.647 cv
18.7068 503.697 18.7168 503.767 18.7268 503.857 cv
18.7268 503.937 18.7268 504.047 18.7268 504.177 cv
18.7268 504.307 18.7268 504.417 18.7168 504.507 cv
18.7068 504.597 18.6968 504.677 18.6868 504.727 cv
18.6668 504.777 18.6468 504.817 18.6168 504.847 cv
18.5968 504.877 18.5568 504.887 18.5168 504.907 cv
14.6968 506.127 li
14.6368 506.137 li
14.6968 506.147 li
18.5168 507.277 li
18.5668 507.287 18.5968 507.307 18.6268 507.337 cv
18.6568 507.367 18.6768 507.407 18.6868 507.467 cv
18.7068 507.517 18.7168 507.587 18.7268 507.677 cv
18.7268 507.767 18.7268 507.877 18.7268 508.007 cv
18.7268 508.137 18.7268 508.247 18.7168 508.327 cv
18.7068 508.417 18.6968 508.487 18.6868 508.537 cv
18.6668 508.587 18.6468 508.627 18.6168 508.657 cv
18.5968 508.677 18.5568 508.697 18.5168 508.717 cv
13.5068 510.407 li
13.4468 510.427 13.4068 510.447 13.3668 510.457 cv
13.3268 510.467 13.2868 510.467 13.2668 510.467 cv
13.2268 510.467 13.1968 510.457 13.1768 510.437 cv
13.1568 510.427 13.1368 510.397 13.1268 510.357 cv
13.1168 510.317 13.1068 510.257 13.0968 510.187 cv
13.0968 510.117 13.0968 510.037 13.0968 509.937 cv
13.0968 509.817 13.0968 509.717 13.1068 509.647 cv
13.1068 509.577 13.1168 509.517 13.1368 509.477 cv
13.1468 509.447 13.1668 509.417 13.1868 509.397 cv
13.2168 509.377 13.2468 509.367 13.2768 509.357 cv
17.6268 507.957 li
17.6868 507.937 li
17.6268 507.927 li
13.2768 506.647 li
13.2468 506.637 13.2168 506.627 13.1868 506.607 cv
13.1668 506.587 13.1468 506.557 13.1368 506.517 cv
13.1168 506.477 13.1068 506.427 13.1068 506.357 cv
13.0968 506.287 13.0968 506.207 13.0968 506.097 cv
13.0968 505.997 13.0968 505.907 13.1068 505.847 cv
13.1068 505.777 13.1168 505.727 13.1368 505.687 cv
13.1468 505.647 13.1668 505.617 13.1868 505.597 cv
13.2068 505.587 13.2368 505.567 13.2668 505.567 cv
17.6268 504.177 li
17.6868 504.167 li
17.6268 504.157 li
13.2768 502.777 li
13.2468 502.767 13.2168 502.757 13.1868 502.737 cv
13.1668 502.717 13.1468 502.687 13.1368 502.647 cv
13.1168 502.607 13.1068 502.547 13.1068 502.477 cv
13.0968 502.407 13.0968 502.317 13.0968 502.207 cv
13.0968 502.097 13.0968 502.017 13.0968 501.957 cv
13.1068 501.897 13.1168 501.847 13.1268 501.807 cv
13.1468 501.767 13.1668 501.747 13.1868 501.727 cv
13.1968 501.717 13.2268 501.707 13.2668 501.707 cv
cp
18.5468 495.077 mo
18.5768 495.077 18.6068 495.087 18.6268 495.107 cv
18.6468 495.117 18.6668 495.147 18.6868 495.187 cv
18.6968 495.227 18.7068 495.277 18.7168 495.347 cv
18.7268 495.417 18.7268 495.507 18.7268 495.607 cv
18.7268 495.717 18.7268 495.797 18.7168 495.867 cv
18.7068 495.937 18.6968 495.997 18.6868 496.027 cv
18.6668 496.067 18.6468 496.097 18.6268 496.117 cv
18.6068 496.137 18.5768 496.137 18.5468 496.137 cv
15.4568 496.137 li
15.1568 496.137 14.9168 496.167 14.7368 496.217 cv
14.5468 496.267 14.3968 496.347 14.2568 496.447 cv
14.1268 496.547 14.0268 496.667 13.9568 496.827 cv
13.8868 496.987 13.8468 497.167 13.8468 497.367 cv
13.8468 497.637 13.9368 497.907 14.1068 498.167 cv
14.2768 498.437 14.5268 498.717 14.8668 499.007 cv
18.5468 499.007 li
18.5768 499.007 18.6068 499.017 18.6268 499.037 cv
18.6468 499.057 18.6668 499.077 18.6868 499.117 cv
18.6968 499.157 18.7068 499.207 18.7168 499.277 cv
18.7268 499.347 18.7268 499.437 18.7268 499.547 cv
18.7268 499.647 18.7268 499.737 18.7168 499.797 cv
18.7068 499.867 18.6968 499.927 18.6868 499.967 cv
18.6668 500.007 18.6468 500.037 18.6268 500.047 cv
18.6068 500.067 18.5768 500.077 18.5468 500.077 cv
13.2768 500.077 li
13.2468 500.077 13.2168 500.067 13.1968 500.057 cv
13.1768 500.037 13.1568 500.017 13.1368 499.977 cv
13.1168 499.937 13.1068 499.887 13.1068 499.827 cv
13.0968 499.767 13.0968 499.687 13.0968 499.587 cv
13.0968 499.497 13.0968 499.417 13.1068 499.357 cv
13.1068 499.287 13.1168 499.247 13.1368 499.207 cv
13.1568 499.177 13.1768 499.147 13.1968 499.137 cv
13.2168 499.117 13.2468 499.117 13.2768 499.117 cv
13.9768 499.117 li
13.6368 498.787 13.3968 498.457 13.2468 498.137 cv
13.0868 497.807 13.0168 497.487 13.0168 497.157 cv
13.0168 496.767 13.0668 496.437 13.1868 496.177 cv
13.3068 495.917 13.4668 495.697 13.6668 495.537 cv
13.8668 495.367 14.0968 495.257 14.3668 495.187 cv
14.6368 495.117 14.9568 495.077 15.3368 495.077 cv
cp
11.1068 487.147 mo
11.1868 487.147 11.2368 487.147 11.2868 487.157 cv
11.3268 487.167 11.3668 487.177 11.3968 487.187 cv
11.4268 487.197 11.4368 487.207 11.4468 487.227 cv
11.4568 487.247 11.4668 487.267 11.4668 487.297 cv
11.4668 487.327 11.4568 487.357 11.4368 487.407 cv
11.4168 487.447 11.3968 487.507 11.3768 487.567 cv
11.3568 487.637 11.3368 487.707 11.3168 487.797 cv
11.3068 487.887 11.2968 487.987 11.2968 488.107 cv
11.2968 488.267 11.3168 488.397 11.3668 488.507 cv
11.4168 488.627 11.4868 488.717 11.5868 488.787 cv
11.6868 488.847 11.8168 488.897 11.9768 488.927 cv
12.1268 488.957 12.3268 488.977 12.5468 488.977 cv
13.1268 488.977 li
13.1268 487.677 li
13.1268 487.647 13.1268 487.617 13.1468 487.597 cv
13.1568 487.567 13.1768 487.547 13.2168 487.527 cv
13.2468 487.507 13.2868 487.497 13.3368 487.487 cv
13.3868 487.477 13.4568 487.467 13.5268 487.467 cv
13.6668 487.467 13.7668 487.487 13.8368 487.527 cv
13.8968 487.567 13.9268 487.617 13.9268 487.677 cv
13.9268 488.977 li
18.5468 488.977 li
18.5768 488.977 18.6068 488.987 18.6268 488.997 cv
18.6468 489.017 18.6668 489.047 18.6868 489.087 cv
18.6968 489.127 18.7068 489.187 18.7168 489.257 cv
18.7268 489.317 18.7268 489.407 18.7268 489.507 cv
18.7268 489.617 18.7268 489.697 18.7168 489.767 cv
18.7068 489.837 18.6968 489.887 18.6868 489.937 cv
18.6668 489.977 18.6468 490.007 18.6268 490.017 cv
18.6068 490.037 18.5768 490.047 18.5468 490.047 cv
13.9268 490.047 li
13.9268 490.867 li
13.9268 490.937 13.8968 490.987 13.8368 491.017 cv
13.7668 491.057 13.6668 491.067 13.5268 491.067 cv
13.4568 491.067 13.3868 491.067 13.3368 491.057 cv
13.2868 491.047 13.2468 491.037 13.2168 491.017 cv
13.1768 490.997 13.1568 490.977 13.1468 490.957 cv
13.1268 490.927 13.1268 490.897 13.1268 490.867 cv
13.1268 490.047 li
12.5768 490.047 li
12.2068 490.047 11.8968 490.007 11.6368 489.937 cv
11.3668 489.857 11.1568 489.747 10.9868 489.587 cv
10.8168 489.437 10.6968 489.237 10.6168 489.007 cv
10.5368 488.767 10.4968 488.497 10.4968 488.177 cv
10.4968 488.027 10.5068 487.877 10.5268 487.737 cv
10.5568 487.597 10.5868 487.487 10.6168 487.407 cv
10.6368 487.327 10.6668 487.277 10.6868 487.257 cv
10.7168 487.227 10.7468 487.207 10.7868 487.187 cv
10.8168 487.177 10.8668 487.157 10.9168 487.157 cv
10.9668 487.147 11.0368 487.147 11.1068 487.147 cv
cp
18.5568 482.207 mo
18.6068 482.207 18.6368 482.217 18.6568 482.257 cv
18.6868 482.287 18.6968 482.337 18.7168 482.397 cv
18.7268 482.457 18.7268 482.547 18.7268 482.657 cv
18.7268 482.767 18.7268 482.857 18.7168 482.927 cv
18.6968 482.997 18.6868 483.047 18.6568 483.077 cv
18.6368 483.107 18.6068 483.117 18.5568 483.117 cv
18.0268 483.117 li
18.2768 483.367 18.4668 483.657 18.6068 483.967 cv
18.7368 484.277 18.8068 484.607 18.8068 484.957 cv
18.8068 485.257 18.7668 485.537 18.6968 485.787 cv
18.6268 486.027 18.5168 486.237 18.3868 486.417 cv
18.2468 486.587 18.0768 486.727 17.8768 486.817 cv
17.6868 486.917 17.4568 486.967 17.1968 486.967 cv
16.9068 486.967 16.6468 486.897 16.4268 486.767 cv
16.2068 486.637 16.0268 486.437 15.8868 486.197 cv
15.7368 485.947 15.6268 485.637 15.5568 485.277 cv
15.4868 484.917 15.4468 484.507 15.4468 484.057 cv
15.4468 483.257 li
15.0368 483.257 li
14.8368 483.257 14.6568 483.287 14.4968 483.327 cv
14.3468 483.377 14.2168 483.457 14.1068 483.557 cv
14.0068 483.667 13.9268 483.797 13.8768 483.967 cv
13.8268 484.137 13.7968 484.347 13.7968 484.587 cv
13.7968 484.847 13.8268 485.087 13.8868 485.297 cv
13.9368 485.497 13.9968 485.687 14.0668 485.837 cv
14.1368 485.997 14.1968 486.127 14.2568 486.237 cv
14.3168 486.337 14.3468 486.417 14.3468 486.467 cv
14.3468 486.507 14.3368 486.537 14.3168 486.557 cv
14.3068 486.587 14.2768 486.607 14.2468 486.627 cv
14.2168 486.647 14.1768 486.657 14.1268 486.667 cv
14.0768 486.677 14.0268 486.687 13.9668 486.687 cv
13.8668 486.687 13.7968 486.677 13.7368 486.657 cv
13.6768 486.647 13.6268 486.607 13.5768 486.547 cv
13.5268 486.487 13.4668 486.397 13.3968 486.247 cv
13.3268 486.107 13.2668 485.947 13.2068 485.757 cv
13.1468 485.577 13.1068 485.377 13.0668 485.157 cv
13.0268 484.937 13.0168 484.717 13.0168 484.487 cv
13.0168 484.077 13.0568 483.717 13.1368 483.427 cv
13.2268 483.137 13.3568 482.897 13.5168 482.717 cv
13.6868 482.537 13.8868 482.407 14.1368 482.327 cv
14.3868 482.247 14.6668 482.207 14.9968 482.207 cv
cp
16.1468 483.257 mo
16.1468 484.167 li
16.1468 484.457 16.1668 484.717 16.2168 484.927 cv
16.2568 485.147 16.3268 485.327 16.4168 485.467 cv
16.4968 485.607 16.6068 485.707 16.7268 485.777 cv
16.8568 485.847 16.9968 485.877 17.1568 485.877 cv
17.4268 485.877 17.6468 485.777 17.8068 485.587 cv
17.9668 485.397 18.0468 485.127 18.0468 484.787 cv
18.0468 484.507 17.9868 484.247 17.8568 484.007 cv
17.7268 483.777 17.5268 483.517 17.2668 483.257 cv
cp
18.5468 474.857 mo
18.5768 474.857 18.6068 474.857 18.6268 474.877 cv
18.6468 474.887 18.6668 474.917 18.6868 474.957 cv
18.6968 474.997 18.7068 475.047 18.7168 475.107 cv
18.7268 475.167 18.7268 475.247 18.7268 475.337 cv
18.7268 475.437 18.7268 475.517 18.7168 475.577 cv
18.7068 475.637 18.6968 475.687 18.6868 475.727 cv
18.6668 475.767 18.6468 475.787 18.6268 475.797 cv
18.6068 475.817 18.5768 475.817 18.5468 475.817 cv
17.8568 475.817 li
18.1868 476.147 18.4268 476.477 18.5768 476.797 cv
18.7268 477.117 18.8068 477.447 18.8068 477.777 cv
18.8068 478.167 18.7468 478.487 18.6268 478.757 cv
18.5168 479.017 18.3568 479.237 18.1568 479.397 cv
17.9568 479.557 17.7168 479.677 17.4468 479.747 cv
17.1868 479.817 16.8568 479.857 16.4768 479.857 cv
13.2768 479.857 li
13.2468 479.857 13.2168 479.847 13.1968 479.837 cv
13.1768 479.817 13.1568 479.787 13.1368 479.747 cv
13.1168 479.707 13.1068 479.647 13.1068 479.577 cv
13.0968 479.507 13.0968 479.427 13.0968 479.317 cv
13.0968 479.217 13.0968 479.127 13.1068 479.067 cv
13.1068 478.997 13.1168 478.937 13.1368 478.897 cv
13.1568 478.857 13.1768 478.827 13.1968 478.807 cv
13.2168 478.797 13.2468 478.787 13.2768 478.787 cv
16.3468 478.787 li
16.6568 478.787 16.8968 478.757 17.0868 478.707 cv
17.2768 478.657 17.4268 478.587 17.5568 478.487 cv
17.6968 478.387 17.7968 478.257 17.8668 478.097 cv
17.9368 477.947 17.9768 477.767 17.9768 477.557 cv
17.9768 477.297 17.8868 477.027 17.7168 476.767 cv
17.5468 476.497 17.2968 476.217 16.9568 475.927 cv
13.2768 475.927 li
13.2468 475.927 13.2168 475.917 13.1968 475.897 cv
13.1768 475.887 13.1568 475.857 13.1368 475.817 cv
13.1168 475.767 13.1068 475.717 13.1068 475.647 cv
13.0968 475.587 13.0968 475.497 13.0968 475.387 cv
13.0968 475.287 13.0968 475.197 13.1068 475.127 cv
13.1068 475.057 13.1168 475.007 13.1368 474.967 cv
13.1568 474.927 13.1768 474.897 13.1968 474.887 cv
13.2168 474.867 13.2468 474.857 13.2768 474.857 cv
cp
18.5468 472.007 mo
18.5768 472.007 18.6068 472.017 18.6268 472.037 cv
18.6468 472.057 18.6668 472.077 18.6868 472.117 cv
18.6968 472.157 18.7068 472.207 18.7168 472.277 cv
18.7268 472.347 18.7268 472.437 18.7268 472.547 cv
18.7268 472.647 18.7268 472.737 18.7168 472.797 cv
18.7068 472.867 18.6968 472.927 18.6868 472.967 cv
18.6668 473.007 18.6468 473.037 18.6268 473.047 cv
18.6068 473.067 18.5768 473.077 18.5468 473.077 cv
10.7168 473.077 li
10.6868 473.077 10.6668 473.067 10.6368 473.047 cv
10.6168 473.037 10.5968 473.007 10.5768 472.967 cv
10.5668 472.927 10.5568 472.867 10.5468 472.797 cv
10.5368 472.737 10.5368 472.647 10.5368 472.547 cv
10.5368 472.437 10.5368 472.347 10.5468 472.277 cv
10.5568 472.207 10.5668 472.157 10.5768 472.117 cv
10.5968 472.077 10.6168 472.057 10.6368 472.037 cv
10.6668 472.017 10.6868 472.007 10.7168 472.007 cv
cp
18.1668 467.057 mo
18.2768 467.057 18.3668 467.067 18.4368 467.077 cv
18.4968 467.097 18.5468 467.127 18.5768 467.157 cv
18.6068 467.197 18.6368 467.247 18.6668 467.317 cv
18.6968 467.387 18.7168 467.457 18.7368 467.547 cv
18.7468 467.637 18.7668 467.727 18.7768 467.827 cv
18.7868 467.927 18.7968 468.027 18.7968 468.127 cv
18.7968 468.427 18.7568 468.687 18.6868 468.897 cv
18.6168 469.117 18.5068 469.287 18.3568 469.427 cv
18.2168 469.567 18.0268 469.667 17.8068 469.727 cv
17.5768 469.787 17.3168 469.817 17.0068 469.817 cv
13.9268 469.817 li
13.9268 470.637 li
13.9268 470.697 13.8968 470.747 13.8368 470.787 cv
13.7668 470.827 13.6668 470.847 13.5268 470.847 cv
13.4568 470.847 13.3868 470.837 13.3368 470.827 cv
13.2868 470.817 13.2468 470.807 13.2168 470.787 cv
13.1768 470.767 13.1568 470.747 13.1468 470.717 cv
13.1268 470.697 13.1268 470.657 13.1268 470.627 cv
13.1268 469.817 li
11.8668 469.817 li
11.8468 469.817 11.8168 469.817 11.7968 469.797 cv
11.7668 469.787 11.7468 469.757 11.7268 469.717 cv
11.7168 469.677 11.6968 469.617 11.6968 469.547 cv
11.6868 469.477 11.6868 469.397 11.6868 469.297 cv
11.6868 469.187 11.6868 469.097 11.6968 469.027 cv
11.6968 468.957 11.7168 468.907 11.7268 468.867 cv
11.7468 468.827 11.7668 468.797 11.7968 468.787 cv
11.8168 468.767 11.8468 468.757 11.8668 468.757 cv
13.1268 468.757 li
13.1268 467.267 li
13.1268 467.237 13.1268 467.207 13.1468 467.177 cv
13.1568 467.157 13.1768 467.127 13.2168 467.107 cv
13.2468 467.087 13.2868 467.077 13.3368 467.067 cv
13.3868 467.057 13.4568 467.057 13.5268 467.057 cv
13.6668 467.057 13.7668 467.077 13.8368 467.117 cv
13.8968 467.157 13.9268 467.207 13.9268 467.267 cv
13.9268 468.757 li
16.8668 468.757 li
17.2268 468.757 17.5068 468.697 17.6868 468.577 cv
17.8768 468.467 17.9668 468.247 17.9668 467.947 cv
17.9668 467.847 17.9568 467.757 17.9468 467.677 cv
17.9268 467.607 17.9068 467.537 17.8868 467.477 cv
17.8668 467.417 17.8468 467.367 17.8268 467.317 cv
17.8168 467.277 17.8068 467.237 17.8068 467.207 cv
17.8068 467.187 17.8068 467.167 17.8168 467.147 cv
17.8268 467.127 17.8468 467.107 17.8768 467.097 cv
17.9068 467.087 17.9368 467.077 17.9868 467.067 cv
18.0368 467.057 18.0968 467.057 18.1668 467.057 cv
cp
18.6968 462.927 mo
20.6368 463.707 li
20.6968 463.727 20.7468 463.797 20.7768 463.897 cv
20.8068 464.007 20.8268 464.167 20.8268 464.377 cv
20.8268 464.487 20.8268 464.587 20.8168 464.647 cv
20.8068 464.717 20.7868 464.777 20.7668 464.807 cv
20.7368 464.847 20.7068 464.867 20.6668 464.867 cv
20.6268 464.877 20.5868 464.867 20.5268 464.837 cv
18.6968 464.037 li
18.6768 464.077 18.6568 464.117 18.6168 464.147 cv
18.5868 464.187 18.5468 464.207 18.5068 464.217 cv
13.4668 466.287 li
13.3868 466.327 13.3268 466.337 13.2768 466.337 cv
13.2268 466.337 13.1868 466.327 13.1668 466.287 cv
13.1368 466.257 13.1168 466.197 13.1068 466.117 cv
13.0968 466.047 13.0968 465.937 13.0968 465.807 cv
13.0968 465.687 13.0968 465.577 13.1068 465.507 cv
13.1068 465.437 13.1168 465.377 13.1368 465.337 cv
13.1468 465.287 13.1768 465.257 13.2068 465.237 cv
13.2268 465.217 13.2668 465.197 13.3268 465.177 cv
17.5568 463.527 li
17.5568 463.507 li
13.2968 461.907 li
13.2268 461.877 13.1768 461.847 13.1568 461.807 cv
13.1368 461.777 13.1168 461.717 13.1068 461.647 cv
13.0968 461.577 13.0968 461.467 13.0968 461.327 cv
13.0968 461.207 13.0968 461.117 13.1068 461.037 cv
13.1168 460.957 13.1368 460.897 13.1668 460.867 cv
13.1868 460.827 13.2268 460.807 13.2768 460.807 cv
13.3268 460.807 13.3768 460.827 13.4468 460.847 cv
cp
17.1168 452.927 mo
17.3868 452.927 17.6268 452.987 17.8368 453.097 cv
18.0468 453.207 18.2268 453.357 18.3668 453.567 cv
18.5168 453.767 18.6168 454.007 18.6968 454.287 cv
18.7668 454.567 18.8068 454.867 18.8068 455.207 cv
18.8068 455.417 18.7968 455.607 18.7668 455.797 cv
18.7368 455.987 18.6968 456.147 18.6468 456.297 cv
18.6068 456.447 18.5568 456.577 18.5068 456.677 cv
18.4668 456.777 18.4168 456.857 18.3768 456.897 cv
18.3368 456.947 18.2868 456.987 18.2168 457.007 cv
18.1468 457.027 18.0468 457.037 17.9268 457.037 cv
17.8568 457.037 17.7868 457.037 17.7368 457.027 cv
17.6868 457.017 17.6468 457.007 17.6168 456.987 cv
17.5868 456.977 17.5668 456.957 17.5468 456.937 cv
17.5368 456.917 17.5268 456.887 17.5268 456.857 cv
17.5268 456.807 17.5568 456.737 17.6068 456.647 cv
17.6568 456.557 17.7168 456.437 17.7768 456.307 cv
17.8468 456.167 17.8968 456.007 17.9568 455.827 cv
18.0068 455.637 18.0368 455.427 18.0368 455.187 cv
18.0368 455.007 18.0168 454.847 17.9768 454.697 cv
17.9468 454.547 17.8968 454.427 17.8268 454.317 cv
17.7568 454.207 17.6668 454.127 17.5668 454.067 cv
17.4568 454.007 17.3368 453.977 17.1868 453.977 cv
17.0368 453.977 16.9168 454.027 16.8168 454.107 cv
16.7168 454.187 16.6268 454.297 16.5468 454.437 cv
16.4668 454.577 16.3968 454.727 16.3368 454.907 cv
16.2768 455.077 16.2168 455.257 16.1468 455.437 cv
16.0768 455.617 16.0068 455.797 15.9168 455.967 cv
15.8368 456.147 15.7368 456.297 15.6168 456.437 cv
15.4968 456.577 15.3468 456.687 15.1768 456.767 cv
15.0168 456.857 14.8068 456.897 14.5768 456.897 cv
14.3668 456.897 14.1668 456.847 13.9768 456.767 cv
13.7968 456.677 13.6268 456.547 13.4868 456.367 cv
13.3368 456.187 13.2268 455.967 13.1368 455.707 cv
13.0568 455.437 13.0168 455.137 13.0168 454.777 cv
13.0168 454.627 13.0268 454.467 13.0468 454.317 cv
13.0668 454.157 13.0968 454.027 13.1368 453.897 cv
13.1668 453.777 13.2068 453.667 13.2468 453.577 cv
13.2868 453.487 13.3268 453.427 13.3568 453.377 cv
13.3868 453.337 13.4168 453.307 13.4368 453.287 cv
13.4668 453.277 13.4868 453.267 13.5168 453.257 cv
13.5468 453.247 13.5868 453.247 13.6268 453.237 cv
13.6668 453.227 13.7268 453.227 13.7868 453.227 cv
13.8468 453.227 13.9068 453.227 13.9568 453.237 cv
14.0068 453.247 14.0468 453.257 14.0768 453.267 cv
14.1068 453.287 14.1368 453.307 14.1468 453.327 cv
14.1568 453.347 14.1668 453.367 14.1668 453.397 cv
14.1668 453.437 14.1468 453.487 14.0968 453.567 cv
14.0568 453.637 14.0168 453.727 13.9668 453.847 cv
13.9168 453.967 13.8668 454.097 13.8268 454.257 cv
13.7868 454.417 13.7668 454.587 13.7668 454.797 cv
13.7668 454.977 13.7768 455.137 13.8168 455.267 cv
13.8568 455.407 13.9068 455.517 13.9768 455.607 cv
14.0468 455.697 14.1268 455.767 14.2168 455.807 cv
14.3168 455.857 14.4168 455.877 14.5268 455.877 cv
14.6768 455.877 14.8068 455.837 14.9068 455.747 cv
15.0068 455.657 15.0968 455.547 15.1768 455.417 cv
15.2568 455.277 15.3268 455.117 15.3868 454.937 cv
15.4568 454.767 15.5168 454.587 15.5868 454.407 cv
15.6468 454.217 15.7268 454.037 15.8068 453.867 cv
15.8868 453.687 15.9868 453.527 16.1068 453.387 cv
16.2268 453.247 16.3668 453.137 16.5268 453.057 cv
16.6868 452.977 16.8868 452.927 17.1168 452.927 cv
cp
17.7468 447.157 mo
17.8168 447.157 17.8668 447.157 17.9168 447.157 cv
17.9668 447.167 18.0068 447.167 18.0468 447.177 cv
18.0768 447.197 18.1068 447.207 18.1268 447.217 cv
18.1568 447.237 18.1968 447.267 18.2368 447.327 cv
18.2868 447.377 18.3468 447.467 18.4268 447.597 cv
18.4968 447.727 18.5568 447.867 18.6168 448.037 cv
18.6768 448.197 18.7168 448.367 18.7568 448.557 cv
18.7868 448.747 18.8068 448.947 18.8068 449.147 cv
18.8068 449.557 18.7468 449.927 18.6168 450.257 cv
18.4968 450.577 18.3068 450.847 18.0668 451.057 cv
17.8268 451.277 17.5368 451.447 17.1868 451.557 cv
16.8368 451.667 16.4368 451.727 15.9768 451.727 cv
15.4568 451.727 15.0068 451.657 14.6368 451.517 cv
14.2668 451.377 13.9568 451.187 13.7168 450.947 cv
13.4868 450.707 13.3068 450.417 13.1868 450.087 cv
13.0768 449.757 13.0168 449.407 13.0168 449.017 cv
13.0168 448.837 13.0368 448.657 13.0668 448.487 cv
13.0968 448.307 13.1368 448.147 13.1868 448.007 cv
13.2368 447.857 13.2968 447.727 13.3668 447.617 cv
13.4268 447.497 13.4868 447.417 13.5368 447.367 cv
13.5768 447.317 13.6168 447.277 13.6468 447.257 cv
13.6768 447.237 13.7068 447.227 13.7368 447.207 cv
13.7768 447.197 13.8168 447.187 13.8668 447.187 cv
13.9168 447.177 13.9768 447.177 14.0468 447.177 cv
14.1968 447.177 14.3068 447.197 14.3668 447.237 cv
14.4268 447.277 14.4568 447.327 14.4568 447.377 cv
14.4568 447.447 14.4168 447.517 14.3568 447.597 cv
14.2968 447.687 14.2168 447.787 14.1468 447.917 cv
14.0668 448.047 13.9968 448.207 13.9268 448.387 cv
13.8668 448.567 13.8368 448.787 13.8368 449.037 cv
13.8368 449.547 14.0068 449.937 14.3668 450.207 cv
14.7268 450.487 15.2468 450.617 15.9268 450.617 cv
16.2668 450.617 16.5568 450.587 16.8168 450.517 cv
17.0768 450.447 17.2868 450.337 17.4568 450.197 cv
17.6268 450.067 17.7568 449.897 17.8468 449.697 cv
17.9268 449.497 17.9668 449.267 17.9668 449.007 cv
17.9668 448.767 17.9368 448.547 17.8668 448.367 cv
17.7968 448.177 17.7168 448.017 17.6368 447.887 cv
17.5468 447.747 17.4768 447.637 17.4068 447.547 cv
17.3368 447.447 17.2968 447.377 17.2968 447.327 cv
17.2968 447.297 17.3068 447.267 17.3268 447.247 cv
17.3368 447.227 17.3668 447.207 17.4068 447.197 cv
17.4368 447.177 17.4868 447.167 17.5468 447.167 cv
17.5968 447.157 17.6668 447.157 17.7468 447.157 cv
cp
18.5468 441.077 mo
18.5768 441.077 18.6068 441.087 18.6268 441.107 cv
18.6468 441.117 18.6668 441.147 18.6868 441.187 cv
18.6968 441.227 18.7068 441.277 18.7168 441.347 cv
18.7268 441.417 18.7268 441.507 18.7268 441.607 cv
18.7268 441.717 18.7268 441.797 18.7168 441.867 cv
18.7068 441.937 18.6968 441.997 18.6868 442.027 cv
18.6668 442.067 18.6468 442.097 18.6268 442.117 cv
18.6068 442.137 18.5768 442.137 18.5468 442.137 cv
15.4568 442.137 li
15.1568 442.137 14.9168 442.167 14.7368 442.217 cv
14.5468 442.267 14.3968 442.347 14.2568 442.447 cv
14.1268 442.547 14.0268 442.667 13.9568 442.827 cv
13.8868 442.987 13.8468 443.167 13.8468 443.367 cv
13.8468 443.637 13.9368 443.907 14.1068 444.167 cv
14.2768 444.437 14.5268 444.717 14.8668 445.007 cv
18.5468 445.007 li
18.5768 445.007 18.6068 445.017 18.6268 445.037 cv
18.6468 445.057 18.6668 445.077 18.6868 445.117 cv
18.6968 445.157 18.7068 445.207 18.7168 445.277 cv
18.7268 445.347 18.7268 445.437 18.7268 445.547 cv
18.7268 445.647 18.7268 445.737 18.7168 445.797 cv
18.7068 445.867 18.6968 445.927 18.6868 445.967 cv
18.6668 446.007 18.6468 446.037 18.6268 446.047 cv
18.6068 446.067 18.5768 446.077 18.5468 446.077 cv
10.7168 446.077 li
10.6868 446.077 10.6668 446.067 10.6368 446.047 cv
10.6168 446.037 10.5968 446.007 10.5768 445.967 cv
10.5668 445.927 10.5568 445.867 10.5468 445.797 cv
10.5368 445.737 10.5368 445.647 10.5368 445.547 cv
10.5368 445.437 10.5368 445.347 10.5468 445.277 cv
10.5568 445.207 10.5668 445.157 10.5768 445.117 cv
10.5968 445.077 10.6168 445.057 10.6368 445.037 cv
10.6668 445.017 10.6868 445.007 10.7168 445.007 cv
13.8768 445.007 li
13.5868 444.707 13.3668 444.397 13.2268 444.087 cv
13.0868 443.777 13.0168 443.467 13.0168 443.157 cv
13.0168 442.767 13.0668 442.437 13.1868 442.177 cv
13.3068 441.917 13.4668 441.697 13.6668 441.537 cv
13.8668 441.367 14.0968 441.257 14.3668 441.187 cv
14.6368 441.117 14.9568 441.077 15.3368 441.077 cv
cp
15.6868 434.377 mo
15.8368 434.377 15.9468 434.417 16.0068 434.497 cv
16.0768 434.587 16.1068 434.677 16.1068 434.787 cv
16.1068 438.607 li
16.3968 438.607 16.6668 438.577 16.8968 438.507 cv
17.1268 438.447 17.3368 438.337 17.4968 438.187 cv
17.6668 438.037 17.7968 437.837 17.8868 437.597 cv
17.9768 437.357 18.0168 437.057 18.0168 436.707 cv
18.0168 436.437 17.9968 436.187 17.9568 435.967 cv
17.9168 435.757 17.8768 435.567 17.8268 435.407 cv
17.7668 435.257 17.7268 435.127 17.6868 435.027 cv
17.6468 434.917 17.6268 434.847 17.6268 434.797 cv
17.6268 434.767 17.6268 434.737 17.6468 434.707 cv
17.6568 434.687 17.6768 434.667 17.7068 434.657 cv
17.7368 434.647 17.7668 434.637 17.8168 434.627 cv
17.8668 434.617 17.9268 434.617 17.9968 434.617 cv
18.0468 434.617 18.0968 434.617 18.1268 434.627 cv
18.1668 434.627 18.1968 434.637 18.2268 434.637 cv
18.2568 434.647 18.2868 434.657 18.3068 434.677 cv
18.3368 434.687 18.3568 434.707 18.3768 434.727 cv
18.3968 434.757 18.4368 434.827 18.4768 434.937 cv
18.5268 435.057 18.5768 435.207 18.6268 435.387 cv
18.6768 435.577 18.7168 435.787 18.7468 436.037 cv
18.7868 436.277 18.8068 436.537 18.8068 436.807 cv
18.8068 437.287 18.7468 437.707 18.6268 438.067 cv
18.5068 438.417 18.3268 438.727 18.0868 438.967 cv
17.8468 439.217 17.5468 439.397 17.1868 439.527 cv
16.8268 439.647 16.4168 439.707 15.9368 439.707 cv
15.4868 439.707 15.0768 439.647 14.7168 439.517 cv
14.3568 439.387 14.0468 439.197 13.7968 438.957 cv
13.5468 438.717 13.3468 438.427 13.2168 438.077 cv
13.0768 437.737 13.0168 437.347 13.0168 436.927 cv
13.0168 436.467 13.0768 436.077 13.2068 435.757 cv
13.3468 435.437 13.5268 435.177 13.7468 434.967 cv
13.9768 434.767 14.2368 434.617 14.5368 434.517 cv
14.8368 434.417 15.1668 434.377 15.5068 434.377 cv
cp
15.3968 435.447 mo
14.8868 435.427 14.4868 435.557 14.1968 435.817 cv
13.9168 436.077 13.7668 436.467 13.7668 436.977 cv
13.7668 437.247 13.8168 437.477 13.9068 437.677 cv
13.9968 437.877 14.1068 438.037 14.2568 438.177 cv
14.4068 438.307 14.5768 438.407 14.7768 438.487 cv
14.9768 438.557 15.1868 438.597 15.3968 438.607 cv
cp
18.5468 423.967 mo
18.5768 423.967 18.6068 423.977 18.6268 423.997 cv
18.6468 424.007 18.6668 424.037 18.6868 424.077 cv
18.6968 424.117 18.7068 424.167 18.7168 424.237 cv
18.7268 424.307 18.7268 424.397 18.7268 424.497 cv
18.7268 424.607 18.7268 424.697 18.7168 424.757 cv
18.7068 424.827 18.6968 424.887 18.6868 424.927 cv
18.6668 424.967 18.6468 424.997 18.6268 425.017 cv
18.6068 425.027 18.5768 425.037 18.5468 425.037 cv
15.3468 425.037 li
15.1168 425.037 14.9168 425.057 14.7368 425.107 cv
14.5468 425.147 14.3968 425.217 14.2568 425.307 cv
14.1268 425.407 14.0268 425.527 13.9568 425.667 cv
13.8868 425.817 13.8468 425.987 13.8468 426.187 cv
13.8468 426.427 13.9368 426.677 14.1068 426.927 cv
14.2768 427.167 14.5268 427.447 14.8668 427.737 cv
18.5468 427.737 li
18.5768 427.737 18.6068 427.747 18.6268 427.767 cv
18.6468 427.777 18.6668 427.807 18.6868 427.847 cv
18.6968 427.897 18.7068 427.947 18.7168 428.017 cv
18.7268 428.087 18.7268 428.167 18.7268 428.277 cv
18.7268 428.377 18.7268 428.457 18.7168 428.527 cv
18.7068 428.597 18.6968 428.657 18.6868 428.697 cv
18.6668 428.737 18.6468 428.767 18.6268 428.777 cv
18.6068 428.797 18.5768 428.797 18.5468 428.797 cv
15.3468 428.797 li
15.1168 428.797 14.9168 428.827 14.7368 428.877 cv
14.5468 428.917 14.3968 428.987 14.2568 429.087 cv
14.1268 429.177 14.0268 429.297 13.9568 429.447 cv
13.8868 429.587 13.8468 429.757 13.8468 429.957 cv
13.8468 430.197 13.9368 430.447 14.1068 430.697 cv
14.2768 430.947 14.5268 431.217 14.8668 431.507 cv
18.5468 431.507 li
18.5768 431.507 18.6068 431.517 18.6268 431.537 cv
18.6468 431.557 18.6668 431.577 18.6868 431.617 cv
18.6968 431.657 18.7068 431.707 18.7168 431.777 cv
18.7268 431.847 18.7268 431.937 18.7268 432.047 cv
18.7268 432.147 18.7268 432.237 18.7168 432.297 cv
18.7068 432.367 18.6968 432.427 18.6868 432.467 cv
18.6668 432.507 18.6468 432.537 18.6268 432.547 cv
18.6068 432.567 18.5768 432.577 18.5468 432.577 cv
13.2768 432.577 li
13.2468 432.577 13.2168 432.567 13.1968 432.557 cv
13.1768 432.537 13.1568 432.517 13.1368 432.477 cv
13.1168 432.437 13.1068 432.387 13.1068 432.327 cv
13.0968 432.267 13.0968 432.187 13.0968 432.087 cv
13.0968 431.997 13.0968 431.917 13.1068 431.857 cv
13.1068 431.787 13.1168 431.747 13.1368 431.707 cv
13.1568 431.677 13.1768 431.647 13.1968 431.637 cv
13.2168 431.617 13.2468 431.617 13.2768 431.617 cv
13.9768 431.617 li
13.6368 431.287 13.3968 430.967 13.2468 430.657 cv
13.0868 430.357 13.0168 430.047 13.0168 429.727 cv
13.0168 429.487 13.0368 429.277 13.0868 429.087 cv
13.1368 428.887 13.2068 428.727 13.3068 428.577 cv
13.3968 428.427 13.5068 428.307 13.6268 428.207 cv
13.7568 428.097 13.8968 428.017 14.0568 427.947 cv
13.8668 427.747 13.6968 427.567 13.5668 427.397 cv
13.4368 427.217 13.3268 427.057 13.2468 426.887 cv
13.1668 426.727 13.1068 426.577 13.0668 426.417 cv
13.0268 426.267 13.0168 426.117 13.0168 425.957 cv
13.0168 425.587 13.0668 425.277 13.1868 425.017 cv
13.3068 424.767 13.4668 424.557 13.6668 424.407 cv
13.8668 424.247 14.0968 424.137 14.3668 424.067 cv
14.6368 423.997 14.9168 423.967 15.2168 423.967 cv
cp
18.5568 417.707 mo
18.6068 417.707 18.6368 417.717 18.6568 417.757 cv
18.6868 417.787 18.6968 417.837 18.7168 417.897 cv
18.7268 417.957 18.7268 418.047 18.7268 418.157 cv
18.7268 418.267 18.7268 418.357 18.7168 418.427 cv
18.6968 418.497 18.6868 418.547 18.6568 418.577 cv
18.6368 418.607 18.6068 418.617 18.5568 418.617 cv
18.0268 418.617 li
18.2768 418.867 18.4668 419.157 18.6068 419.467 cv
18.7368 419.777 18.8068 420.107 18.8068 420.457 cv
18.8068 420.757 18.7668 421.037 18.6968 421.287 cv
18.6268 421.527 18.5168 421.737 18.3868 421.917 cv
18.2468 422.087 18.0768 422.227 17.8768 422.317 cv
17.6868 422.417 17.4568 422.467 17.1968 422.467 cv
16.9068 422.467 16.6468 422.397 16.4268 422.267 cv
16.2068 422.137 16.0268 421.937 15.8868 421.697 cv
15.7368 421.447 15.6268 421.137 15.5568 420.777 cv
15.4868 420.417 15.4468 420.007 15.4468 419.557 cv
15.4468 418.757 li
15.0368 418.757 li
14.8368 418.757 14.6568 418.787 14.4968 418.827 cv
14.3468 418.877 14.2168 418.957 14.1068 419.057 cv
14.0068 419.167 13.9268 419.297 13.8768 419.467 cv
13.8268 419.637 13.7968 419.847 13.7968 420.087 cv
13.7968 420.347 13.8268 420.587 13.8868 420.797 cv
13.9368 420.997 13.9968 421.187 14.0668 421.337 cv
14.1368 421.497 14.1968 421.627 14.2568 421.737 cv
14.3168 421.837 14.3468 421.917 14.3468 421.967 cv
14.3468 422.007 14.3368 422.037 14.3168 422.057 cv
14.3068 422.087 14.2768 422.107 14.2468 422.127 cv
14.2168 422.147 14.1768 422.157 14.1268 422.167 cv
14.0768 422.177 14.0268 422.187 13.9668 422.187 cv
13.8668 422.187 13.7968 422.177 13.7368 422.157 cv
13.6768 422.147 13.6268 422.107 13.5768 422.047 cv
13.5268 421.987 13.4668 421.897 13.3968 421.747 cv
13.3268 421.607 13.2668 421.447 13.2068 421.257 cv
13.1468 421.077 13.1068 420.877 13.0668 420.657 cv
13.0268 420.437 13.0168 420.217 13.0168 419.987 cv
13.0168 419.577 13.0568 419.217 13.1368 418.927 cv
13.2268 418.637 13.3568 418.397 13.5168 418.217 cv
13.6868 418.037 13.8868 417.907 14.1368 417.827 cv
14.3868 417.747 14.6668 417.707 14.9968 417.707 cv
cp
16.1468 418.757 mo
16.1468 419.667 li
16.1468 419.957 16.1668 420.217 16.2168 420.427 cv
16.2568 420.647 16.3268 420.827 16.4168 420.967 cv
16.4968 421.107 16.6068 421.207 16.7268 421.277 cv
16.8568 421.347 16.9968 421.377 17.1568 421.377 cv
17.4268 421.377 17.6468 421.277 17.8068 421.087 cv
17.9668 420.897 18.0468 420.627 18.0468 420.287 cv
18.0468 420.007 17.9868 419.747 17.8568 419.507 cv
17.7268 419.277 17.5268 419.017 17.2668 418.757 cv
cp
f
40.4568 74.037 mo
441.707 74.037 li
441.707 16.9659 li
40.4568 16.9659 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
40.4568 74.037 mo
441.707 74.037 li
441.707 16.9659 li
40.4568 16.9659 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
53.1368 32.2469 mo
53.1368 32.317 53.1368 32.3669 53.1268 32.417 cv
53.1268 32.457 53.1168 32.507 53.1068 32.537 cv
53.0968 32.577 53.0768 32.6071 53.0668 32.627 cv
53.0468 32.657 53.0168 32.687 52.9768 32.7271 cv
52.9268 32.767 52.8368 32.827 52.7068 32.907 cv
52.5668 32.9871 52.3968 33.067 52.1868 33.147 cv
51.9868 33.217 51.7568 33.287 51.4868 33.337 cv
51.2268 33.387 50.9368 33.417 50.6168 33.417 cv
50.0768 33.417 49.5868 33.337 49.1568 33.167 cv
48.7168 33.007 48.3468 32.767 48.0368 32.447 cv
47.7368 32.127 47.4968 31.7271 47.3268 31.257 cv
47.1668 30.787 47.0868 30.2469 47.0868 29.627 cv
47.0868 29.007 47.1668 28.437 47.3468 27.947 cv
47.5268 27.457 47.7768 27.037 48.0968 26.697 cv
48.4268 26.3571 48.8068 26.097 49.2568 25.917 cv
49.7068 25.7371 50.2068 25.647 50.7468 25.647 cv
50.9868 25.647 51.2268 25.667 51.4568 25.707 cv
51.6768 25.7469 51.8868 25.797 52.0868 25.8669 cv
52.2768 25.927 52.4468 25.9969 52.5968 26.077 cv
52.7468 26.167 52.8568 26.2271 52.9168 26.287 cv
52.9668 26.337 53.0068 26.377 53.0268 26.407 cv
53.0468 26.427 53.0568 26.467 53.0668 26.4969 cv
53.0768 26.537 53.0868 26.577 53.0968 26.627 cv
53.0968 26.677 53.1068 26.7469 53.1068 26.817 cv
53.1068 26.887 53.0968 26.957 53.0868 27.007 cv
53.0768 27.067 53.0668 27.1169 53.0468 27.147 cv
53.0368 27.187 53.0168 27.217 52.9868 27.2271 cv
52.9668 27.2469 52.9368 27.257 52.8968 27.257 cv
52.8368 27.257 52.7568 27.217 52.6468 27.147 cv
52.5368 27.067 52.3968 26.9871 52.2268 26.887 cv
52.0568 26.797 51.8568 26.717 51.6068 26.637 cv
51.3668 26.567 51.0768 26.527 50.7268 26.527 cv
50.3568 26.527 50.0168 26.597 49.7168 26.7271 cv
49.4168 26.8669 49.1568 27.057 48.9368 27.327 cv
48.7168 27.587 48.5568 27.907 48.4368 28.277 cv
48.3168 28.657 48.2568 29.087 48.2568 29.577 cv
48.2568 30.057 48.3168 30.4771 48.4268 30.847 cv
48.5368 31.217 48.7068 31.527 48.9168 31.777 cv
49.1368 32.017 49.3968 32.207 49.7068 32.337 cv
50.0168 32.467 50.3668 32.527 50.7668 32.527 cv
51.0968 32.527 51.3868 32.4871 51.6368 32.417 cv
51.8868 32.337 52.0968 32.257 52.2668 32.167 cv
52.4468 32.077 52.5868 31.9871 52.6968 31.917 cv
52.8168 31.847 52.8968 31.807 52.9668 31.807 cv
52.9968 31.807 53.0268 31.807 53.0468 31.827 cv
53.0668 31.837 53.0868 31.8571 53.0968 31.887 cv
53.1068 31.927 53.1168 31.967 53.1268 32.027 cv
53.1268 32.087 53.1368 32.157 53.1368 32.2469 cv
cp
59.1668 33.177 mo
59.1668 33.207 59.1568 33.2371 59.1368 33.257 cv
59.1268 33.277 59.0968 33.297 59.0568 33.307 cv
59.0168 33.327 58.9668 33.337 58.9068 33.347 cv
58.8468 33.3571 58.7668 33.3571 58.6768 33.3571 cv
58.5768 33.3571 58.4968 33.3571 58.4368 33.347 cv
58.3768 33.337 58.3268 33.327 58.2868 33.307 cv
58.2568 33.297 58.2268 33.277 58.2168 33.257 cv
58.2068 33.2371 58.1968 33.207 58.1968 33.177 cv
58.1968 32.4771 li
57.8668 32.807 57.5368 33.057 57.2168 33.207 cv
56.8968 33.3571 56.5668 33.437 56.2368 33.437 cv
55.8468 33.437 55.5268 33.377 55.2568 33.257 cv
54.9968 33.137 54.7868 32.9771 54.6168 32.777 cv
54.4568 32.577 54.3368 32.347 54.2668 32.077 cv
54.1968 31.807 54.1568 31.4871 54.1568 31.097 cv
54.1568 27.907 li
54.1568 27.8669 54.1668 27.847 54.1868 27.827 cv
54.1968 27.797 54.2268 27.787 54.2668 27.767 cv
54.3168 27.7469 54.3668 27.7371 54.4368 27.7271 cv
54.5068 27.7271 54.5968 27.717 54.6968 27.717 cv
54.7968 27.717 54.8868 27.7271 54.9568 27.7271 cv
55.0268 27.7371 55.0768 27.7469 55.1168 27.767 cv
55.1568 27.787 55.1868 27.797 55.2068 27.827 cv
55.2268 27.847 55.2268 27.8669 55.2268 27.907 cv
55.2268 30.9771 li
55.2268 31.277 55.2568 31.527 55.3068 31.717 cv
55.3568 31.897 55.4268 32.057 55.5268 32.187 cv
55.6268 32.317 55.7568 32.417 55.9168 32.4969 cv
56.0668 32.567 56.2468 32.597 56.4568 32.597 cv
56.7268 32.597 56.9868 32.517 57.2468 32.347 cv
57.5168 32.177 57.7968 31.917 58.0968 31.587 cv
58.0968 27.907 li
58.0968 27.8669 58.0968 27.847 58.1168 27.827 cv
58.1268 27.797 58.1568 27.787 58.2068 27.767 cv
58.2468 27.7469 58.2968 27.7371 58.3668 27.7271 cv
58.4368 27.7271 58.5168 27.717 58.6268 27.717 cv
58.7268 27.717 58.8168 27.7271 58.8868 27.7271 cv
58.9568 27.7371 59.0068 27.7469 59.0468 27.767 cv
59.0868 27.787 59.1168 27.797 59.1368 27.827 cv
59.1568 27.847 59.1668 27.8669 59.1668 27.907 cv
cp
65.0868 28.2469 mo
65.0868 28.337 65.0768 28.407 65.0768 28.467 cv
65.0768 28.527 65.0668 28.567 65.0468 28.6071 cv
65.0368 28.637 65.0268 28.657 65.0068 28.677 cv
64.9868 28.697 64.9568 28.707 64.9268 28.707 cv
64.8868 28.707 64.8468 28.697 64.7968 28.677 cv
64.7468 28.657 64.6868 28.647 64.6268 28.627 cv
64.5668 28.6071 64.4968 28.597 64.4168 28.577 cv
64.3468 28.557 64.2568 28.557 64.1668 28.557 cv
64.0568 28.557 63.9568 28.577 63.8568 28.6071 cv
63.7468 28.647 63.6368 28.717 63.5268 28.807 cv
63.4168 28.897 63.2968 29.017 63.1668 29.167 cv
63.0468 29.307 62.9068 29.4969 62.7568 29.707 cv
62.7568 33.177 li
62.7568 33.207 62.7468 33.2371 62.7268 33.257 cv
62.7168 33.277 62.6868 33.297 62.6468 33.307 cv
62.6068 33.327 62.5568 33.337 62.4868 33.347 cv
62.4168 33.3571 62.3268 33.3571 62.2268 33.3571 cv
62.1168 33.3571 62.0368 33.3571 61.9668 33.347 cv
61.8968 33.337 61.8368 33.327 61.7968 33.307 cv
61.7568 33.297 61.7268 33.277 61.7168 33.257 cv
61.6968 33.2371 61.6968 33.207 61.6968 33.177 cv
61.6968 27.907 li
61.6968 27.8669 61.6968 27.847 61.7168 27.827 cv
61.7268 27.797 61.7468 27.787 61.7868 27.767 cv
61.8268 27.7469 61.8768 27.7371 61.9368 27.7271 cv
61.9968 27.7271 62.0768 27.717 62.1768 27.717 cv
62.2668 27.717 62.3468 27.7271 62.4168 27.7271 cv
62.4768 27.7371 62.5268 27.7469 62.5568 27.767 cv
62.5868 27.787 62.6168 27.797 62.6268 27.827 cv
62.6468 27.847 62.6568 27.8669 62.6568 27.907 cv
62.6568 28.667 li
62.8168 28.457 62.9668 28.287 63.0968 28.157 cv
63.2368 28.017 63.3768 27.917 63.4968 27.837 cv
63.6268 27.767 63.7468 27.717 63.8668 27.687 cv
63.9868 27.657 64.1168 27.637 64.2368 27.637 cv
64.2968 27.637 64.3568 27.637 64.4268 27.647 cv
64.4968 27.657 64.5768 27.667 64.6468 27.677 cv
64.7268 27.697 64.7968 27.717 64.8568 27.7371 cv
64.9268 27.757 64.9668 27.767 64.9968 27.787 cv
65.0168 27.807 65.0368 27.827 65.0468 27.847 cv
65.0568 27.8669 65.0568 27.887 65.0668 27.917 cv
65.0768 27.937 65.0768 27.9771 65.0768 28.037 cv
65.0868 28.087 65.0868 28.157 65.0868 28.2469 cv
cp
69.5868 28.2469 mo
69.5868 28.337 69.5768 28.407 69.5768 28.467 cv
69.5768 28.527 69.5668 28.567 69.5468 28.6071 cv
69.5368 28.637 69.5268 28.657 69.5068 28.677 cv
69.4868 28.697 69.4568 28.707 69.4268 28.707 cv
69.3868 28.707 69.3468 28.697 69.2968 28.677 cv
69.2468 28.657 69.1868 28.647 69.1268 28.627 cv
69.0668 28.6071 68.9968 28.597 68.9168 28.577 cv
68.8468 28.557 68.7568 28.557 68.6668 28.557 cv
68.5568 28.557 68.4568 28.577 68.3568 28.6071 cv
68.2468 28.647 68.1368 28.717 68.0268 28.807 cv
67.9168 28.897 67.7968 29.017 67.6668 29.167 cv
67.5468 29.307 67.4068 29.4969 67.2568 29.707 cv
67.2568 33.177 li
67.2568 33.207 67.2468 33.2371 67.2268 33.257 cv
67.2168 33.277 67.1868 33.297 67.1468 33.307 cv
67.1068 33.327 67.0568 33.337 66.9868 33.347 cv
66.9168 33.3571 66.8268 33.3571 66.7268 33.3571 cv
66.6168 33.3571 66.5368 33.3571 66.4668 33.347 cv
66.3968 33.337 66.3368 33.327 66.2968 33.307 cv
66.2568 33.297 66.2268 33.277 66.2168 33.257 cv
66.1968 33.2371 66.1968 33.207 66.1968 33.177 cv
66.1968 27.907 li
66.1968 27.8669 66.1968 27.847 66.2168 27.827 cv
66.2268 27.797 66.2468 27.787 66.2868 27.767 cv
66.3268 27.7469 66.3768 27.7371 66.4368 27.7271 cv
66.4968 27.7271 66.5768 27.717 66.6768 27.717 cv
66.7668 27.717 66.8468 27.7271 66.9168 27.7271 cv
66.9768 27.7371 67.0268 27.7469 67.0568 27.767 cv
67.0868 27.787 67.1168 27.797 67.1268 27.827 cv
67.1468 27.847 67.1568 27.8669 67.1568 27.907 cv
67.1568 28.667 li
67.3168 28.457 67.4668 28.287 67.5968 28.157 cv
67.7368 28.017 67.8768 27.917 67.9968 27.837 cv
68.1268 27.767 68.2468 27.717 68.3668 27.687 cv
68.4868 27.657 68.6168 27.637 68.7368 27.637 cv
68.7968 27.637 68.8568 27.637 68.9268 27.647 cv
68.9968 27.657 69.0768 27.667 69.1468 27.677 cv
69.2268 27.697 69.2968 27.717 69.3568 27.7371 cv
69.4268 27.757 69.4668 27.767 69.4968 27.787 cv
69.5168 27.807 69.5368 27.827 69.5468 27.847 cv
69.5568 27.8669 69.5568 27.887 69.5668 27.917 cv
69.5768 27.937 69.5768 27.9771 69.5768 28.037 cv
69.5868 28.087 69.5868 28.157 69.5868 28.2469 cv
cp
75.6468 30.307 mo
75.6468 30.467 75.5968 30.567 75.5168 30.637 cv
75.4368 30.697 75.3368 30.7371 75.2268 30.7371 cv
71.4068 30.7371 li
71.4068 31.027 71.4368 31.287 71.5068 31.527 cv
71.5668 31.757 71.6768 31.957 71.8268 32.127 cv
71.9768 32.297 72.1768 32.427 72.4168 32.517 cv
72.6568 32.6071 72.9568 32.647 73.3068 32.647 cv
73.5868 32.647 73.8268 32.627 74.0468 32.587 cv
74.2568 32.547 74.4468 32.4969 74.6068 32.447 cv
74.7668 32.397 74.8968 32.3571 74.9968 32.307 cv
75.0968 32.267 75.1668 32.2469 75.2268 32.2469 cv
75.2568 32.2469 75.2768 32.257 75.3068 32.267 cv
75.3268 32.287 75.3468 32.307 75.3568 32.337 cv
75.3768 32.3571 75.3868 32.397 75.3868 32.447 cv
75.3968 32.4969 75.3968 32.557 75.3968 32.627 cv
75.3968 32.677 75.3968 32.717 75.3968 32.757 cv
75.3868 32.797 75.3868 32.827 75.3768 32.8571 cv
75.3668 32.887 75.3568 32.917 75.3468 32.937 cv
75.3268 32.957 75.3068 32.9771 75.2868 33.007 cv
75.2668 33.027 75.1968 33.057 75.0768 33.1071 cv
74.9568 33.157 74.8068 33.207 74.6268 33.257 cv
74.4368 33.297 74.2268 33.337 73.9868 33.377 cv
73.7368 33.417 73.4868 33.437 73.2068 33.437 cv
72.7268 33.437 72.3168 33.377 71.9568 33.257 cv
71.5968 33.127 71.2968 32.947 71.0468 32.717 cv
70.8068 32.4771 70.6168 32.177 70.4968 31.817 cv
70.3668 31.457 70.3068 31.037 70.3068 30.567 cv
70.3068 30.1071 70.3668 29.707 70.4968 29.337 cv
70.6268 28.9771 70.8168 28.677 71.0568 28.417 cv
71.2968 28.167 71.5968 27.9771 71.9368 27.837 cv
72.2768 27.707 72.6668 27.637 73.0868 27.637 cv
73.5468 27.637 73.9368 27.707 74.2568 27.837 cv
74.5768 27.967 74.8368 28.147 75.0468 28.377 cv
75.2468 28.597 75.3968 28.8669 75.4968 29.167 cv
75.5968 29.467 75.6468 29.787 75.6468 30.137 cv
cp
74.5768 30.027 mo
74.5868 29.517 74.4668 29.1169 74.1968 28.827 cv
73.9368 28.537 73.5468 28.397 73.0368 28.397 cv
72.7768 28.397 72.5368 28.437 72.3468 28.527 cv
72.1468 28.6169 71.9768 28.7371 71.8468 28.887 cv
71.7068 29.037 71.6068 29.207 71.5368 29.407 cv
71.4568 29.6071 71.4168 29.807 71.4068 30.027 cv
cp
82.4368 33.177 mo
82.4368 33.207 82.4268 33.2371 82.4168 33.257 cv
82.3968 33.277 82.3668 33.297 82.3268 33.307 cv
82.2868 33.327 82.2368 33.337 82.1668 33.347 cv
82.0968 33.3571 82.0168 33.3571 81.9068 33.3571 cv
81.8068 33.3571 81.7168 33.3571 81.6468 33.347 cv
81.5768 33.337 81.5268 33.327 81.4868 33.307 cv
81.4468 33.297 81.4168 33.277 81.3968 33.257 cv
81.3868 33.2371 81.3768 33.207 81.3768 33.177 cv
81.3768 30.087 li
81.3768 29.787 81.3468 29.547 81.2968 29.3571 cv
81.2468 29.177 81.1668 29.017 81.0768 28.887 cv
80.9768 28.757 80.8468 28.657 80.6868 28.587 cv
80.5268 28.507 80.3468 28.4771 80.1468 28.4771 cv
79.8768 28.4771 79.6068 28.567 79.3468 28.7371 cv
79.0768 28.907 78.7968 29.157 78.5068 29.4871 cv
78.5068 33.177 li
78.5068 33.207 78.4968 33.2371 78.4768 33.257 cv
78.4668 33.277 78.4368 33.297 78.3968 33.307 cv
78.3568 33.327 78.3068 33.337 78.2368 33.347 cv
78.1668 33.3571 78.0768 33.3571 77.9768 33.3571 cv
77.8668 33.3571 77.7868 33.3571 77.7168 33.347 cv
77.6468 33.337 77.5868 33.327 77.5468 33.307 cv
77.5068 33.297 77.4768 33.277 77.4668 33.257 cv
77.4468 33.2371 77.4468 33.207 77.4468 33.177 cv
77.4468 27.907 li
77.4468 27.8669 77.4468 27.847 77.4668 27.827 cv
77.4768 27.797 77.4968 27.787 77.5368 27.767 cv
77.5768 27.7469 77.6268 27.7371 77.6868 27.7271 cv
77.7468 27.7271 77.8268 27.717 77.9268 27.717 cv
78.0168 27.717 78.0968 27.7271 78.1668 27.7271 cv
78.2268 27.7371 78.2768 27.7469 78.3068 27.767 cv
78.3368 27.787 78.3668 27.797 78.3768 27.827 cv
78.3968 27.847 78.4068 27.8669 78.4068 27.907 cv
78.4068 28.597 li
78.7268 28.267 79.0568 28.027 79.3768 27.8669 cv
79.7068 27.717 80.0368 27.637 80.3668 27.637 cv
80.7468 27.637 81.0768 27.697 81.3368 27.817 cv
81.6068 27.937 81.8168 28.097 81.9768 28.297 cv
82.1468 28.4969 82.2568 28.7271 82.3368 28.9969 cv
82.4068 29.267 82.4368 29.587 82.4368 29.957 cv
cp
87.2068 32.787 mo
87.2068 32.907 87.1968 32.9969 87.1868 33.057 cv
87.1668 33.127 87.1368 33.177 87.1068 33.207 cv
87.0768 33.2371 87.0168 33.267 86.9568 33.297 cv
86.8868 33.317 86.8068 33.347 86.7168 33.3571 cv
86.6268 33.377 86.5368 33.397 86.4368 33.407 cv
86.3368 33.417 86.2368 33.427 86.1368 33.427 cv
85.8368 33.427 85.5768 33.387 85.3668 33.317 cv
85.1468 33.2371 84.9768 33.137 84.8368 32.9871 cv
84.6968 32.837 84.5968 32.657 84.5368 32.427 cv
84.4768 32.207 84.4468 31.937 84.4468 31.637 cv
84.4468 28.557 li
83.6368 28.557 li
83.5668 28.557 83.5168 28.517 83.4768 28.457 cv
83.4368 28.397 83.4168 28.297 83.4168 28.157 cv
83.4168 28.077 83.4268 28.017 83.4368 27.967 cv
83.4468 27.917 83.4568 27.877 83.4768 27.837 cv
83.4968 27.807 83.5168 27.787 83.5468 27.767 cv
83.5768 27.757 83.6068 27.7469 83.6368 27.7469 cv
84.4468 27.7469 li
84.4468 26.4969 li
84.4468 26.467 84.4568 26.447 84.4668 26.417 cv
84.4868 26.397 84.5068 26.377 84.5468 26.3571 cv
84.5968 26.337 84.6468 26.327 84.7168 26.317 cv
84.7868 26.317 84.8668 26.307 84.9768 26.307 cv
85.0768 26.307 85.1668 26.317 85.2368 26.317 cv
85.3068 26.327 85.3568 26.337 85.3968 26.3571 cv
85.4368 26.377 85.4668 26.397 85.4868 26.417 cv
85.4968 26.447 85.5068 26.467 85.5068 26.4969 cv
85.5068 27.7469 li
86.9968 27.7469 li
87.0268 27.7469 87.0568 27.757 87.0868 27.767 cv
87.1168 27.787 87.1368 27.807 87.1568 27.837 cv
87.1768 27.877 87.1868 27.917 87.1968 27.967 cv
87.2068 28.017 87.2068 28.077 87.2068 28.157 cv
87.2068 28.297 87.1868 28.397 87.1468 28.457 cv
87.1168 28.517 87.0568 28.557 86.9968 28.557 cv
85.5068 28.557 li
85.5068 31.4969 li
85.5068 31.8571 85.5668 32.137 85.6868 32.317 cv
85.8068 32.507 86.0168 32.597 86.3168 32.597 cv
86.4168 32.597 86.5068 32.587 86.5868 32.567 cv
86.6668 32.547 86.7268 32.537 86.7868 32.517 cv
86.8468 32.4969 86.9068 32.4771 86.9468 32.457 cv
86.9868 32.437 87.0268 32.427 87.0568 32.427 cv
87.0868 32.427 87.1068 32.437 87.1268 32.447 cv
87.1468 32.457 87.1568 32.4771 87.1668 32.507 cv
87.1768 32.527 87.1868 32.567 87.1968 32.6169 cv
87.2068 32.657 87.2068 32.717 87.2068 32.787 cv
cp
96.1968 26.177 mo
96.1968 26.2469 96.1968 26.317 96.1868 26.3669 cv
96.1768 26.427 96.1668 26.467 96.1368 26.4969 cv
96.1168 26.537 96.0968 26.557 96.0668 26.577 cv
96.0368 26.587 96.0068 26.597 95.9768 26.597 cv
92.9268 26.597 li
92.9268 29.177 li
95.8168 29.177 li
95.8468 29.177 95.8668 29.177 95.8968 29.197 cv
95.9268 29.207 95.9468 29.2271 95.9768 29.257 cv
95.9968 29.297 96.0068 29.337 96.0168 29.387 cv
96.0268 29.437 96.0268 29.507 96.0268 29.587 cv
96.0268 29.667 96.0268 29.7271 96.0168 29.777 cv
96.0068 29.837 95.9968 29.877 95.9768 29.907 cv
95.9468 29.947 95.9268 29.967 95.8968 29.9871 cv
95.8668 30.007 95.8468 30.007 95.8168 30.007 cv
92.9268 30.007 li
92.9268 33.167 li
92.9268 33.197 92.9168 33.2271 92.8968 33.2469 cv
92.8768 33.277 92.8468 33.297 92.8068 33.307 cv
92.7668 33.317 92.7068 33.337 92.6368 33.347 cv
92.5768 33.3571 92.4868 33.3571 92.3668 33.3571 cv
92.2668 33.3571 92.1768 33.3571 92.1068 33.347 cv
92.0368 33.337 91.9768 33.317 91.9268 33.307 cv
91.8868 33.297 91.8568 33.277 91.8368 33.2469 cv
91.8268 33.2271 91.8168 33.197 91.8168 33.167 cv
91.8168 26.147 li
91.8168 25.9969 91.8568 25.887 91.9468 25.827 cv
92.0368 25.767 92.1268 25.7371 92.2268 25.7371 cv
95.9768 25.7371 li
96.0068 25.7371 96.0368 25.7469 96.0668 25.767 cv
96.0968 25.777 96.1168 25.807 96.1368 25.837 cv
96.1668 25.877 96.1768 25.917 96.1868 25.9771 cv
96.1968 26.037 96.1968 26.097 96.1968 26.177 cv
cp
102.297 31.197 mo
102.297 31.547 102.227 31.8669 102.077 32.147 cv
101.937 32.427 101.737 32.657 101.477 32.847 cv
101.227 33.047 100.927 33.187 100.577 33.287 cv
100.227 33.387 99.8568 33.437 99.4568 33.437 cv
99.1768 33.437 98.9168 33.417 98.6868 33.3669 cv
98.4468 33.327 98.2268 33.277 98.0468 33.207 cv
97.8568 33.147 97.6968 33.087 97.5768 33.017 cv
97.4468 32.947 97.3568 32.897 97.3068 32.847 cv
97.2568 32.797 97.2268 32.7371 97.1968 32.667 cv
97.1768 32.597 97.1668 32.4969 97.1668 32.377 cv
97.1668 32.297 97.1668 32.217 97.1768 32.167 cv
97.1868 32.1071 97.1968 32.067 97.2168 32.027 cv
97.2368 31.9969 97.2568 31.967 97.2768 31.957 cv
97.3068 31.937 97.3368 31.937 97.3668 31.937 cv
97.4268 31.937 97.5168 31.967 97.6268 32.037 cv
97.7368 32.097 97.8768 32.177 98.0468 32.2469 cv
98.2168 32.327 98.4268 32.397 98.6668 32.467 cv
98.9168 32.537 99.1968 32.577 99.5068 32.577 cv
99.7468 32.577 99.9668 32.547 100.167 32.4871 cv
100.367 32.427 100.547 32.347 100.687 32.2371 cv
100.827 32.127 100.937 31.9969 101.017 31.837 cv
101.097 31.687 101.137 31.507 101.137 31.307 cv
101.137 31.097 101.077 30.907 100.977 30.757 cv
100.867 30.6071 100.727 30.467 100.547 30.3571 cv
100.377 30.2371 100.167 30.137 99.9468 30.037 cv
99.7168 29.947 99.4868 29.847 99.2568 29.7469 cv
99.0168 29.647 98.7868 29.537 98.5668 29.417 cv
98.3368 29.297 98.1368 29.147 97.9668 28.9871 cv
97.7868 28.827 97.6468 28.627 97.5368 28.407 cv
97.4268 28.187 97.3668 27.927 97.3668 27.6169 cv
97.3668 27.297 97.4368 27.017 97.5568 26.767 cv
97.6868 26.517 97.8668 26.317 98.0868 26.147 cv
98.3168 25.9771 98.5868 25.847 98.8968 25.757 cv
99.2068 25.677 99.5468 25.627 99.9068 25.627 cv
100.087 25.627 100.277 25.647 100.457 25.677 cv
100.647 25.707 100.827 25.7371 100.987 25.787 cv
101.157 25.837 101.307 25.897 101.427 25.957 cv
101.557 26.017 101.647 26.067 101.687 26.097 cv
101.727 26.137 101.757 26.167 101.767 26.187 cv
101.777 26.207 101.787 26.2371 101.797 26.267 cv
101.807 26.307 101.817 26.347 101.817 26.387 cv
101.827 26.437 101.827 26.4969 101.827 26.577 cv
101.827 26.647 101.817 26.707 101.817 26.757 cv
101.807 26.817 101.797 26.8571 101.787 26.897 cv
101.777 26.937 101.757 26.967 101.727 26.9771 cv
101.707 26.9969 101.677 27.007 101.647 27.007 cv
101.607 27.007 101.527 26.9771 101.427 26.927 cv
101.327 26.8669 101.207 26.807 101.057 26.7371 cv
100.907 26.667 100.737 26.6071 100.537 26.547 cv
100.337 26.4969 100.117 26.467 99.8668 26.467 cv
99.6368 26.467 99.4268 26.4969 99.2568 26.547 cv
99.0868 26.6071 98.9468 26.687 98.8368 26.777 cv
98.7268 26.8669 98.6368 26.9871 98.5868 27.1071 cv
98.5268 27.2371 98.4968 27.377 98.4968 27.517 cv
98.4968 27.7371 98.5568 27.917 98.6568 28.067 cv
98.7668 28.217 98.9068 28.3571 99.0868 28.467 cv
99.2668 28.587 99.4668 28.697 99.6968 28.797 cv
99.9268 28.887 100.157 28.9871 100.397 29.087 cv
100.627 29.187 100.867 29.297 101.087 29.417 cv
101.317 29.537 101.517 29.677 101.697 29.837 cv
101.877 29.9969 102.017 30.197 102.127 30.417 cv
102.237 30.637 102.297 30.897 102.297 31.197 cv
cp
108.297 31.197 mo
108.297 31.547 108.227 31.8669 108.077 32.147 cv
107.937 32.427 107.737 32.657 107.477 32.847 cv
107.227 33.047 106.927 33.187 106.577 33.287 cv
106.227 33.387 105.857 33.437 105.457 33.437 cv
105.177 33.437 104.917 33.417 104.687 33.3669 cv
104.447 33.327 104.227 33.277 104.047 33.207 cv
103.857 33.147 103.697 33.087 103.577 33.017 cv
103.447 32.947 103.357 32.897 103.307 32.847 cv
103.257 32.797 103.227 32.7371 103.197 32.667 cv
103.177 32.597 103.167 32.4969 103.167 32.377 cv
103.167 32.297 103.167 32.217 103.177 32.167 cv
103.187 32.1071 103.197 32.067 103.217 32.027 cv
103.237 31.9969 103.257 31.967 103.277 31.957 cv
103.307 31.937 103.337 31.937 103.367 31.937 cv
103.427 31.937 103.517 31.967 103.627 32.037 cv
103.737 32.097 103.877 32.177 104.047 32.2469 cv
104.217 32.327 104.427 32.397 104.667 32.467 cv
104.917 32.537 105.197 32.577 105.507 32.577 cv
105.747 32.577 105.967 32.547 106.167 32.4871 cv
106.367 32.427 106.547 32.347 106.687 32.2371 cv
106.827 32.127 106.937 31.9969 107.017 31.837 cv
107.097 31.687 107.137 31.507 107.137 31.307 cv
107.137 31.097 107.077 30.907 106.977 30.757 cv
106.867 30.6071 106.727 30.467 106.547 30.3571 cv
106.377 30.2371 106.167 30.137 105.947 30.037 cv
105.717 29.947 105.487 29.847 105.257 29.7469 cv
105.017 29.647 104.787 29.537 104.567 29.417 cv
104.337 29.297 104.137 29.147 103.967 28.9871 cv
103.787 28.827 103.647 28.627 103.537 28.407 cv
103.427 28.187 103.367 27.927 103.367 27.6169 cv
103.367 27.297 103.437 27.017 103.557 26.767 cv
103.687 26.517 103.867 26.317 104.087 26.147 cv
104.317 25.9771 104.587 25.847 104.897 25.757 cv
105.207 25.677 105.547 25.627 105.907 25.627 cv
106.087 25.627 106.277 25.647 106.457 25.677 cv
106.647 25.707 106.827 25.7371 106.987 25.787 cv
107.157 25.837 107.307 25.897 107.427 25.957 cv
107.557 26.017 107.647 26.067 107.687 26.097 cv
107.727 26.137 107.757 26.167 107.767 26.187 cv
107.777 26.207 107.787 26.2371 107.797 26.267 cv
107.807 26.307 107.817 26.347 107.817 26.387 cv
107.827 26.437 107.827 26.4969 107.827 26.577 cv
107.827 26.647 107.817 26.707 107.817 26.757 cv
107.807 26.817 107.797 26.8571 107.787 26.897 cv
107.777 26.937 107.757 26.967 107.727 26.9771 cv
107.707 26.9969 107.677 27.007 107.647 27.007 cv
107.607 27.007 107.527 26.9771 107.427 26.927 cv
107.327 26.8669 107.207 26.807 107.057 26.7371 cv
106.907 26.667 106.737 26.6071 106.537 26.547 cv
106.337 26.4969 106.117 26.467 105.867 26.467 cv
105.637 26.467 105.427 26.4969 105.257 26.547 cv
105.087 26.6071 104.947 26.687 104.837 26.777 cv
104.727 26.8669 104.637 26.9871 104.587 27.1071 cv
104.527 27.2371 104.497 27.377 104.497 27.517 cv
104.497 27.7371 104.557 27.917 104.657 28.067 cv
104.767 28.217 104.907 28.3571 105.087 28.467 cv
105.267 28.587 105.467 28.697 105.697 28.797 cv
105.927 28.887 106.157 28.9871 106.397 29.087 cv
106.627 29.187 106.867 29.297 107.087 29.417 cv
107.317 29.537 107.517 29.677 107.697 29.837 cv
107.877 29.9969 108.017 30.197 108.127 30.417 cv
108.237 30.637 108.297 30.897 108.297 31.197 cv
cp
f
42.4268 116.177 mo
441.707 116.177 li
441.707 84.618 li
42.4268 84.618 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
42.4268 116.177 mo
441.707 116.177 li
441.707 84.618 li
42.4268 84.618 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
55.1068 99.907 mo
55.1068 99.967 55.1068 100.017 55.0968 100.067 cv
55.0968 100.117 55.0868 100.157 55.0768 100.187 cv
55.0668 100.227 55.0568 100.257 55.0368 100.287 cv
55.0168 100.307 54.9868 100.347 54.9468 100.387 cv
54.9068 100.427 54.8168 100.487 54.6768 100.567 cv
54.5368 100.647 54.3668 100.717 54.1668 100.797 cv
53.9568 100.877 53.7268 100.937 53.4568 100.987 cv
53.1968 101.047 52.9068 101.067 52.5968 101.067 cv
52.0468 101.067 51.5668 100.987 51.1268 100.827 cv
50.6868 100.657 50.3168 100.417 50.0068 100.097 cv
49.7068 99.777 49.4668 99.377 49.3068 98.907 cv
49.1368 98.437 49.0568 97.897 49.0568 97.287 cv
49.0568 96.657 49.1468 96.097 49.3268 95.607 cv
49.4968 95.107 49.7468 94.697 50.0768 94.347 cv
50.3968 94.007 50.7768 93.747 51.2268 93.567 cv
51.6768 93.387 52.1768 93.297 52.7268 93.297 cv
52.9668 93.297 53.1968 93.317 53.4268 93.357 cv
53.6568 93.407 53.8668 93.457 54.0568 93.517 cv
54.2468 93.577 54.4168 93.647 54.5668 93.737 cv
54.7268 93.817 54.8268 93.887 54.8868 93.937 cv
54.9468 93.987 54.9768 94.027 54.9968 94.057 cv
55.0168 94.087 55.0268 94.117 55.0368 94.157 cv
55.0468 94.187 55.0568 94.237 55.0668 94.287 cv
55.0668 94.337 55.0768 94.397 55.0768 94.467 cv
55.0768 94.547 55.0668 94.607 55.0568 94.667 cv
55.0568 94.717 55.0368 94.767 55.0268 94.807 cv
55.0068 94.837 54.9868 94.867 54.9568 94.887 cv
54.9368 94.907 54.9068 94.907 54.8768 94.907 cv
54.8168 94.907 54.7268 94.877 54.6168 94.797 cv
54.5168 94.717 54.3768 94.637 54.2068 94.547 cv
54.0368 94.457 53.8268 94.367 53.5768 94.297 cv
53.3368 94.217 53.0468 94.177 52.7068 94.177 cv
52.3268 94.177 51.9968 94.247 51.6868 94.377 cv
51.3868 94.517 51.1268 94.717 50.9068 94.977 cv
50.6968 95.237 50.5268 95.557 50.4068 95.937 cv
50.2868 96.307 50.2268 96.737 50.2268 97.227 cv
50.2268 97.707 50.2868 98.127 50.3968 98.497 cv
50.5168 98.867 50.6768 99.177 50.8868 99.427 cv
51.1068 99.677 51.3668 99.857 51.6768 99.987 cv
51.9868 100.117 52.3468 100.177 52.7368 100.177 cv
53.0668 100.177 53.3568 100.137 53.6068 100.067 cv
53.8568 99.997 54.0668 99.907 54.2368 99.817 cv
54.4168 99.727 54.5568 99.647 54.6768 99.567 cv
54.7868 99.497 54.8768 99.457 54.9368 99.457 cv
54.9668 99.457 54.9968 99.467 55.0168 99.477 cv
55.0368 99.487 55.0568 99.507 55.0668 99.547 cv
55.0768 99.577 55.0868 99.627 55.0968 99.677 cv
55.1068 99.737 55.1068 99.817 55.1068 99.907 cv
cp
61.1368 100.827 mo
61.1368 100.857 61.1268 100.887 61.1168 100.907 cv
61.0968 100.927 61.0668 100.947 61.0268 100.967 cv
60.9968 100.977 60.9468 100.987 60.8768 100.997 cv
60.8168 101.007 60.7368 101.007 60.6468 101.007 cv
60.5568 101.007 60.4768 101.007 60.4068 100.997 cv
60.3468 100.987 60.2968 100.977 60.2568 100.967 cv
60.2268 100.947 60.1968 100.927 60.1868 100.907 cv
60.1768 100.887 60.1668 100.857 60.1668 100.827 cv
60.1668 100.137 li
59.8368 100.467 59.5068 100.707 59.1868 100.857 cv
58.8668 101.007 58.5368 101.087 58.2068 101.087 cv
57.8268 101.087 57.4968 101.027 57.2368 100.907 cv
56.9668 100.797 56.7568 100.637 56.5868 100.437 cv
56.4268 100.237 56.3068 99.997 56.2368 99.727 cv
56.1668 99.467 56.1368 99.137 56.1368 98.757 cv
56.1368 95.557 li
56.1368 95.527 56.1368 95.497 56.1568 95.477 cv
56.1668 95.457 56.1968 95.437 56.2468 95.417 cv
56.2868 95.397 56.3368 95.387 56.4068 95.387 cv
56.4768 95.377 56.5668 95.377 56.6668 95.377 cv
56.7668 95.377 56.8568 95.377 56.9268 95.387 cv
56.9968 95.387 57.0468 95.397 57.0868 95.417 cv
57.1268 95.437 57.1568 95.457 57.1768 95.477 cv
57.1968 95.497 57.2068 95.527 57.2068 95.557 cv
57.2068 98.627 li
57.2068 98.937 57.2268 99.177 57.2768 99.367 cv
57.3268 99.557 57.4068 99.707 57.5068 99.847 cv
57.6068 99.977 57.7268 100.077 57.8868 100.147 cv
58.0368 100.217 58.2168 100.257 58.4268 100.257 cv
58.6968 100.257 58.9568 100.167 59.2268 99.997 cv
59.4868 99.827 59.7668 99.577 60.0668 99.237 cv
60.0668 95.557 li
60.0668 95.527 60.0768 95.497 60.0868 95.477 cv
60.1068 95.457 60.1268 95.437 60.1768 95.417 cv
60.2168 95.397 60.2768 95.387 60.3368 95.387 cv
60.4068 95.377 60.4968 95.377 60.5968 95.377 cv
60.7068 95.377 60.7868 95.377 60.8568 95.387 cv
60.9268 95.387 60.9768 95.397 61.0168 95.417 cv
61.0568 95.437 61.0868 95.457 61.1068 95.477 cv
61.1268 95.497 61.1368 95.527 61.1368 95.557 cv
cp
67.0568 95.897 mo
67.0568 95.987 67.0568 96.057 67.0468 96.117 cv
67.0468 96.177 67.0368 96.227 67.0268 96.257 cv
67.0068 96.287 66.9968 96.317 66.9768 96.337 cv
66.9568 96.347 66.9268 96.357 66.8968 96.357 cv
66.8568 96.357 66.8168 96.347 66.7668 96.337 cv
66.7168 96.317 66.6668 96.297 66.5968 96.277 cv
66.5368 96.257 66.4668 96.247 66.3968 96.227 cv
66.3168 96.217 66.2268 96.207 66.1368 96.207 cv
66.0368 96.207 65.9268 96.227 65.8268 96.267 cv
65.7168 96.307 65.6168 96.367 65.4968 96.457 cv
65.3868 96.547 65.2668 96.667 65.1368 96.817 cv
65.0168 96.967 64.8768 97.147 64.7268 97.357 cv
64.7268 100.827 li
64.7268 100.857 64.7168 100.887 64.7068 100.907 cv
64.6868 100.927 64.6568 100.947 64.6168 100.967 cv
64.5768 100.977 64.5268 100.987 64.4568 100.997 cv
64.3868 101.007 64.2968 101.007 64.1968 101.007 cv
64.0868 101.007 64.0068 101.007 63.9368 100.997 cv
63.8668 100.987 63.8168 100.977 63.7668 100.967 cv
63.7268 100.947 63.7068 100.927 63.6868 100.907 cv
63.6768 100.887 63.6668 100.857 63.6668 100.827 cv
63.6668 95.557 li
63.6668 95.527 63.6768 95.497 63.6868 95.477 cv
63.6968 95.457 63.7268 95.437 63.7668 95.417 cv
63.7968 95.397 63.8468 95.387 63.9068 95.387 cv
63.9668 95.377 64.0468 95.377 64.1468 95.377 cv
64.2468 95.377 64.3168 95.377 64.3868 95.387 cv
64.4468 95.387 64.4968 95.397 64.5268 95.417 cv
64.5668 95.437 64.5868 95.457 64.6068 95.477 cv
64.6168 95.497 64.6268 95.527 64.6268 95.557 cv
64.6268 96.327 li
64.7868 96.117 64.9368 95.937 65.0768 95.807 cv
65.2168 95.677 65.3468 95.567 65.4668 95.497 cv
65.5968 95.417 65.7168 95.367 65.8368 95.337 cv
65.9668 95.307 66.0868 95.297 66.2068 95.297 cv
66.2668 95.297 66.3268 95.297 66.3968 95.297 cv
66.4768 95.307 66.5468 95.317 66.6268 95.337 cv
66.6968 95.347 66.7668 95.367 66.8368 95.387 cv
66.8968 95.407 66.9368 95.427 66.9668 95.447 cv
66.9868 95.467 67.0068 95.487 67.0168 95.497 cv
67.0268 95.517 67.0368 95.537 67.0368 95.567 cv
67.0468 95.597 67.0468 95.637 67.0568 95.687 cv
67.0568 95.737 67.0568 95.807 67.0568 95.897 cv
cp
71.5568 95.897 mo
71.5568 95.987 71.5568 96.057 71.5468 96.117 cv
71.5468 96.177 71.5368 96.227 71.5268 96.257 cv
71.5068 96.287 71.4968 96.317 71.4768 96.337 cv
71.4568 96.347 71.4268 96.357 71.3968 96.357 cv
71.3568 96.357 71.3168 96.347 71.2668 96.337 cv
71.2168 96.317 71.1668 96.297 71.0968 96.277 cv
71.0368 96.257 70.9668 96.247 70.8968 96.227 cv
70.8168 96.217 70.7268 96.207 70.6368 96.207 cv
70.5368 96.207 70.4268 96.227 70.3268 96.267 cv
70.2168 96.307 70.1168 96.367 69.9968 96.457 cv
69.8868 96.547 69.7668 96.667 69.6368 96.817 cv
69.5168 96.967 69.3768 97.147 69.2268 97.357 cv
69.2268 100.827 li
69.2268 100.857 69.2168 100.887 69.2068 100.907 cv
69.1868 100.927 69.1568 100.947 69.1168 100.967 cv
69.0768 100.977 69.0268 100.987 68.9568 100.997 cv
68.8868 101.007 68.7968 101.007 68.6968 101.007 cv
68.5868 101.007 68.5068 101.007 68.4368 100.997 cv
68.3668 100.987 68.3168 100.977 68.2668 100.967 cv
68.2268 100.947 68.2068 100.927 68.1868 100.907 cv
68.1768 100.887 68.1668 100.857 68.1668 100.827 cv
68.1668 95.557 li
68.1668 95.527 68.1768 95.497 68.1868 95.477 cv
68.1968 95.457 68.2268 95.437 68.2668 95.417 cv
68.2968 95.397 68.3468 95.387 68.4068 95.387 cv
68.4668 95.377 68.5468 95.377 68.6468 95.377 cv
68.7468 95.377 68.8168 95.377 68.8868 95.387 cv
68.9468 95.387 68.9968 95.397 69.0268 95.417 cv
69.0668 95.437 69.0868 95.457 69.1068 95.477 cv
69.1168 95.497 69.1268 95.527 69.1268 95.557 cv
69.1268 96.327 li
69.2868 96.117 69.4368 95.937 69.5768 95.807 cv
69.7168 95.677 69.8468 95.567 69.9668 95.497 cv
70.0968 95.417 70.2168 95.367 70.3368 95.337 cv
70.4668 95.307 70.5868 95.297 70.7068 95.297 cv
70.7668 95.297 70.8268 95.297 70.8968 95.297 cv
70.9768 95.307 71.0468 95.317 71.1268 95.337 cv
71.1968 95.347 71.2668 95.367 71.3368 95.387 cv
71.3968 95.407 71.4368 95.427 71.4668 95.447 cv
71.4868 95.467 71.5068 95.487 71.5168 95.497 cv
71.5268 95.517 71.5368 95.537 71.5368 95.567 cv
71.5468 95.597 71.5468 95.637 71.5568 95.687 cv
71.5568 95.737 71.5568 95.807 71.5568 95.897 cv
cp
77.6168 97.967 mo
77.6168 98.117 77.5768 98.227 77.4868 98.287 cv
77.4068 98.357 77.3068 98.387 77.1968 98.387 cv
73.3768 98.387 li
73.3768 98.677 73.4168 98.947 73.4768 99.177 cv
73.5468 99.407 73.6468 99.617 73.8068 99.777 cv
73.9568 99.947 74.1468 100.077 74.3868 100.167 cv
74.6368 100.257 74.9268 100.307 75.2768 100.307 cv
75.5568 100.307 75.7968 100.277 76.0168 100.237 cv
76.2368 100.197 76.4168 100.157 76.5768 100.107 cv
76.7368 100.057 76.8668 100.007 76.9668 99.967 cv
77.0668 99.927 77.1468 99.907 77.1968 99.907 cv
77.2268 99.907 77.2568 99.907 77.2768 99.927 cv
77.2968 99.937 77.3168 99.957 77.3268 99.987 cv
77.3468 100.017 77.3568 100.047 77.3568 100.097 cv
77.3668 100.147 77.3668 100.207 77.3668 100.277 cv
77.3668 100.327 77.3668 100.377 77.3668 100.407 cv
77.3568 100.447 77.3568 100.477 77.3468 100.507 cv
77.3368 100.537 77.3268 100.567 77.3168 100.587 cv
77.2968 100.617 77.2768 100.637 77.2568 100.657 cv
77.2368 100.677 77.1668 100.717 77.0468 100.767 cv
76.9368 100.807 76.7868 100.857 76.5968 100.907 cv
76.4168 100.957 76.1968 100.997 75.9568 101.027 cv
75.7168 101.067 75.4568 101.087 75.1768 101.087 cv
74.7068 101.087 74.2868 101.027 73.9268 100.907 cv
73.5668 100.787 73.2668 100.607 73.0168 100.367 cv
72.7768 100.127 72.5868 99.827 72.4668 99.467 cv
72.3368 99.107 72.2768 98.697 72.2768 98.217 cv
72.2768 97.767 72.3468 97.357 72.4768 96.997 cv
72.5968 96.637 72.7868 96.327 73.0268 96.077 cv
73.2768 95.827 73.5668 95.627 73.9068 95.497 cv
74.2568 95.357 74.6368 95.297 75.0668 95.297 cv
75.5168 95.297 75.9068 95.357 76.2268 95.487 cv
76.5468 95.627 76.8068 95.807 77.0168 96.027 cv
77.2268 96.257 77.3768 96.517 77.4668 96.817 cv
77.5668 97.117 77.6168 97.447 77.6168 97.787 cv
cp
76.5468 97.677 mo
76.5568 97.167 76.4368 96.767 76.1768 96.477 cv
75.9068 96.197 75.5268 96.047 75.0068 96.047 cv
74.7468 96.047 74.5168 96.097 74.3168 96.187 cv
74.1168 96.277 73.9468 96.387 73.8168 96.537 cv
73.6768 96.687 73.5768 96.857 73.5068 97.057 cv
73.4268 97.257 73.3868 97.467 73.3768 97.677 cv
cp
84.4068 100.827 mo
84.4068 100.857 84.4068 100.887 84.3868 100.907 cv
84.3668 100.927 84.3368 100.947 84.2968 100.967 cv
84.2668 100.977 84.2068 100.987 84.1368 100.997 cv
84.0668 101.007 83.9868 101.007 83.8868 101.007 cv
83.7768 101.007 83.6868 101.007 83.6168 100.997 cv
83.5468 100.987 83.4968 100.977 83.4568 100.967 cv
83.4168 100.947 83.3868 100.927 83.3768 100.907 cv
83.3568 100.887 83.3468 100.857 83.3468 100.827 cv
83.3468 97.737 li
83.3468 97.437 83.3168 97.197 83.2668 97.017 cv
83.2168 96.827 83.1468 96.677 83.0468 96.537 cv
82.9468 96.407 82.8168 96.307 82.6568 96.237 cv
82.5068 96.167 82.3268 96.127 82.1168 96.127 cv
81.8468 96.127 81.5868 96.217 81.3168 96.387 cv
81.0468 96.557 80.7668 96.807 80.4768 97.147 cv
80.4768 100.827 li
80.4768 100.857 80.4668 100.887 80.4568 100.907 cv
80.4368 100.927 80.4068 100.947 80.3668 100.967 cv
80.3268 100.977 80.2768 100.987 80.2068 100.997 cv
80.1368 101.007 80.0468 101.007 79.9468 101.007 cv
79.8368 101.007 79.7568 101.007 79.6868 100.997 cv
79.6168 100.987 79.5668 100.977 79.5168 100.967 cv
79.4768 100.947 79.4568 100.927 79.4368 100.907 cv
79.4268 100.887 79.4168 100.857 79.4168 100.827 cv
79.4168 95.557 li
79.4168 95.527 79.4268 95.497 79.4368 95.477 cv
79.4468 95.457 79.4768 95.437 79.5168 95.417 cv
79.5468 95.397 79.5968 95.387 79.6568 95.387 cv
79.7168 95.377 79.7968 95.377 79.8968 95.377 cv
79.9968 95.377 80.0668 95.377 80.1368 95.387 cv
80.1968 95.387 80.2468 95.397 80.2768 95.417 cv
80.3168 95.437 80.3368 95.457 80.3568 95.477 cv
80.3668 95.497 80.3768 95.527 80.3768 95.557 cv
80.3768 96.257 li
80.7068 95.917 81.0268 95.677 81.3568 95.527 cv
81.6768 95.367 82.0068 95.297 82.3368 95.297 cv
82.7268 95.297 83.0468 95.347 83.3068 95.467 cv
83.5768 95.587 83.7868 95.747 83.9568 95.947 cv
84.1168 96.147 84.2368 96.377 84.3068 96.647 cv
84.3768 96.917 84.4068 97.237 84.4068 97.617 cv
cp
89.1868 100.447 mo
89.1868 100.557 89.1768 100.647 89.1568 100.717 cv
89.1368 100.777 89.1168 100.827 89.0768 100.857 cv
89.0468 100.887 88.9968 100.917 88.9268 100.947 cv
88.8568 100.977 88.7768 100.997 88.6868 101.017 cv
88.5968 101.027 88.5068 101.047 88.4068 101.057 cv
88.3068 101.067 88.2068 101.077 88.1168 101.077 cv
87.8068 101.077 87.5568 101.037 87.3368 100.967 cv
87.1268 100.897 86.9468 100.787 86.8068 100.637 cv
86.6768 100.497 86.5768 100.307 86.5068 100.087 cv
86.4468 99.857 86.4168 99.597 86.4168 99.287 cv
86.4168 96.207 li
85.6068 96.207 li
85.5368 96.207 85.4868 96.177 85.4468 96.117 cv
85.4068 96.047 85.3968 95.947 85.3968 95.807 cv
85.3968 95.737 85.3968 95.667 85.4068 95.617 cv
85.4168 95.567 85.4368 95.527 85.4468 95.497 cv
85.4668 95.457 85.4868 95.437 85.5168 95.427 cv
85.5468 95.407 85.5768 95.407 85.6068 95.407 cv
86.4168 95.407 li
86.4168 94.147 li
86.4168 94.127 86.4268 94.097 86.4368 94.077 cv
86.4568 94.047 86.4868 94.027 86.5268 94.007 cv
86.5668 93.997 86.6168 93.977 86.6868 93.977 cv
86.7568 93.967 86.8468 93.967 86.9468 93.967 cv
87.0568 93.967 87.1368 93.967 87.2068 93.977 cv
87.2768 93.977 87.3368 93.997 87.3668 94.007 cv
87.4068 94.027 87.4368 94.047 87.4568 94.077 cv
87.4668 94.097 87.4768 94.127 87.4768 94.147 cv
87.4768 95.407 li
88.9668 95.407 li
89.0068 95.407 89.0368 95.407 89.0568 95.427 cv
89.0868 95.437 89.1068 95.457 89.1268 95.497 cv
89.1468 95.527 89.1568 95.567 89.1668 95.617 cv
89.1768 95.667 89.1868 95.737 89.1868 95.807 cv
89.1868 95.947 89.1668 96.047 89.1268 96.117 cv
89.0868 96.177 89.0368 96.207 88.9668 96.207 cv
87.4768 96.207 li
87.4768 99.147 li
87.4768 99.507 87.5368 99.787 87.6568 99.967 cv
87.7768 100.157 87.9868 100.247 88.2968 100.247 cv
88.3868 100.247 88.4768 100.237 88.5568 100.227 cv
88.6368 100.207 88.7068 100.187 88.7668 100.167 cv
88.8268 100.147 88.8768 100.127 88.9168 100.107 cv
88.9568 100.097 88.9968 100.087 89.0368 100.087 cv
89.0568 100.087 89.0768 100.087 89.0968 100.097 cv
89.1168 100.107 89.1268 100.127 89.1368 100.157 cv
89.1468 100.187 89.1568 100.217 89.1668 100.267 cv
89.1768 100.317 89.1868 100.377 89.1868 100.447 cv
cp
99.7968 100.827 mo
99.7968 100.857 99.7868 100.887 99.7668 100.907 cv
99.7568 100.927 99.7268 100.947 99.6768 100.957 cv
99.6368 100.977 99.5768 100.987 99.5068 100.997 cv
99.4368 101.007 99.3468 101.007 99.2468 101.007 cv
99.1368 101.007 99.0468 101.007 98.9768 100.997 cv
98.9068 100.987 98.8568 100.977 98.8068 100.957 cv
98.7668 100.947 98.7368 100.927 98.7168 100.907 cv
98.6968 100.887 98.6968 100.857 98.6968 100.827 cv
98.6968 97.457 li
94.8968 97.457 li
94.8968 100.827 li
94.8968 100.857 94.8868 100.887 94.8668 100.907 cv
94.8568 100.927 94.8268 100.947 94.7768 100.957 cv
94.7368 100.977 94.6768 100.987 94.6068 100.997 cv
94.5368 101.007 94.4468 101.007 94.3468 101.007 cv
94.2368 101.007 94.1468 101.007 94.0768 100.997 cv
94.0068 100.987 93.9468 100.977 93.9068 100.957 cv
93.8568 100.947 93.8268 100.927 93.8168 100.907 cv
93.7968 100.887 93.7868 100.857 93.7868 100.827 cv
93.7868 93.547 li
93.7868 93.517 93.7968 93.487 93.8168 93.467 cv
93.8268 93.437 93.8568 93.427 93.9068 93.407 cv
93.9468 93.397 94.0068 93.387 94.0768 93.377 cv
94.1468 93.367 94.2368 93.357 94.3468 93.357 cv
94.4468 93.357 94.5368 93.367 94.6068 93.377 cv
94.6768 93.387 94.7368 93.397 94.7768 93.407 cv
94.8268 93.427 94.8568 93.437 94.8668 93.467 cv
94.8868 93.487 94.8968 93.517 94.8968 93.547 cv
94.8968 96.577 li
98.6968 96.577 li
98.6968 93.547 li
98.6968 93.517 98.6968 93.487 98.7168 93.467 cv
98.7368 93.437 98.7668 93.427 98.8068 93.407 cv
98.8568 93.397 98.9068 93.387 98.9768 93.377 cv
99.0468 93.367 99.1368 93.357 99.2468 93.357 cv
99.3468 93.357 99.4368 93.367 99.5068 93.377 cv
99.5768 93.387 99.6368 93.397 99.6768 93.407 cv
99.7268 93.427 99.7568 93.437 99.7668 93.467 cv
99.7868 93.487 99.7968 93.517 99.7968 93.547 cv
cp
106.517 98.847 mo
106.517 99.207 106.447 99.517 106.297 99.797 cv
106.157 100.077 105.957 100.307 105.707 100.507 cv
105.447 100.697 105.147 100.847 104.797 100.937 cv
104.457 101.037 104.077 101.087 103.677 101.087 cv
103.407 101.087 103.147 101.067 102.907 101.027 cv
102.667 100.977 102.457 100.927 102.267 100.867 cv
102.077 100.807 101.927 100.737 101.797 100.667 cv
101.667 100.607 101.577 100.547 101.537 100.497 cv
101.487 100.457 101.447 100.397 101.427 100.327 cv
101.397 100.247 101.387 100.157 101.387 100.037 cv
101.387 99.947 101.387 99.877 101.397 99.817 cv
101.407 99.757 101.417 99.717 101.437 99.677 cv
101.457 99.647 101.477 99.617 101.507 99.607 cv
101.527 99.597 101.557 99.587 101.597 99.587 cv
101.657 99.587 101.737 99.617 101.847 99.687 cv
101.957 99.757 102.097 99.827 102.267 99.907 cv
102.447 99.977 102.647 100.057 102.897 100.127 cv
103.137 100.187 103.417 100.227 103.737 100.227 cv
103.977 100.227 104.197 100.197 104.397 100.137 cv
104.597 100.077 104.767 99.997 104.907 99.887 cv
105.057 99.777 105.167 99.647 105.237 99.497 cv
105.317 99.337 105.357 99.157 105.357 98.957 cv
105.357 98.747 105.307 98.557 105.197 98.407 cv
105.087 98.257 104.947 98.127 104.767 98.007 cv
104.597 97.897 104.397 97.787 104.167 97.687 cv
103.947 97.597 103.707 97.497 103.477 97.397 cv
103.237 97.297 103.007 97.187 102.787 97.067 cv
102.567 96.947 102.367 96.807 102.187 96.637 cv
102.007 96.477 101.867 96.287 101.757 96.067 cv
101.647 95.847 101.597 95.577 101.597 95.267 cv
101.597 94.957 101.657 94.667 101.787 94.427 cv
101.907 94.177 102.087 93.967 102.317 93.797 cv
102.537 93.627 102.807 93.507 103.117 93.417 cv
103.427 93.327 103.767 93.287 104.127 93.287 cv
104.307 93.287 104.497 93.297 104.687 93.327 cv
104.867 93.357 105.047 93.397 105.217 93.447 cv
105.377 93.497 105.527 93.547 105.657 93.607 cv
105.787 93.667 105.867 93.717 105.907 93.757 cv
105.947 93.787 105.977 93.817 105.987 93.847 cv
106.007 93.867 106.017 93.887 106.017 93.927 cv
106.027 93.957 106.037 93.997 106.037 94.047 cv
106.047 94.087 106.047 94.147 106.047 94.227 cv
106.047 94.297 106.047 94.357 106.037 94.417 cv
106.027 94.467 106.017 94.517 106.007 94.547 cv
105.997 94.587 105.977 94.617 105.957 94.637 cv
105.927 94.647 105.907 94.657 105.877 94.657 cv
105.827 94.657 105.747 94.637 105.647 94.577 cv
105.547 94.527 105.427 94.457 105.277 94.397 cv
105.137 94.327 104.957 94.257 104.757 94.207 cv
104.557 94.147 104.337 94.117 104.087 94.117 cv
103.857 94.117 103.657 94.147 103.477 94.207 cv
103.307 94.257 103.167 94.337 103.057 94.427 cv
102.947 94.527 102.857 94.637 102.807 94.767 cv
102.747 94.897 102.717 95.027 102.717 95.177 cv
102.717 95.387 102.777 95.567 102.887 95.717 cv
102.987 95.877 103.137 96.007 103.307 96.127 cv
103.487 96.237 103.697 96.347 103.917 96.447 cv
104.147 96.547 104.377 96.647 104.617 96.747 cv
104.857 96.847 105.087 96.947 105.317 97.067 cv
105.537 97.187 105.747 97.327 105.917 97.497 cv
106.097 97.657 106.247 97.847 106.357 98.067 cv
106.467 98.287 106.517 98.547 106.517 98.847 cv
cp
112.517 98.847 mo
112.517 99.207 112.447 99.517 112.297 99.797 cv
112.157 100.077 111.957 100.307 111.707 100.507 cv
111.447 100.697 111.147 100.847 110.797 100.937 cv
110.457 101.037 110.077 101.087 109.677 101.087 cv
109.407 101.087 109.147 101.067 108.907 101.027 cv
108.667 100.977 108.457 100.927 108.267 100.867 cv
108.077 100.807 107.927 100.737 107.797 100.667 cv
107.667 100.607 107.577 100.547 107.537 100.497 cv
107.487 100.457 107.447 100.397 107.427 100.327 cv
107.397 100.247 107.387 100.157 107.387 100.037 cv
107.387 99.947 107.387 99.877 107.397 99.817 cv
107.407 99.757 107.417 99.717 107.437 99.677 cv
107.457 99.647 107.477 99.617 107.507 99.607 cv
107.527 99.597 107.557 99.587 107.597 99.587 cv
107.657 99.587 107.737 99.617 107.847 99.687 cv
107.957 99.757 108.097 99.827 108.267 99.907 cv
108.447 99.977 108.647 100.057 108.897 100.127 cv
109.137 100.187 109.417 100.227 109.737 100.227 cv
109.977 100.227 110.197 100.197 110.397 100.137 cv
110.597 100.077 110.767 99.997 110.907 99.887 cv
111.057 99.777 111.167 99.647 111.237 99.497 cv
111.317 99.337 111.357 99.157 111.357 98.957 cv
111.357 98.747 111.307 98.557 111.197 98.407 cv
111.087 98.257 110.947 98.127 110.767 98.007 cv
110.597 97.897 110.397 97.787 110.167 97.687 cv
109.947 97.597 109.707 97.497 109.477 97.397 cv
109.237 97.297 109.007 97.187 108.787 97.067 cv
108.567 96.947 108.367 96.807 108.187 96.637 cv
108.007 96.477 107.867 96.287 107.757 96.067 cv
107.647 95.847 107.597 95.577 107.597 95.267 cv
107.597 94.957 107.657 94.667 107.787 94.427 cv
107.907 94.177 108.087 93.967 108.317 93.797 cv
108.537 93.627 108.807 93.507 109.117 93.417 cv
109.427 93.327 109.767 93.287 110.127 93.287 cv
110.307 93.287 110.497 93.297 110.687 93.327 cv
110.867 93.357 111.047 93.397 111.217 93.447 cv
111.377 93.497 111.527 93.547 111.657 93.607 cv
111.787 93.667 111.867 93.717 111.907 93.757 cv
111.947 93.787 111.977 93.817 111.987 93.847 cv
112.007 93.867 112.017 93.887 112.017 93.927 cv
112.027 93.957 112.037 93.997 112.037 94.047 cv
112.047 94.087 112.047 94.147 112.047 94.227 cv
112.047 94.297 112.047 94.357 112.037 94.417 cv
112.027 94.467 112.017 94.517 112.007 94.547 cv
111.997 94.587 111.977 94.617 111.957 94.637 cv
111.927 94.647 111.907 94.657 111.877 94.657 cv
111.827 94.657 111.747 94.637 111.647 94.577 cv
111.547 94.527 111.427 94.457 111.277 94.397 cv
111.137 94.327 110.957 94.257 110.757 94.207 cv
110.557 94.147 110.337 94.117 110.087 94.117 cv
109.857 94.117 109.657 94.147 109.477 94.207 cv
109.307 94.257 109.167 94.337 109.057 94.427 cv
108.947 94.527 108.857 94.637 108.807 94.767 cv
108.747 94.897 108.717 95.027 108.717 95.177 cv
108.717 95.387 108.777 95.567 108.887 95.717 cv
108.987 95.877 109.137 96.007 109.307 96.127 cv
109.487 96.237 109.697 96.347 109.917 96.447 cv
110.147 96.547 110.377 96.647 110.617 96.747 cv
110.857 96.847 111.087 96.947 111.317 97.067 cv
111.537 97.187 111.747 97.327 111.917 97.497 cv
112.097 97.657 112.247 97.847 112.357 98.067 cv
112.467 98.287 112.517 98.547 112.517 98.847 cv
cp
f
%ADOBeginSubsetFont: WGJAAA+CourierNewPSMT Initial
ct_T42Dict begin
-0.121 -0.68 0.621 1.02
 256 array 0 1 255 {1 index exch /.notdef put} for  /WGJAAA+CourierNewPSMT
Type42DictBegin
[<00010000000c000c000c000c4f532f32132c8072000000cc000000606376
7420aa0e65140000012c0000078c6670676d379d41d9000008b80000063f
676c7966413cf20500007f540000235a68656164dfe7637f00000ef80000
0036686865610aae01c400000f3000000024686d7478c59ba8c200000f54
00001cfa6c6f6361e6ecdd9700002c5000001cf66d61787012db0b740000
4948000000206e616d65812fe3610000496800002b2770726570afc0175c
0000749000000ac367646972000000000000000000000000000304cd0190
00050008059a05330000011d059a05330000036100660212050502070309
020205020404e0002effc00078430000000900000000544d432000400020
25cc04e7fe7e000006a90267400001ffffff000003620492000000200015
04e700000492001b04e7001e0362001e0000ffdf0000ffdf0000ffe2fe7e
000004e70000fefdffff02d7000000540000005400000000000000000054
00540095005400540054014d005400540054006400d4006d009100970054
013301ce00a90040000f005400d4000301000158003c0093007700d50055
fff10054002100a300ef002c00390068fffe0011007f00fe017d00a30102
0002000f003800d300650090023c032b04eb0001002a013003ab0182002d
003c00540096001700cf0158002aff0a003c00b3021d023c0002005400cb
035f082cff30fff201c004c9ff6200a2013c02d604ae00cc00ed01220400
fe83ff8bff9bff9c000e00f4031dfdc3ff31ff6d0054005500600075007c
007f0080009e00cd0159023d02bfff89001100580065007f00b700cb012b
040004600012005200550084009800b900be00cf00d800e50101010f0128
018001d301d40500fdc4fec4ff49ff62ff6f0045004e00500080010f011d
01250141025a035a03ad03d7fde3fee0ff1e0011005400760078007b008f
009000ab00d700d900db0103020a0254025503ad001b003d005a00620091
0093009e00a900c900df01080134013a0140018601ac02760403fdc40003
0004001500390048005400640091009b00a300a500af00c400d000d100d7
00f100fe01030119012b0155015c017d0185018e019401a501ac01ae01eb
020502d80303038104c604ebfed6ff0aff9affa9001b001b001c00200029
002c0038004c006d00cd00ea0128012a012c013f01d2022b022c0301040c
fdfefe33ff47ff7fffc5ffd7002300270038003d00440045004d00570062
0079008300bb00c600cd00cd00ce00e600f701010103010a0112011d0120
012301520153017501ac01ad01ef01fd0216021d0238026c02b202d4032b
03cd045704aefdb4fe15feb2feeffeffffabffb0ffc3ffcc000200540036
003800430055005d00700073007c007f00b500bb00c500e400e900f50101
0106011f01280148014b0155019801ac01df01fc02000208027e02ac02ff
033d039003c904190498fe4efe6dfe98feb3ff34ff4d0001000300050019
00340034003a003c0055005900730082009100a300aa00ab00b300cc00d6
00ee0118011e013001490156015801600168016f01700171017b017c0185
01a901b401bb01d601db01ee020402060215022b022b02630282029302b4
02c402d602e40300035303580371037b039303b403d003e80410042c0430
044d04600479047a05000503061608ccfc17fc6dfd62fd9afdc3fe2efe44
fe6bfe8bfec1fed6fee2ff0bffbfffe500060030003c005900670073007d
007f0086008e009f00a900aa00d600e100e700eb00f100f200f501030109
011a011e011f012c013f01430149014d015601570159016601660168016a
0175018001ab01b201bc01c001c101c901cb01d201dc01ef02010215022e
022e023b023d025502660282029a02ab02b002d902d902f502f90326032c
03320333033e03600371038703880393039703dc03e50402041504310453
047f04c7050305640596059b05c405c805ea0610065b0054005400540054
00000000000000000000000003cc02c1043e036c00a00050020303ea02d2
023c017d02fb01a7021d01c102f5021d035003500243023b000201bb0048
006d0014079b06210621021400100760000000000299022d03570426030c
007400500000025a0286026000a601bc00fb02480152017603cd02a0025f
039b0492043e01d7007f02c10400020d01f600410041013e01a901d30071
02d6022d03af04ce00000000050803fc056d020dff8704e7050203d20000
043d010203ca015a01ed0150021601c1013b028e0023015a011001ed0023
0149003900d9004d00b90157003804e0038c024a02db0039006c009301c1
03cc02bb006c02bb01a200f2003800fe01720150019c0331007e01710054
0039006a0294002202700222007c005500f30182011500d700fb01ab0124
02660004030d026300d40259003c00d00112022e017e0034006d008b018a
002c01fd01c000cc02910036016503befc19fd280201fced01b1034800b1
01fb04c904c9020400fb01c1021d01300108014000e100a3009b005500c6
0021032600a900380005022c0003005d0060004c001102f5017c026c0069
019803e901a50241004f0065037302460196fef504410333004100ba0119
014306390800053c051d0434041504e7003e006700670000066804df0582
0067006703d303f4ff59ff21fe5f050efedc007a00d9004800db018b00b3
004800da0116015e015104ff024b04ffff5600ab02af04dcff17010c0121
00d1ff300149feb5013c0124ff200171ff0b01510086005e06a9fd99048b
04850475047c0000fffb007b00860092009a00c200d500a4001e00270039
004c0054005c00620069002d0030003200350038003e004200440049004c
00500056005a006000640066006e00710078009d00ac00b10040004b0055
005e00620066006a007100730077007b007e00820087008c0091009600a6
00d102aa029f0321028802c50276026900da00da03c70340015600d40489
047f005300240051011300690037003c001f008c008cffd3005a0029001b
010f0134007f00540054ffebffd6ffa8fdcf00a600a600920092064200eb
06430028004f01f6041a010540425554403f3e3d3c3b3a39383735343332
31302f2e2d2c2b2a292827262524232221201f1e1d1c1b1a191817161514
131211100f0e0d0c0b0a090807060504030201002c4523466020b02660b0
04262348482d2c452346236120b02661b004262348482d2c45234660b020
6120b04660b004262348482d2c4523462361b0206020b02661b02061b004
262348482d2c45234660b0406120b06660b004262348482d2c4523462361
b0406020b02661b04061b004262348482d2c0110203c003c2d2c20452320
b0cd442320b8015a51582320b08d44235920b0ed51582320b04d44235920
b09051582320b00d44235921212d2c20204518684420b001602045b04676
688a4560442d2c01b10b0a432343650a2d2c00b10a0b4323430b2d2c00b0
172370b101173e01b0172370b10217453ab10200080d2d2c45b01a234445
b01923442d2c2045b00325456164b050515845441b2121592d2cb0014363
2362b0002342b00f2b2d2c2045b0004360442d2c01b00643b00743650a2d
2c2069b04061b0008b20b12cc08a8cb8100062602b0c642364615c58b003
61592d2c45b0112bb0172344b0177ae4182d2c45b0112bb01723442d2cb0
1243588745b0112bb0172344b0177ae41b038a45186920b01723448a8a87
20b0a05158b0112bb0172344b0177ae41b21b0177ae45959182d2c2d2cb0
022546608a46b040618c482d2c4b53205c58b002855958b00185592d2c20
b0032545b019234445b01a23444565234520b00325606a20b00923422368
8a6a606120b01a8ab000527921b21a1a40b9ffe0001a45208a54582321b0
3f1b235961441cb114008a5279b31940201945208a54582321b03f1b2359
61442d2cb110114323430b2d2cb10e0f4323430b2d2cb10c0d4323430b2d
2cb10c0d432343650b2d2cb10e0f432343650b2d2cb11011432343650b2d
2c4b525845441b2121592d2c0120b003252349b04060b0206320b0005258
23b002253823b002256538008a63381b212121212159012d2c4bb0645158
4569b00943608a103a1b212121592d2c01b005251023208af500b0016023
edec2d2c01b005251023208af500b0016123edec2d2c01b0062510f500ed
ec2d2c20b001600110203c003c2d2c20b001610110203c003c2d2cb02b2b
b02a2a2d2c00b00743b006430b2d2c3eb02a2a2d2c352d2c76b802692370
1020b802694520b0005058b00161593a2f182d2c21210c6423648bb84000
622d2c21b08051580c6423648bb82000621bb200402f2b59b002602d2c21
b0c051580c6423648bb81555621bb200802f2b59b002602d2c0c6423648b
b84000626023212d2cb4000100000015b00826b00826b00826b008260f10
161345683ab001162d2cb4000100000015b00826b00826b00826b008260f
1016134568653ab001162d2c4b53234b515a5820458a60441b2121592d2c
4b545820458a60441b2121592d2c4b53234b515a58381b2121592d2c4b54
58381b2121592d2cb0134358031b02592d2cb0134358021b03592d2c4b54
b012435c5a58381b2121592d2cb012435c580cb00425b00425060c642364
6164b807085158b00425b00425012046b01060482046b0106048590a2121
1b2121592d2cb012435c580cb00425b00425060c6423646164b807085158
b00425b00425012046b8fff060482046b8fff06048590a21211b2121592d
2c4b53234b515a58b03a2b1b2121592d2c4b53234b515a58b03b2b1b2121
592d2c4b53234b515ab012435c5a58381b2121592d2c0c8a034b54b00426
024b545a8a8a0ab012435c5a58381b2121592d2c462346608a8a46232046
8a608a61b8ff8062232010238ab9032603268a70456020b0005058b00161
b8ffba8b1bb0468c59b0106068013a2d2cb1020042b123018851b1400188
535a58b910000020885458b202010243604259b12401885158b920000040
885458b2020202436042b12401885458b2022002436042004b014b5258b2
020802436042591bb940000080885458b202040243604259b94000008063
b80100885458b202080243604259b94000010063b80200885458b2021002
43604259b12601885158b94000020063b80400885458b202400243604259
b94000040063b80800885458b202800243604259b12801885158b9400008
0063b81000885458ba000201000002436042595959595959592d2cb00243
54584b53234b515a58381b2121591b21212121592d00000100000006e666
696b14ea5f0f3cf50809080000000000a325516100000000d19de3ffff07
fa9004fb082b0000000900010000000000000001000006a9fd99000004cd
ff07ff5a04fb00010000000000000000000000000000000304cd00670000
000004cd0000000001eb010a00bb00e400bb00fe01e1025d012d00e20090
012b00ba01cd00e600e500e400ab00c300d600c4011200d300e7011301cd
0138006200650094011300d700110057007f009e0058009f0080006b00e5
00ab005900800018002e006800b30068005800b9008f0053001000250050
006300d5023d00e3013c00e4000001bc0090002d00ab007e008000d7007d
005500bd00b400bf00bb0015006c0091002d008000ab00cf0092005b003b
00380065009500ed0195023c019400bb00110011007f0058002e00680053
00900090009000900090009000ab008000800080008000ba00ba00ba00ba
006c00910091009100910091005b005b005b005b00fc015100e4007c008f
016f00ab005900000000000401bb013f006500120050006d009000620094
0062005a00b0002b003600a700e101280126003d0010007000e601eb0018
008900b100bb00530063007f0065001100110068001100120091fff100b3
00db01fd01250090009b0095006300670007006b0254000e001300fb01cd
012b00e0003d0011005800110058005800e500e500e500e5006800680068
00530053005300ba013c0128013c013a020001b101ba013b01d4013c0056
00bb00b900cf00d500ed023cfffd00810063009500b3002d0090010e0176
01550163000000000000009f0080007d00e500b900cf007f00ab007f00ab
007effe502c40011009000110090009e007efffd00580080005800800080
00bb008000bb008000bb002e006c002e006c00680091005800ab005800ab
00b900cf008f0092008f00920053005b0053005b00d500ed00d500ed007f
0067005a006200b5011b009800d0007bffe50112011b000e0002017d0002
017d0002017d017d000200a9006500990090021d01000000021d021d0000
021d0000021d00000000000000000000017d021d017d017d000000000000
021d017d017d000000000000021d017d017d000000000000000000000000
000000000000000000000000000000000000000002670000000000000002
0002000f0002000f000200ae007c0026000300030002014100b800800002
006c009f010f005a0009001300000201012500bb014100020169016900ae
016f00110090007f00ab007f00ab0058008000580080005800800080007d
0080007d0080007d006b0055006b003e00e500bb00e500bb00e500bb00e5
00bd00ab00b4005900bf0092008000bb002e006c0080006c006800910068
0091005800ab00b900cf008f007a0053005b0053005b0053005b0053005b
002500380063009500d700110090001200100050007001cd002500380025
0038002500380063009501fd013c0088005a000c0011000b001b020801d4
01bb01080040fffc00130041fff6002affd400f2001100570065005800d5
006b00e50059000f0018002e00930068006400b300c4008f00630050001d
003c00e500630062011b008b01bb0057010400460156008b00b3020f009e
00410054004a0145009100ca00cf00570099004500750128005700910057
007500580011007f007f00b900e500e500ab0023000000110077002c0064
001100570057007f004a0058fffb007200280028007700230018006b0068
006400b3007f008f002c0063005000590029000400040002000200570081
0016000f00900080007b0098005a008000140090003a003a00780033001f
006b0091006b002d00ab00a6003c00770065004d004600210021004b0018
00a60082002400830080008e009800ab00cf00bd00ba00b40033ffee003e
0078003c006b007f0098002b003100680258025802580258025802580258
02580258021602580216022d00b50189023c038200aa01cc00d0009e0115
00a300a001770149009200680173009500b400c0006d00850176011c004f
00c000f200fa00de00a200c500ac00cc00a0007a0085008501bf00f7005b
017700950095ffedffed00c000cc00b900cc00b900d000d000d0009e0115
00a300a00167013a00680173009500b400c00085011c004f00f200fa00a2
00c500ac00cc00a00177009e00b400fa00ac0243018c0160012401c701c7
00fb0201000001dc019701dc01dc01a301dc01ca01db01d90164013f00f4
017f01540137010801070127009601f100e6024a01d101f3010d01270111
01450000000000000000000001ca02030201020301a201a401ab016d0152
0000019c016201600025002500000000000b0006000000000110009e0000
0000009000650003000300000000000a000a0000000000aa007000f00097
00f000f0009e009e00bf00bf00bf013f0090009000f0009700f000970183
01d501c701a801ca0000001d002b002b0000001d002b002b002b002b0000
001d00000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000019c019c010a010a000000140201010a00cb0197
019700c400c001bc01f800aa007000000000020001f80025002500000000
01c80184002500250000000000250025000000000110009e000000000110
009e000000000110009e00000000019e0151019e01510090006500900065
000600060000000000060006000000000000000000000000000000000000
0000000c000a00000000000c000a00000000011a011c00000000011a011c
00000000000b00060000000000a600d60000000000b40038000000000108
00710000000001b201b20000000000fe008e0000000001f3018400000000
00c400c000aa007000aa00760000000000670099008200a1009c00d7009c
00d7021901d101dc01dc0061004c019c01db01ca010d024a01a30197005d
0020000501c701ca01ca01d501a8018301db01b201b2009c009c01ea01f5
01f50075006b01b501f401e30126026301bc01b0007f0041002601e001e3
01e301ee01c1019c01c7019e019e00d700d700c300ce00cd016a0174008e
00cd00bc0000013c00950089017f011100ee00b900bc00bc00c7009a0075
0186015d015d01be01be01bc019a01df00000025002500000000000b0006
0000000000f00097009e0000001d002b0000000001470147015800f300da
01f801f800ce0000006800910053005b01c10199019801c401cb01c001bb
01c501ab01b9012b01240118015e0144037d00c800000000019f01bd01a5
01c301b701b7012b012b012b01280128012801ff01ff01ff01ff01ff01c4
01a8012801ff01ff01ff01ff01ff01ff01ff01ff01ff01ff0142012b0142
012b00110090001100900011009000110090001100900011009000110090
001100900011009000110090001100900011009000580080005800800058
0080005800800058008000580080005800800058008000e500ba00e500bd
006800910068009100680091006800910068009100680091006800910068
0091006800910068009100680091006800910053005b0053005b0053005b
0053005b0053005b0053005b0053005b0063009500630095006300950011
009000e500ba006800910053005b0053005b0053005b0053005b0053005b
012f011400f50114007f0098fffb00140077007800770078006b006b0062
0095006200950050006500290046006b0055004200800068009101f4018c
015b014801bf01bf0148014801480177020001f800c400c000c400c000aa
007000250025000000000025002500000000002500250000000000250025
000000000025002500000000002500250000000000250025000000000110
009e000000000110009e000000000110009e000000000110009e00000000
0110009e000000000110009e00000000019e0151019e0151019e0151019e
0151019e0151019e0151019e015101970151019b01510090006500900065
009000650090006500900065009000650090006500900065000600060000
000000060006000000000006000600000000000000000000000000000000
00000000000c000a00000000011a011c00000000000b000600000000000b
000600000000000b000600000000000b000600000000000b000600000000
00a600d600a600d600a600d60005000500000000000300030000000000b4
00380000000000b400380000000000b4003800000000000a000a00000000
000a000a00000000000a000a00000000000a000a00000000000a000a0000
000001080071000000000108007100000000010800710000000001080071
0000000000fe008e0000000000fe008e0000000000fe008e0000000000fe
008e0000000000fe008e000000000110009e0000000001f3018401b101f3
0000000001b101f301b101c800c400c000c400c000c400c000c400c000c4
00c000c400c000c400c000c400c0000f001d00aa00700000000000c400c0
00aa00760000000000aa0076005a005a005a005a01d101f300e70158016d
01c001a001f801730014000a01ee021401ea01c0017301cc0174017401ad
003101be01be01ee01c000060006000000000000000000000000011a011c
00000000020101b20003000300030018009c00b7009c00d7009c00d7009c
00d7009c00d7009c00d70173012b016900850212021b0076008e00f9010d
005700570097007f007f0015002e001200250051008f0004008f00b3002d
00160057002d0057002d007f007f00abfffd00160057008000b500580072
00000080003b001500e500e3005900bf00bb004100150000006c0068003c
00910016002d00b300b900cf00c401560092005d0092008f003c0053003d
000000d500ed00a100a100a100db00ab00c400900092002d023c01e70065
01eb00080008000a00120008001100070007000a008000110090012f0011
0090001200100080007d0080007d005900bf006800910068009100a1008c
00b400080008000a0080007d000a002d002e006c00110090001100900058
00800058008000e500ba00e500ba0068009100680091005800ab005800ab
0053005b0053005b00b900cf008f009200ab00ab006b0055006b008600e7
00d500ed0011009000580080006800910128006800910068009100680091
006300950068007e002a002d00ab006a007e007e0080004e009000900068
00870087007d007d00ab00a4009100550067006700bd020f00e500bb00bb
011200110015001500150000006c003a0091004e00750091007300730073
00ab00db00dc00ab008e008e00cf00b100b100b100d100920092005b00b8
0057003b00380041009200ed00a7008c00ad00aa00b400aa00ab0068007b
008700ab006b00b9006e0098008000aa00b4000a000a000a000a0062000a
000a000a000a00a900ed01120112016d012d012a012a012d00e8010d0201
010701fd012501fd020e020e013b014000620094007a007a023601bb01bc
0236013c01bc01bc01ff01ff020e020e019801980198013c01a0010e0133
014d015901350140013c013c00db013c013cffe5013a0200013f01b1013b
013c023601d5013b013a013a01fd01250125031901bc01bc01980198013c
01e7020e019801980198013c00b100b1013f01b1020801ba01d40236013c
0121013c013c013a013a0128013c0000013c0128013c000000a700e6020e
013c01aa011e01c30200ffe501bc01bb0128012501080236013c006501d5
0198012801280128016a01b7000000000000002701280130015001260117
01390103011200d1012d013b00f5013501bb01bc023600b30047006d0000
006d0091003200bc00680091008c00cf009f009f0040008b008c00f00015
001500ab00ab006b007500b900b9008800c3008000ab008100e700bc0080
00ab00b4006800ab00f9005800280080003a00140096002100390000000c
0011001300000005002900500000000500790097001d004500680091001a
003b001a003b001e001f0040005f0014001400a700140096007f00b400b4
0159013c020d020d000100010028003a0057006600b3002d002500340072
0090007700780017002400110011000a000700570051007f00ab008f00a6
000c000c002900460005000f0005000f00e5fffb00140077007800230033
006b006b006b006b002900460018001f013a001100900011009000120010
0058008000420080fffb00140072009000c3008c0028003a0028003a0068
00910068009100810082002c0095002c0095002c00950029004600020018
0074007e0010001e0007000a0051005a000a0008000a0014008000ab008f
00a601a401a801dc021601b2019601d6012efff103ca01960196033a0145
00c501a001b701ba01dc0196014501d3019601a001a401dc01ba033afff1
01c20216012f012f0128012801dd017b012f001100900057002d0057002d
0057002d007f00ab009e007e009e007e009e007e009e007e009e007e0058
008000580080005800800058008000580080009f00d70080007d006b0055
006b0055006b0055006b0055006b005500e500bd00e500ba005900bf0059
00bf005900bf008000bb008000bb008000bb008000bb0018001500180015
00180015002e006c002e006c002e006c002e006c00680091006800910068
00910068009100b3002d00b3002d005800ab005800ab005800ab005800ab
00b900cf00b900cf00b900cf00b900cf00b900cf008f0092008f0092008f
0092008f00920053005b0053005b0053005b0053005b0053005b0010003b
0010003b002500380025003800500065005000650063009500d500ed00d5
00ed00d500ed0055009200380095009000d7006200620062006200620062
00620062000000000000000000000000ff1bff1b011b011b011b011b011b
011b000000000000000000000000008b008b008b008b008b008b008b008b
000000000000000000000000ff1bff1b020d01e501a0019601a00196010a
010000000000000000000000000000010001009100910091009100910091
00000000ff9cff9cffc4ffc4005700570057005700570057005700570000
ff74ff74ff1b007500750075007500750075007500750000ffecff56ff56
ff7eff7eff1bff0700620062011b011b008b008b018001ab009100910057
005700750075006200620062006200620062006200620000000000000000
00000000ff1bff1b008b008b008b008b008b008b008b008b000000000000
000000000000ff1bff1b007500750075007500750075007500750000ffec
ff56ff56ff7eff7eff1bff07006200620062006200620062006200110011
000200020011020d0236020d01280128008b008b008b008b008b00020002
00020002006b01be01be012801120114011b011b0100010000e500e50002
000201be01be0128005700570057005700ca00ca00570057006300630002
00020000010801080228007500750075007500750002000200020002003c
0228020d0099006b000000000000000000bd00b400260112003a00e60021
002101a201a201e401e401b101bc013b013b012801cd01e901e901e901e9
013c013c014901e4020e013a01bd01e401e40118020e00000000000000b3
002d003b002b002500cf00ab00cf00cf00cf009000b70101009e00cf001f
003a00910082009100ab0065002301240091009100a60083008300a60056
0099001800aa003b003800ed009000b000910098003b006b00a6001d0033
00e100d601110111011601170117010801070166011400fb011700d400f1
00e70112014b014c01360123010b00dd01280128010300d200fe01030130
01350131013101030150012800d1013b0126013c0126012600fe013b0117
014c00d700f50136015900fd01480120012a0150012d011700f5015900fd
01310120012a000000000000000000000190011a018601920179013b015d
024a01be021a015b019e0151009000650000000000000000003a000d000a
001e002a001d0016001e0090012d012d012d002b00b3003f000000000000
000000140000007f0018001f000b004700470011007f00ab0080008f00cf
00ed0078038b01a2011b01a000000023007f007f007f007f009801a40216
02150177025800dc019a01e201bf01bf01cd01be01da012a002500250000
000000250025000000000025002500000000002500250000000000250025
00000000002500250000000000250025000000000110009e000000000110
009e00000000019e0151019e0151009000650006000600000000011a011c
00000000011a011c00000000011a011c00000000000b000600000000000b
000600000000000300030000000000030003000000000003000300000000
01b201b20000000001b201b20000000000fe008e0000000000fe008e0000
000000fe008e000000000108007100000000009000650090006500060006
000000000000004500be0000003c0000009b005f0059005700ed004e0119
00b5000000e300e4002d00560036002d007e00d7000f00bf00bb0015006c
002d00ab00cf00b1003b006500ed005a002a007e003f00380090000700bd
00ab00b10000008c01030139010f01240131016401640103011e01500230
0175017501620173013c00df00c400d100d5011e0114012601140154014e
013b011701480113011100f5017101710171013401430126012601ec013c
01cd01280130012601350135008000100058007f00ba0062006200620062
00620062006200620114011401140114010c010c010c010c005700570057
0057005700570057005701050105010c010c0057005700570057009c00d7
00bd00b0002a0053000f0058008000ab00b400540080000f00ab00630095
00ab00ab00ab00bb007f0098005000650050006500720090002300330157
01570157015700c100c1019e01e40118000000cf00ab007400bb00700088
005800900092006b0055005900bf00d500ed0078006b006b007b01c601e0
012c013c013c013c0080002e0080017f0176015501630178016801800178
0178018001250068008000250038007500e20068003b0005001a01cd012d
01e101e1017d017d01eb01eb01eb013c001401c701b601b80178016601ad
01ba01ba009000e40079007900090030000f021401f801cc01f501e901d2
01d501d101d101da01e601db01d601d901db01b5021201ff01fa0110009e
000000000110009e000000000006000600000000009000650110009e0000
000001140102010100ef00aa00700000000000aa00700000000000aa0070
0000000000c400c000c400c0002f005a002f005a0110009e000000000006
000600000000000600060000000000b400380000000000470016003e0017
0150004d002c002a00450155018401f701c401f700aa0076000000000003
000300000000000300030000000000aa00700000000000aa007000000000
00aa007000000000019800b1005f008f00a00052003a00590113000000b7
0064000b0009001d000e000b000e0059009e000f00070008000b0064006b
006b005500d700d700b50031007500e200e20032000400180011001f0012
00730091012a016d00f500b900d500000000000001bb01a001dc00000197
016701dc01dc000001a3000001dc000001ca000001db000001f901910191
0191018c01e801f401e90170017000a800fc00fc0059002f0019001b0019
001b0019001b0019001b0097002b00000097002b00000025002500000000
0110009e00000000000c000c000c0000000b00060000000000a600d60000
0000010800710000000001b201b20000000000aa00760000000000aa0076
000000000081005900c400c00103010301c601d501cb01a301c201ac0222
01c701ad022201c701ad01900150019001cc019c01de01de020102010201
02010199015901c301a4009c00d701c701c7000000000000000000000000
00000000000001c70108019701f00215011500a300a000a0021601980053
0076005d0019008200af008200520027004400a90092003b0049005400c8
009f0019005b001500b70017009c005300aa001100a400370053001900b7
0071009300ec005a00090068009901c1019701a1013e01bc00e4006d0014
00940043006e004f0057009c007100400059006c011dfffd0088005d0055
00dd008c0096005a00f7ffe100fa006c0142003200f2008b005b00780014
006c007d00bd0014003500910085000001cd00bc00080008003700100010
00100016001000b3001400000037ffca002500250000000000b3019e0151
000000000000000000030003000000000170022a0090006501d000abffba
ffff000000000025004300230033000e000e000e000e000f0057001200a9
00c2000000000037003700370037009100e500e500e500e500e500e5013c
01930193019301c301c301c301c301c30248032103f804950544066006c4
07d007d007d007d007d007d007d007d007d007d007d007d007d007d007d0
07d007d007d007d007d007d0093b093b093b093b093b093b093b093b093b
093b093b093b093b093b093b093b093b093b093b093b0a390a390a390ae7
0ae70b950b950b950c020c020c020c580c580c580c580d360d360dff0f57
0f570f570f570f570f570f570f570fed0fed10a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a210a210a210a210a210a210a210a210a210a2
10a210a210a210a210a210a211ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad11ad
11ad11ad11ad11ad0000000100000e7a008000100000000000020010002f
0056000003ea0ac3000000000000003a02be0000000300000000021a0000
00000003000000010016021a0000000300000002000e0288000000030000
00030040029600000003000000040016021a0000000300000005001802d6
0000000300000006001c02ee0000000300000007006e021a000000030000
0008003003180000000300000009001c0528000000030000000d0d180544
0001000000000000010d125c0001000000000001000b1369000100000000
0002000713a00001000000000003002013a70001000000000004000b1369
0001000000000005000c13c70001000000000006000e13d3000100000000
0007003713690001000000000008001812630001000000000009000e13e1
000100000000000d068c13ef0003000104030002000c1a7b000300010405
000200101a8b0003000104060002000c1a9b000300010407000200101aa7
000300010408000200101ab70003000104090000021e030a000300010409
00010016021a0003000104090002000e0288000300010409000300400296
00030001040900040016021a0003000104090005001802d6000300010409
0006001c02ee0003000104090007006e021a000300010409000800300318
0003000104090009001c0528000300010409000d0d2a1ac700030001040a
0002000c1a7b00030001040b0002001027f100030001040c0002000c1a7b
00030001040e0002000c28010003000104100002000e2811000300010413
00020012281f0003000104140002000c1a7b000300010415000200101a7b
0003000104160002000c1a7b0003000104190002000e283100030001041b
00020010280100030001041d0002000c1a7b00030001041f0002000c1a7b
0003000104240002000e283f00030001042a0002000e284d00030001042d
0002000e285b00030001080a0002000c1a7b0003000108160002000c1a7b
000300010c0a0002000c1a7b000300010c0c0002000c1a7b00a900200032
00300031003500200054006800650020004d006f006e006f007400790070
006500200043006f00720070006f0072006100740069006f006e002e0020
0041006c006c002000520069006700680074007300200052006500730065
0072007600650064002e0020000d000d0048006500620072006500770020
004f00700065006e00540079007000650020004c00610079006f00750074
0020006c006f00670069006300200063006f007000790072006900670068
0074002000a9002000320030003000330020002600200032003000300037
002c002000520061006c00700068002000480061006e0063006f0063006b
002000260020004a006f0068006e00200048007500640073006f006e002e
002000540068006900730020006c00610079006f007500740020006c006f
00670069006300200066006f00720020004200690062006c006900630061
006c00200048006500620072006500770020006900730020006f00700065
006e00200073006f007500720063006500200073006f0066007400770061
0072006500200075006e00640065007200200074006800650020004d0049
00540020004c006900630065006e00730065003b00200073006500650020
0065006d0062006500640064006500640020006c006900630065006e0073
00650020006400650073006300720069007000740069006f006e00200066
006f0072002000640065007400610069006c0073002e0043006f00750072
0069006500720020004e0065007700200069007300200061002000740072
006100640065006d00610072006b0020006f006600200054006800650020
004d006f006e006f007400790070006500200043006f00720070006f0072
006100740069006f006e002e0052006500670075006c00610072004d006f
006e006f0074007900700065003a0043006f007500720069006500720020
004e0065007700200028004d006900630072006f0073006f006600740029
00560065007200730069006f006e00200036002e003900300043006f0075
0072006900650072004e0065007700500053004d005400a9002000320030
0031003500200054006800650020004d006f006e006f0074007900700065
00200043006f00720070006f0072006100740069006f006e002e00200041
006c006c0020005200690067006800740073002000520065007300650072
007600650064002e0020000d000a000d000a004800650062007200650077
0020004f00700065006e00540079007000650020004c00610079006f0075
00740020006c006f00670069006300200063006f00700079007200690067
00680074002000a900200032003000300033002000260020003200300030
0037002c002000520061006c00700068002000480061006e0063006f0063
006b002000260020004a006f0068006e00200048007500640073006f006e
002e002000540068006900730020006c00610079006f007500740020006c
006f00670069006300200066006f00720020004200690062006c00690063
0061006c00200048006500620072006500770020006900730020006f0070
0065006e00200073006f007500720063006500200073006f006600740077
00610072006500200075006e00640065007200200074006800650020004d
004900540020004c006900630065006e00730065003b0020007300650065
00200065006d0062006500640064006500640020006c006900630065006e
007300650020006400650073006300720069007000740069006f006e0020
0066006f0072002000640065007400610069006c0073002e0048006f0077
0061007200640020004b006500740074006c006500720059006f00750020
006d0061007900200075007300650020007400680069007300200066006f
006e00740020006100730020007000650072006d00690074007400650064
0020006200790020007400680065002000450055004c004100200066006f
00720020007400680065002000700072006f006400750063007400200069
006e0020007700680069006300680020007400680069007300200066006f
006e007400200069007300200069006e0063006c00750064006500640020
0074006f00200064006900730070006c0061007900200061006e00640020
007000720069006e007400200063006f006e00740065006e0074002e0020
00200059006f00750020006d006100790020006f006e006c007900200028
0069002900200065006d0062006500640020007400680069007300200066
006f006e007400200069006e00200063006f006e00740065006e00740020
006100730020007000650072006d00690074007400650064002000620079
002000740068006500200065006d00620065006400640069006e00670020
007200650073007400720069006300740069006f006e007300200069006e
0063006c007500640065006400200069006e002000740068006900730020
0066006f006e0074003b00200061006e0064002000280069006900290020
00740065006d0070006f0072006100720069006c007900200064006f0077
006e006c006f006100640020007400680069007300200066006f006e0074
00200074006f002000610020007000720069006e0074006500720020006f
00720020006f00740068006500720020006f007500740070007500740020
00640065007600690063006500200074006f002000680065006c00700020
007000720069006e007400200063006f006e00740065006e0074002e000d
000d00540068006500200066006f006c006c006f00770069006e00670020
006c006900630065006e00730065002c0020006200610073006500640020
006f006e00200074006800650020004d004900540020006c006900630065
006e00730065002000280068007400740070003a002f002f0065006e002e
00770069006b006900700065006400690061002e006f00720067002f0077
0069006b0069002f004d00490054005f004c006900630065006e00730065
0029002c0020006100700070006c00690065007300200074006f00200074
006800650020004f00700065006e00540079007000650020004c00610079
006f007500740020006c006f00670069006300200066006f007200200042
00690062006c006900630061006c00200048006500620072006500770020
201c004c00610079006f007500740020004c006f006700690063201d0020
006100730020006a006f0069006e0074006c007900200064006500760065
006c006f007000650064002000620079002000520061006c007000680020
00480061006e0063006f0063006b00200061006e00640020004a006f0068
006e00200048007500640073006f006e002e0020000d000d005000650072
006d0069007300730069006f006e00200069007300200068006500720065
006200790020006700720061006e007400650064002c0020006600720065
00650020006f00660020006300680061007200670065002c00200074006f
00200061006e007900200070006500720073006f006e0020006f00620074
00610069006e0069006e00670020006100200063006f007000790020006f
006600200074006800650020004f00700065006e00540079007000650020
004c00610079006f007500740020006c006f00670069006300200066006f
00720020004200690062006c006900630061006c00200048006500620072
0065007700200061006e00640020006100730073006f0063006900610074
0065006400200064006f00630075006d0065006e0074006100740069006f
006e002000660069006c00650073002000280074006800650020201c004c
00610079006f007500740020004c006f00670069006300200053006f0066
00740077006100720065201d0029002c00200074006f0020006400650061
006c00200069006e00200074006800650020004c00610079006f00750074
0020004c006f00670069006300200053006f006600740077006100720065
00200077006900740068006f007500740020007200650073007400720069
006300740069006f006e002c00200069006e0063006c007500640069006e
006700200077006900740068006f007500740020006c0069006d00690074
006100740069006f006e0020007400680065002000720069006700680074
007300200074006f0020007500730065002c00200063006f00700079002c
0020006d006f0064006900660079002c0020006d0065007200670065002c
0020007000750062006c006900730068002c002000640069007300740072
00690062007500740065002c0020007300750062006c006900630065006e
00730065002c00200061006e0064002f006f0072002000730065006c006c
00200063006f00700069006500730020006f006600200074006800650020
004c00610079006f007500740020004c006f00670069006300200053006f
006600740077006100720065002c00200061006e006400200074006f0020
007000650072006d0069007400200070006500720073006f006e00730020
0074006f002000770068006f006d00200074006800650020004c00610079
006f007500740020004c006f00670069006300200053006f006600740077
0061007200650020006900730020006600750072006e0069007300680065
006400200074006f00200064006f00200073006f002c0020007300750062
006a00650063007400200074006f002000740068006500200066006f006c
006c006f00770069006e006700200063006f006e0064006900740069006f
006e0073003a000d000d005400680065002000610062006f007600650020
0063006f00700079007200690067006800740020006e006f007400690063
006500200061006e0064002000740068006900730020007000650072006d
0069007300730069006f006e0020006e006f007400690063006500200073
00680061006c006c00200062006500200069006e0063006c007500640065
006400200069006e00200061006c006c00200063006f0070006900650073
0020006f00720020007300750062007300740061006e007400690061006c
00200070006f007200740069006f006e00730020006f0066002000740068
00650020004c00610079006f007500740020004c006f0067006900630020
0053006f006600740077006100720065002e000d000d0054004800450020
0053004f004600540057004100520045002000490053002000500052004f
0056004900440045004400200027004100530020004900530027002c0020
0057004900540048004f00550054002000570041005200520041004e0054
00590020004f004600200041004e00590020004b0049004e0044002c0020
00450058005000520045005300530020004f005200200049004d0050004c
004900450044002c00200049004e0043004c005500440049004e00470020
0042005500540020004e004f00540020004c0049004d0049005400450044
00200054004f0020005400480045002000570041005200520041004e0054
0049004500530020004f00460020004d00450052004300480041004e0054
004100420049004c004900540059002c0020004600490054004e00450053
005300200046004f00520020004100200050004100520054004900430055
004c0041005200200050005500520050004f0053004500200041004e0044
0020004e004f004e0049004e004600520049004e00470045004d0045004e
0054002e00200049004e0020004e004f0020004500560045004e00540020
005300480041004c004c002000540048004500200041005500540048004f
005200530020004f005200200043004f0050005900520049004700480054
00200048004f004c00440045005200530020004200450020004c00490041
0042004c004500200046004f005200200041004e005900200043004c0041
0049004d002c002000440041004d00410047004500530020004f00520020
004f00540048004500520020004c0049004100420049004c004900540059
002c0020005700480045005400480045005200200049004e00200041004e
00200041004300540049004f004e0020004f004600200043004f004e0054
0052004100430054002c00200054004f005200540020004f00520020004f
00540048004500520057004900530045002c002000410052004900530049
004e0047002000460052004f004d002c0020004f005500540020004f0046
0020004f005200200049004e00200043004f004e004e0045004300540049
004f004e00200057004900540048002000540048004500200053004f0046
005400570041005200450020004f00520020005400480045002000550053
00450020004f00520020004f00540048004500520020004400450041004c
0049004e0047005300200049004e002000540048004500200053004f0046
00540057004100520045002e000da9203230313520546865204d6f6e6f74
79706520436f72706f726174696f6e2e20416c6c20526967687473205265
7365727665642e200d0d486562726577204f70656e54797065204c61796f
7574206c6f67696320636f7079726967687420a920323030332026203230
30372c2052616c70682048616e636f636b2026204a6f686e20487564736f
6e2e2054686973206c61796f7574206c6f67696320666f72204269626c69
63616c20486562726577206973206f70656e20736f7572636520736f6674
7761726520756e64657220746865204d4954204c6963656e73653b207365
6520656d626564646564206c6963656e7365206465736372697074696f6e
20666f722064657461696c732e436f7572696572204e6577206973206120
74726164656d61726b206f6620546865204d6f6e6f7479706520436f7270
6f726174696f6e2e526567756c61724d6f6e6f747970653a436f75726965
72204e657720284d6963726f736f66742956657273696f6e20362e393043
6f75726965724e657750534d54486f77617264204b6574746c6572596f75
206d617920757365207468697320666f6e74206173207065726d69747465
64206279207468652045554c4120666f72207468652070726f6475637420
696e207768696368207468697320666f6e7420697320696e636c75646564
20746f20646973706c617920616e64207072696e7420636f6e74656e742e
2020596f75206d6179206f6e6c792028692920656d626564207468697320
666f6e7420696e20636f6e74656e74206173207065726d69747465642062
792074686520656d62656464696e67207265737472696374696f6e732069
6e636c7564656420696e207468697320666f6e743b20616e642028696929
2074656d706f726172696c7920646f776e6c6f6164207468697320666f6e
7420746f2061207072696e746572206f72206f74686572206f7574707574
2064657669636520746f2068656c70207072696e7420636f6e74656e742e
0d0d54686520666f6c6c6f77696e67206c6963656e73652c206261736564
206f6e20746865204d4954206c6963656e73652028687474703a2f2f656e
2e77696b6970656469612e6f72672f77696b692f4d49545f4c6963656e73
65292c206170706c69657320746f20746865204f70656e54797065204c61
796f7574206c6f67696320666f72204269626c6963616c20486562726577
20d24c61796f7574204c6f676963d3206173206a6f696e746c7920646576
656c6f7065642062792052616c70682048616e636f636b20616e64204a6f
686e20487564736f6e2e200d0d5065726d697373696f6e20697320686572
656279206772616e7465642c2066726565206f66206368617267652c2074
6f20616e7920706572736f6e206f627461696e696e67206120636f707920
6f6620746865204f70656e54797065204c61796f7574206c6f6769632066
6f72204269626c6963616c2048656272657720616e64206173736f636961
74656420646f63756d656e746174696f6e2066696c6573202874686520d2
4c61796f7574204c6f67696320536f667477617265d3292c20746f206465
616c20696e20746865204c61796f7574204c6f67696320536f6674776172
6520776974686f7574207265737472696374696f6e2c20696e636c756469
6e6720776974686f7574206c696d69746174696f6e207468652072696768
747320746f207573652c20636f70792c206d6f646966792c206d65726765
2c207075626c6973682c20646973747269627574652c207375626c696365
6e73652c20616e642f6f722073656c6c20636f70696573206f6620746865
204c61796f7574204c6f67696320536f6674776172652c20616e6420746f
207065726d697420706572736f6e7320746f2077686f6d20746865204c61
796f7574204c6f67696320536f667477617265206973206675726e697368
656420746f20646f20736f2c207375626a65637420746f2074686520666f
6c6c6f77696e6720636f6e646974696f6e733a0d0d5468652061626f7665
20636f70797269676874206e6f7469636520616e64207468697320706572
6d697373696f6e206e6f74696365207368616c6c20626520696e636c7564
656420696e20616c6c20636f70696573206f72207375627374616e746961
6c20706f7274696f6e73206f6620746865204c61796f7574204c6f676963
20536f6674776172652e0d0d54484520534f465457415245204953205052
4f564944454420274153204953272c20574954484f55542057415252414e
5459204f4620414e59204b494e442c2045585052455353204f5220494d50
4c4945442c20494e434c5544494e4720425554204e4f54204c494d495445
4420544f205448452057415252414e54494553204f46204d45524348414e
544142494c4954592c204649544e45535320464f52204120504152544943
554c415220505552504f534520414e44204e4f4e494e4652494e47454d45
4e542e20494e204e4f204556454e54205348414c4c205448452041555448
4f5253204f5220434f5059524947485420484f4c44455253204245204c49
41424c4520464f5220414e5920434c41494d2c2044414d41474553204f52
204f54484552204c494142494c4954592c205748455448455220494e2041
4e20414354494f4e204f4620434f4e54524143542c20544f5254204f5220
4f54484552574953452c2041524953494e472046524f4d2c204f5554204f
46204f5220494e20434f4e4e454354494f4e20574954482054484520534f
465457415245204f522054484520555345204f52204f5448455220444541
4c494e475320494e2054484520534f4654574152452e0d004e006f007200
6d0061006c006e0079006f00620079010d0065006a006e00e9006e006f00
72006d0061006c005300740061006e0064006100720064039a03b103bd03
bf03bd03b903ba03ac0059006f00750020006d0061007900200075007300
650020007400680069007300200066006f006e0074002000610073002000
7000650072006d0069007400740065006400200062007900200074006800
65002000450055004c004100200066006f00720020007400680065002000
700072006f006400750063007400200069006e0020007700680069006300
680020007400680069007300200066006f006e0074002000690073002000
69006e0063006c007500640065006400200074006f002000640069007300
70006c0061007900200061006e00640020007000720069006e0074002000
63006f006e00740065006e0074002e002000200059006f00750020006d00
6100790020006f006e006c0079002000280069002900200065006d006200
6500640020007400680069007300200066006f006e007400200069006e00
200063006f006e00740065006e0074002000610073002000700065007200
6d0069007400740065006400200062007900200074006800650020006500
6d00620065006400640069006e0067002000720065007300740072006900
6300740069006f006e007300200069006e0063006c007500640065006400
200069006e0020007400680069007300200066006f006e0074003b002000
61006e006400200028006900690029002000740065006d0070006f007200
6100720069006c007900200064006f0077006e006c006f00610064002000
7400680069007300200066006f006e007400200074006f00200061002000
7000720069006e0074006500720020006f00720020006f00740068006500
720020006f00750074007000750074002000640065007600690063006500
200074006f002000680065006c00700020007000720069006e0074002000
63006f006e00740065006e0074002e000d000a000d000a00540068006500
200066006f006c006c006f00770069006e00670020006c00690063006500
6e00730065002c0020006200610073006500640020006f006e0020007400
6800650020004d004900540020006c006900630065006e00730065002000
280068007400740070003a002f002f0065006e002e00770069006b006900
700065006400690061002e006f00720067002f00770069006b0069002f00
4d00490054005f004c006900630065006e007300650029002c0020006100
700070006c00690065007300200074006f00200074006800650020004f00
700065006e00540079007000650020004c00610079006f00750074002000
6c006f00670069006300200066006f00720020004200690062006c006900
630061006c00200048006500620072006500770020201c004c0061007900
6f007500740020004c006f006700690063201d0020006100730020006a00
6f0069006e0074006c007900200064006500760065006c006f0070006500
64002000620079002000520061006c00700068002000480061006e006300
6f0063006b00200061006e00640020004a006f0068006e00200048007500
640073006f006e002e0020000d000a000d000a005000650072006d006900
7300730069006f006e002000690073002000680065007200650062007900
20006700720061006e007400650064002c00200066007200650065002000
6f00660020006300680061007200670065002c00200074006f0020006100
6e007900200070006500720073006f006e0020006f006200740061006900
6e0069006e00670020006100200063006f007000790020006f0066002000
74006800650020004f00700065006e00540079007000650020004c006100
79006f007500740020006c006f00670069006300200066006f0072002000
4200690062006c006900630061006c002000480065006200720065007700
200061006e00640020006100730073006f00630069006100740065006400
200064006f00630075006d0065006e0074006100740069006f006e002000
660069006c00650073002000280074006800650020201c004c0061007900
6f007500740020004c006f00670069006300200053006f00660074007700
6100720065201d0029002c00200074006f0020006400650061006c002000
69006e00200074006800650020004c00610079006f007500740020004c00
6f00670069006300200053006f0066007400770061007200650020007700
6900740068006f0075007400200072006500730074007200690063007400
69006f006e002c00200069006e0063006c007500640069006e0067002000
77006900740068006f007500740020006c0069006d006900740061007400
69006f006e00200074006800650020007200690067006800740073002000
74006f0020007500730065002c00200063006f00700079002c0020006d00
6f0064006900660079002c0020006d0065007200670065002c0020007000
750062006c006900730068002c0020006400690073007400720069006200
7500740065002c0020007300750062006c006900630065006e0073006500
2c00200061006e0064002f006f0072002000730065006c006c0020006300
6f00700069006500730020006f006600200074006800650020004c006100
79006f007500740020004c006f00670069006300200053006f0066007400
77006100720065002c00200061006e006400200074006f00200070006500
72006d0069007400200070006500720073006f006e007300200074006f00
2000770068006f006d00200074006800650020004c00610079006f007500
740020004c006f00670069006300200053006f0066007400770061007200
650020006900730020006600750072006e00690073006800650064002000
74006f00200064006f00200073006f002c0020007300750062006a006500
63007400200074006f002000740068006500200066006f006c006c006f00
770069006e006700200063006f006e0064006900740069006f006e007300
3a000d000a000d000a005400680065002000610062006f00760065002000
63006f00700079007200690067006800740020006e006f00740069006300
6500200061006e0064002000740068006900730020007000650072006d00
69007300730069006f006e0020006e006f00740069006300650020007300
680061006c006c00200062006500200069006e0063006c00750064006500
6400200069006e00200061006c006c00200063006f007000690065007300
20006f00720020007300750062007300740061006e007400690061006c00
200070006f007200740069006f006e00730020006f006600200074006800
650020004c00610079006f007500740020004c006f006700690063002000
53006f006600740077006100720065002e000d000a000d000a0054004800
4500200053004f0046005400570041005200450020004900530020005000
52004f005600490044004500440020002700410053002000490053002700
2c00200057004900540048004f0055005400200057004100520052004100
4e005400590020004f004600200041004e00590020004b0049004e004400
2c002000450058005000520045005300530020004f005200200049004d00
50004c004900450044002c00200049004e0043004c005500440049004e00
4700200042005500540020004e004f00540020004c0049004d0049005400
45004400200054004f002000540048004500200057004100520052004100
4e00540049004500530020004f00460020004d0045005200430048004100
4e0054004100420049004c004900540059002c0020004600490054004e00
450053005300200046004f00520020004100200050004100520054004900
430055004c0041005200200050005500520050004f005300450020004100
4e00440020004e004f004e0049004e004600520049004e00470045004d00
45004e0054002e00200049004e0020004e004f0020004500560045004e00
540020005300480041004c004c0020005400480045002000410055005400
48004f005200530020004f005200200043004f0050005900520049004700
48005400200048004f004c00440045005200530020004200450020004c00
4900410042004c004500200046004f005200200041004e00590020004300
4c00410049004d002c002000440041004d00410047004500530020004f00
520020004f00540048004500520020004c0049004100420049004c004900
540059002c0020005700480045005400480045005200200049004e002000
41004e00200041004300540049004f004e0020004f004600200043004f00
4e00540052004100430054002c00200054004f005200540020004f005200
20004f00540048004500520057004900530045002c002000410052004900
530049004e0047002000460052004f004d002c0020004f00550054002000
4f00460020004f005200200049004e00200043004f004e004e0045004300
540049004f004e0020005700490054004800200054004800450020005300
4f0046005400570041005200450020004f00520020005400480045002000
55005300450020004f00520020004f005400480045005200200044004500
41004c0049004e0047005300200049004e00200054004800450020005300
4f004600540057004100520045002e000d000a004e006f0072006d006100
61006c0069004e006f0072006d00e1006c006e0065004e006f0072006d00
61006c0065005300740061006e00640061006100720064041e0431044b04
47043d044b0439004e0061007600610064006e006f0074006801b001a103
00006e00670041007200720075006e007400610000>
<ba0054ffc003c0b2553340b803c0b23a3340b803c0b30e243280b803c0b3
0b0d3280b803c0b209333f412f03c0007003c000af03c000cf03c0000400
5f03c0007f03c000af03c00003001f03c0003f03c0005f03c0008f03c000
0400a003bb00b003bb00c003bb00d003bb000400a003ba00b003ba00c003
ba00d003ba0004003f03b8000103b703b6b2241f40b803b4b3192432ef41
1a03b300ff03b300020391038b0021001f035e038b0021001f035f038b00
21001f038f038b002a001f0390038b002a001f038d038bb23b1f0f410903
8b000100ef038b00ff038b0002ffc0039cb2474f32b9ffc0039cb2373c32
b9ffc0039bb2474f32b9ffc0039bb3373c321f4119039c00b0039c00c003
9c00d0039c000400ef039c0001001f039b00b0039b00c0039b00d0039b00
0400ef039b0001ffc0039cb2212932b9ffc0039bb2212932b9ffc0039cb2
0f1632b9ffc0039bb20f1632410a035903560032001f035803560032001f
03570356b2321fbf41600355000100af0355000100a003540001008f0354
0001005f03540001004f03540001007f03550001007f03540001006f0355
0001006f03540001003f03550001003f03540001003f03540001002f0354
0001002f03540001001f03540001000f03540001035203530029001f0351
034a0029001f035003450025001f034f034a0025001f034e03490025001f
034d03470025001f034c034a0018001f034b03450012001f034a03460018
001f034903450044001f034803460044001f03470346b2441f3041700346
005f03450002000f0344001f0344002f0344003f03440004000f0344008f
034400a0034400df03440004005f0344007f034400cf03440003002f0344
0001034403440343034303410341000f0340001f0340002f034000030340
0340033f033f033e033e000f033d0001033d033d0040033c0001001f033c
002f033c003f033c004f033c005f033c00c0033c00d0033c0007033c033c
00200335003003350040033500500335006003350005000f032c002f032c
008f032c0003032c032d0024001f0321028c0014001f0320028c0014001f
031f028b001e001f031e028bb21e1f40410902b4005002b4006002b40070
02b4008002b4b205120f4114028b001f028b002f028b004f028b005f028b
007f028b009f028b00af028b0008003f028b004f028b400b023f023f034f
024f030440b80329b33c3c3240b80329b333363240b80329b31c1d3240b8
0329b30c1a320f41720329007f0329009f03290003000f0329002f032900
3f03290003000f0329001f0329000200af032700bf032700cf032700df03
270004000f0327004f0327005f0327008f0327009f032700af0327000600
bf032700ef032700ff03270003006f0327007f0327008f0327009f032700
af03270005000f0327001f0327002f0327004f0327005f03270005000f03
28002f0328005f0328007f032800af0328000500df03280001000f032700
0f032800500328008f032800bf0328000500df03220001008f0322000100
3f0322004f03220002002f0322003f03220002000f0322001f0322b20209
0fb8028bb2013a0f413f028c004f028c0002000f028d002f028d003f028d
0003001f028b0001000f028b0001002f028b0001000f028c002f028c003f
028c004f028c008f028c00af028c000603b903b903290329032703270328
0328032203220321032103200320031f031f031e031e02900290028f028f
028e028e028d028d028c028c028b028b4014af2bbf2b025f356f357f358f
359f35af35bf3507bb0261026102600260400a0016160000001211081a41
100204005c000d01fa005c000d01ad005c000d0172005c000d0140005c00
0d0117401a5c0de45c0dc85c0d995c0d955c0d585c0d4e5c0d465c0d2f5c
0db8016240172b0ddb2b0d902b0d562b0d362b0d352b0d332b0d292b0d41
1101590157000d00be0157000d00420157000d00320157000d0022015700
0d001d0157b20d0009bc015b00210801001f0127b421811fe521b80401b2
1f8321b80801b21f8221b80401b21f5b21b80401b21f3b21b80801b61f30
21671f2c21b80401b21f2621b80401b21f2421bd0401001f005501ac0007
012b402c07c9075f07400739072e072d072807270723071f071408120810
080e080c080a080808060804080208000814b8ffe0402b00000100140610
000001000604000001000410000001001002000001000200000001000002
010802004a00b013034b024b5342014bb0c063004b6220b0f65323b8010a
515ab005234201b0124b004b544218b0372b4bb807ff52b0382b4bb00950
5b58b101018e59b0382bb00288b801005458b801ffb101018e851bb01243
58b90001012c858d1bb90001012c858d59594bb0095058b104018d8d5900
16763f183f123e113946443e113946443e113946443e113946443e113946
60443e11394660442b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b
2b2b18b0372b1db0964b5358b0aa1d59b0324b5358b0ff1d594bb8040153
205c58b9023802364544b90237023645445958b90a800238455258b90238
0a804459594bb8040153205c58b9002002384544b90021023845445958b9
0a800020455258b900200a804459594bb8040153205c58b9001e02374544
b90025023745445958b90a80001e455258b9001e0a804459594bb8040153
205c58b13d214544b1212145445958b90a80003d455258b9003d0a804459
594bb8040153205c58b167214544b1212145445958b90a800067455258b9
00670a804459594bb8030153205c58b121214544b1212145445958b907e0
0021455258b9002107e04459594bb8030153205c58b121214544b11e2145
445958b907e00021455258b9002107e04459594bb8030153205c58b12121
4544b1252145445958b907e00021455258b9002107e04459592b2b2b2b2b
2b2b2b2b2b2b65422b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b01b9004a01d6b1437a456523456023456560234560b08b76
6818b080622020b9004301d64565234520b003266062636820b003266165
b801d6236544b043234420b14a7a4565234520b003266062636820b00326
6165b07a236544b04a2344b1007a455458b17a406544b24a404a45236144
59b347612aad456523456023456560234560b089766818b080622020b12a
614565234520b003266062636820b003266165b061236544b02a234420b1
47ad4565234520b003266062636820b003266165b0ad236544b0472344b1
00ad455458b1ad406544b247404745236144594b5342014b5058b1080042
59435c58b108004259b3020b0a124358601b2159421610703eb0124358b9
3b21187e1bba040001a8000b2b59b00c2342b00d2342b0124358b92d412d
411bba04000400000b2b59b00e2342b00f2342b0124358b9187e3b211bba
01a80400000b2b59b0102342b01123420018456944456944737318456944
456944456944456944456944456944456944456944456944456944456944
4569444569444569444569447373737373745e735e737373737473737473
737374757373742b2b2b2b007300737400435c58410c001f028b001f028d
0002000f028b000f028c000f028d000373735974002b2b2b2b2b73750045
694473744569447345694445694445694473456944456944456944757473
7301732b2b2b2b2b2b2b2b2b2b2b2b007373737373737373737373737373
7373732b2b2b012b002b012b002b017375007375012b2b002b2b0073752b
2b2b2b2b2b0173012b012b73017300737374752b2b2b2b2b2b0000>
[9051 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

2 0 3 <> WGJAAA+CourierNewPSMT AddT42Char 
2 458 11 <0001025dfefc03af04e7001b00504027290c2a100205170e130a12160606
0510171613153e13054d090913a00e24000010000200191ccaba01050018
0119852b4e10f45d4dfdf43c10ed10e4003f3c3f3c111239390111123939
3130015d0134121237363332161514070602151412171615140623222726
0226025d3caa270c0e1219076e5e5e6e0719120e0c25a84001f273010201
52230b18110a0ccafeb8a4a5feb8c90c0a11190b22014afe>WGJAAA+CourierNewPSMT AddT42Char 
2 632 12 <0001012dfefc027f04e7001b005040290902091a1902191a0405170e1309
1206171610050613054d0a0a153e13a00e240f001f0002001a1da4ba014d
00180119852b4e10f65d4dfdf4e43c10ed003f3c3f3c1239390111123939
3130015d0114020207062322263534373612353402272635343633321716
1216027f3caa270c0e1219076e5e5e6e0719120e0c25a84001f173fefffe
ad220c19110a0cc90148a4a50148ca0c0a11180b22feb6fe>WGJAAA+CourierNewPSMT AddT42Char 
2 806 15 <0001012bfed402d1012e000900334018c200d200e000f0000400b60401f3
02c100d20f071f070207bc0198000a006d011d00182b10f65de4fde4002f
ed3130015d0121010623222635343701c00111fed71b26192303012efdd8
3223190a0c00>WGJAAA+CourierNewPSMT AddT42Char 
2 902 20 <000100e4000003e804f8001b00b1b212081bb8fff8400f11060008091b40
1b5012501b04090fba02a9000c019b4009100c0c0f10be090802ba02a900
05019b40120105050201be081918171615141307121b14ba02d700110267
b7000509080c190214bb02810011001702ce400a00671111016700100110
bd0270001c00a101ce0018012c852b10f65ded3c10fded10f4ed003f3c3f
eded01111217390010fd3d12392f180110f5f4c40010fd3d12392f180110
f5f4c43130005d3838383801112132161514062321222635343633211105
062322263534373637029001201e1a1a1efd6c1e1a1a1e0120feee14090f
190a081904f8fb5c17131218181213170430560619110f0d0809>WGJAAA+CourierNewPSMT AddT42Char 
2 1168 21 <000100ab000003d70505002b0130b10602435458b71b0b2b0504140000b8
015bb50a0c143d2205003fed3ffd1112173931301bb90016ffde402c1b24
34480f7a0e862786288629a628a629bb0cb42a090d120a16350c382a0429
232a1e2b14271e28230c140bb8ffec4019ea12ed16fa12fd16042808282a
121842552b2a121842550802ba02a9000501dcb70105050201be0805bd01
e40009000b010d0001015bb409090a0c1ab801f9b4143d220500bb015b00
0b0002015bb408e1113d25410d026f002d0017015b001e010d000b026d00
2c019101060018012c852b10f6f4ed10f6edf4ed10ed003feded3f3c10fd
e410ed0110fd3d12392f180010f5f4c4012b2b3130004379401c1f241218
1625202615211840001323114001171f14400112241440012b2b012b2b2b
2b8181005d38383838383838007101712b59372135343633321615152135
24373e023534262322060706070623222635343636333216151406060700
07fd028518131218fcd40100f271541fae7b6eaa1906090c10111769b961
9de2265b76fed8ba54211e1a1a1e757ce6ee6f684f286ca67e5d18070a17
1030a45eda8a3a617374fedca100>WGJAAA+CourierNewPSMT AddT42Char 
2 1602 22 <000100c3ffe20401050500380111b36c380100b8fff24033323235113a24
49244a2543387200067f218638950493359638a535a638b913ba17cb13cb
14cd17db13dd17ec13fa17ff2f1100b8fff2b514221b243411b8ffde401c
1b243429080f0b2b2811032f211e1a180005231c00191e2028262c19b801
5bb32020122cb8018db3263d330eb8018db5123d06233d36b8010d400a15
3d031c1c39031a3a2fba010d001c0281b70b19393305060decba01800018
012c852b003f3f014e10f44de4e44e10e612392f4d10edf4ed0010fde410
fde412392fed111239123911390111121739121739113931304379401c34
352425131404052534234001130515400124352640011404124000002b2b
012b2b81818181012b2b385d713800387101161615140623222627263534
363332171633323635342626232226353436331732363534262322060706
06232226353437363332161514060313747af5b86ce82e0f171010149bad
92c561b65d1e1a19194871939a7c57922c10110b111857799a9fcc6202ab
34b56297e75c30101210180f73b7704b905317131218018a5b5e903c3414
091710283d55bf845496>WGJAAA+CourierNewPSMT AddT42Char 
2 2032 23 <000200d6000003d704e7001d002100d1400d00030020021e21051d1f1c16
19b801e6b61d1dbe160f1512b8016040120e0ebe15202121670203140202
0302211f20b8015bb703030405211e0d1eb8015bb2000e00b802f2b21d1d
1cbb015b0016000f015bb2161503b80283400f01050e671d1d1f000f1e01
001e011eba026e0021015b400b0001010119220404150ca1ba01d2001801
24852b003f3f014e10f4714dfdf65d713c3c3c10fd3c10e400103ced10fd
3c10ee3c10ed3c103c3c103c10fd3c113905872e2b7d10c4180010ed0110
f5d43c0010ed0110f5d43c0f313071012135013311333216151406232311
333216151406232122263534363333111123010303fdd301d3af461f1a1a
1f46461f1a1a1ffec81f1a1a1f9d2cfe57015f610327fccc17131218fef5
1713121818121317015f02dffd21>WGJAAA+CourierNewPSMT AddT42Char 
2 2346 24 <000100c4ffe2040104e7002c00de40220b1b091c220929193a18052d294c
295f296e299829c919db18eb180819221b243416b8ffde40131b24341b20
230814102024161f1a011f1d2100bd015b00250001015b002101e440091d
3d04040a00262513b801e34009173d0a1a3d10070107ba02850029026cb5
250001672524b801ddb710192d25040a0decba018000180124852b003f3f
014e10f44df43cfd3c10edfd5ded0010fde4103c1112392fedfded10ed11
1239011112393912391139313043794018181c05091c051a400118091a40
011b061d40011908174000002b2b012b2b81810038012b2b5d7101113636
333216151406232227262726353436333217163332363534262322070623
2226351121321615140623017f4a883d9ed5f0b4776e4e40261810111397
b293c0a6808383200d1216024a1e1a1a1e0492fe651f1fdeb5c8f8352537
21161219128dc9a78ead45101816022d18131218>WGJAAA+CourierNewPSMT AddT42Char 
2 2696 25 <00020112ffe2041a05050023003001aa400c2e22142434221e2b1e211e26
bafff60000ffe2400e35043b0843044b0855045a080625b8ffdeb31b2434
20b8ffdeb31b243422b8ffdeb31b233424b8ffd4400a1b2434291e2b1e24
080db8ffe2407f0404040814041408260426082a133a134b135b136a1379
1388138524bb13b524da0bda12eb0d130b01050807200626190f24202521
6520632179217928732f7030b322bb2ad60ce20ae60c125a08230f211011
122013141f151e161d171910180d2200240d0c250b260a01302f022e2c04
280829072b2a0517060e0d243100b802a5b52d3d0303091bb801de40161f
3d1405273d090d18e1063d002a102a202a302a042abd02cd003200240124
000c02a6b7223d300e010e1931bb013801810018012c852b4e10f45d4ded
f4ed10fd5dfde4003fed3feded12392fede4011112391112173911121739
31304379401c252c20210413100f110f120f03060c0d0b0d02062c042a40
01201322b801ac401500260a244000252428082a40012b052d4001210f1f
b801ac400b01250d2740002907274000002b2b2b2b012b103c2b2b2b2a2a
81818101715d383838382b2b2b2b005d38383838382b0136363332161514
0623222627263534373e0233321716151406232227262322001514171616
33323635342623220706016c4ea56586d0bea76dbd36433f30a0d57c5438
1816110d12293dc3febf1926a36f709fa065615a3c0213736edfa496f986
8badd29e88699f65220f1912170a14feb1e721d1b69caf8c83ac5337>WGJAAA+CourierNewPSMT AddT42Char 
2 3264 26 <000100d3fffe03d604e700150080b10903ba02a900060160402a02060603
02be090c0d0d67150014151500150900010c170b150c0003100102670b0a
110f100a04100c0bba015b000102a8b417091916ecba01060018012c852b
4e10e44d10f4ed003f3f103c3c103cfd3c1117390111123912391139870e
2e2b0e7d10c4180110fd3d12392f180010f5f4c431300135211514062322
26353521150106062322263534370381fda6171312180303feae08160e12
1806046c264a1e1a1a1e9f86fbc81a1118100a12>WGJAAA+CourierNewPSMT AddT42Char 
2 3464 27 <000300e7ffe203e705050019002500310187404412a722ca00ee00ee0c04
1a041d152b2d572b6502050b0e04181b0e14188a1894019a089a0b93279f
2b9c2da901a327b502bf0aba0cba2bcd0aca2b137901a5210231142db8ff
ecb21c231eb8ffddb230232ebaffdd0015fff8b41108282824b8ffddb22a
2822baffec0025ffeab2272221b8ffec40122b284008233d2929061d3d13
052f3d060d23b801d9401029291610263d03e11a3d3f164f160216b801ed
400b33203d10e12c3d091932a1ba01060018012c852b4e10f44dedf4ed10
f45dedf4ed1112392fe6003fed3fed12392fed3130437940302d311b1f11
1504081e122040001c141a40012e072c400030052640011f111d40011b15
1d40012d082f400031042f40002b2b2b2b012b2b2b2b8181818100383838
3838383838013838383838383838005d015d710071435c58b9002bffe8b3
1e123f21b8ffe8b3170e3f21b8ffe84030160d3f0518170e3f0518160d3f
0118170e3f0118160d3f0518140c3f15181e123f1518170e3f1518160d3f
1518140c3f012b2b2b2b2b2b2b2b2b2b2b2b590116161514062322263534
363726272635343633321615140706373426232206151416333236133426
2322061514163332360313696be0a0a0e06b6a5c2a3ad59697d43a290da1
7574a19f76779f17ac8080acad7f7fad028b33a76095dada955fa7343539
51628acfcf8a62503ae96c9b9c6a629393fe076fa4a46e72a8a8>WGJAAA+CourierNewPSMT AddT42Char 
2 4726 68 <00020090ffdf045603800028003601624051aa07a41faa2e032607251f3b
047413771a761b8014851a9214951aab07a014a41aae2fb507bc0eb114b4
1ab91ecb0ef431150a0119012a01039a11941a027b2e8a2e9b2eaa0eab2e
c531d531e531082822b802ae401a252f21252522212228121d1317293621
0036290103330c092c36b801e0405a018828000a3321030b0921002c102c
702c032c293b0c0c28149c10211d073321030b0d00202021400d163f0f21
012f213f214f215f219f21af21bf21df2108211a38178f302106400d163f
6f069f06bf06df06040619372abb18b8012c852b4e10f45d012b4dfde64e
10f65d71012b3c4dfd3c003fed3feded12392fed2f5ded3fed3f3cf4ed11
12391217390111123939123911390010fd3d12392f180110f5f4c4313000
4bb019534bb024515a58bf0007fff80034fff00035fff00019fff4b31208
2e0838383838383859005d71004bb00b534bb014515a58bb001efff00013
ffc038385900715d015d2135062322263534363332161735342623220706
232226353437363736333216151133321615140623032626232207061514
16333236370358b7d097aae0d73a884f808062b1200910170a0e639c509f
b2701f1a1a1fc53b8449b7674e77726dbb63799a996f7ab60f1088456639
0a1812110a0f1a2a9d63fdd41713121801a211104f3b524c68575f00>WGJAAA+CourierNewPSMT AddT42Char 
2 5582 73 <000100d70000045a04e7003400cb4025400c50058005830c8131a00cb20c
b42bc22bd42b0a17080f090cc810102209342e00310131b80204b6000022
2e020805b80140401a0101220824282200255d29211d00001220192e2d18
0609080a22b8018c400a36002c01201acf100110b80195400d2f15401570
15d0150415193575b901cc00182b4e10f45d4df45d3cfd3c3c10e6003f3c
3f3c3c3cfd3c3ffde401111239390010ed0110f5d43c0010ed0110f55dd4
3c0010ed0110f5d43c31304379400e2a2b1b1c2a1c2c1f002b1b291f0100
2b012b8181015d0111213216151406232122263534363333112322263534
363333353436333217161615140623222726232206151521321615140623
022f01711e1a1a1efd6f1e1a1a1ecbb61e1a1a1eb6ac8e77873315181408
1397686e7701891e1a1a1e030dfd47171312181812131702b9181312187f
6a9c16081612121703176c457f1813121800>WGJAAA+CourierNewPSMT AddT42Char 
2 5930 76 <000200bd0000041605110003001c007f402a221932194019521963197419
841907130d10581414220d060c09580505220c161c19951515221c03c502
b80194b61c060d0c0a0001bb015f0003000201e0400e04040520154f1401
14191d517f182b4e10f45d3c4dfd3c10fd3cfd3c003f3c3ff6ed10ed0110
f5d43c0010ed0110f5d43c0010ed0110f5d43c3130015d01152335131121
3216151406232122263534363321112322263534363302907c7f014a1f1a
1a1ffd181e1a1a1e014af51e1b1a1f0511d9d9fe51fcf217131218181213
1702b91812131800>WGJAAA+CourierNewPSMT AddT42Char 
2 6148 79 <000100bb0000041404e70018005d4034621573158315030f090c58101022
09020805580101220812181595111122180009080a0001201110104f10bf
1003101919517f182b4e10f45d3c4dfd3c003f3c3fed0110f5d43c0010ed
0110f5d43c0010ed0110f5d43c3130015d01112132161514062321222635
3436332111232226353436330291014a1f1a1a1ffd181e1a1a1e014af21e
1b1a1f04e7fb6d1713121818121317043e1813121800>WGJAAA+CourierNewPSMT AddT42Char 
2 6320 83 <0002002dfe7e0457038000250031012d403f310a0f39270a0f39352d5101
55025d0d6401650265066b0d74017b2a722e0bc306c00ad907d909da27d9
31e606e50a0819032c037b078c039903ac0306161cb802ae400b192f1d19
191c1d2216150fb802ae400b12c80e12120f0e2215251fb802ae4041222f
1e22221f1e2225010d292f0f3b151c3b1616150e2f210b0a292101930407
001f3b250626210f0801081a332c000e201e0f1d4f1d5f1d6f1d041d1932
5e8e18b8012c852b4e10f45d3c4dfd3c3c4e10f65d4ded003fed3c3fe4ed
3fed3f3c10ed10ed1112393910fd3d12392f180110f5f4c40010fd3d1239
2f180110f5f4c40010fd3d12392f180110f5f4c43130004bb00c534bb024
515a58b2280c30bafff4002dfff4b42b0c0d2001baffe20031ffddb12723
38383838383838385901715d0071012b2b01153636333216161514002322
271133321615140623212226353436333311232226353436330134262322
06151416333236012a4bac757cd273fefdbde18ccc1e1a1a1efe6f1e1a1a
1e71711e1a1a1e039dd39899d4d49997d40362995b5c74cf72b5feffb7fe
061713121817131317043b18131218fe6991cfd09091d0cf>WGJAAA+CourierNewPSMT AddT42Char 
2 7166 86 <000100cfffdf03fe0380004401f14088143f1c4102124c0059006944ac20
ac37a138cc13c942de13d616d63edb42eb13e434e842fc13f434f842120b
130616053e09421f131516153e1b428b229534bb0f0b57135a3869386a3b
7a387e3b8938893ba514b2140a8e3bb51f0251082b29232631403d3c341a
180f0e07150c390034323023042e360f0e0c030a000311193b3d3d211121
430ab80135b403202e012eb80196401c26362121003b075539214f1e5f1e
6f1e031e1a463154233b29152140b8ffc040160f193f40596f2901291945
43070306260a210b5e8018b8012c852b003f3f3f3f014e10f45d4df4012b
ed10fde44e10f65d4dfdfded0010ed10ed5d10ed10fd11392fed11123912
17391112173901111239121739111239391239313043794038374212201c
251325173e151f003b1b391f013720391f011242151f00163f181f001718
3e3d3a1d3c1f011b1a3b3c381f361f001441111f01002b2b103c103c2b10
3c103c2b012b2b2b2b2b2b8181004bb011534bb024515a58b43b14340a1c
bcffe70017ffec0044ffecb23e1437b8ffecb322163c1c38383838383838
383859015d7100715d435c58b90038ffec40090d163f3b140d163f38b8ff
ec401810153f3b1410153f44140f143f44140c103f44140b0f3f1cb8ffec
b30f193f38b8ffecb70f193f00140f193f002b2b2b2b2b2b2b2b2b2b5900
5d0134363332161515140623222627262726232207061514171617161716
161514062322271406062322263535343633321615141716163332363534
27262426263534363332037c181213181813111702063852878d4e3b4630
86af44615fcec7c77f08150d1218171312191723996fa4a05152fec7884c
d493ae032b1d1a1a1f901e1a16193c2738392b353c281c0f1318237c486b
a76522140e1a1ead1e1a19152e1f303f7a444e2f2f2034683c6c7f00>WGJAAA+CourierNewPSMT AddT42Char 
2 7854 94 <00010195fefd033a04e700310098b5d512d5220207b8ffdeb71e3516221c
22341eb8ffde40141c22342322242e111210030f052c5b403f240124b802
18b50020085b400fb80218402100201a0027d42e0cd4040524131314d41a
2f2e24212120d4001a101a021a1932fab9017d00182b4e10f45d4df43c10
fd3c10f43c10fd3ce410e400192f2f1a10fd181aed191a10fd5d181aed01
11121739111239393130002b2b012b710116171615111416171617161514
062322272635113426272626353436373636351134363332161514070607
060615111406023632121742311f0a0d1a194f354742331c16161c344178
54181a0d092032412801f226222d3efe9939490503090c12131732456301
68374b04031614131603044b3701685e7d1812120c0a03054a37fe983f4d
>WGJAAA+CourierNewPSMT AddT42Char 
2 8154 96 <00010194fefc033904e7003100d540132a22017a22ca22ea2203aa22011c
2c252d3418b8ffd4400e252d341d22252d341f22252d3417b8ffc0b3252d
3415b8ffdeb3252d3416b8ffde4021252d341e2c252d3404121412022322
242e110f051e4d164d0020075b403f0f010fb80218b500202b5b4024b802
18401d00201a0027d42f2e24212120d41a0cd4040524131314d40f1a1f1a
021abc02b6003301bb01cb00182b10f65df43c10fd3ce410f43c10fd3ce4
00192f2f1a10fd181aed191a10fd5d181aed191a10eded01111239111239
393130005d2b2b2b2b2b2b2b2b015d717201262726351134262726272635
343633321716151114161716161514060706061511140623222635343736
373636351134360298331117423120090d191950344743331b17171b3442
785319190c0a2032412801f226222c3e0168384a0403090d121218334464
fe98374b04031613141603044b37fe985e7d1813120c0903054b3701673f
4e00>WGJAAA+CourierNewPSMT AddT42Char 
2 0 0 <00020067000004670500000300070046b10607b8010cb40201000504b801
0cb403000a0605b8010cb60303021a090704b8010cb6010019084f7b182b
4e10f43c4dfd3c4e10f63c4d10fd3c003f3cfd3c3f3cfd3c313033112111
25211121670400fc2003c0fc400500fb002004c0>WGJAAA+CourierNewPSMT AddT42Char 
WGJAAA+CourierNewPSMT /CharStrings get begin
/space 3 def
/parenleft 11 def
/parenright 12 def
/comma 15 def
/one 20 def
/two 21 def
/three 22 def
/four 23 def
/five 24 def
/six 25 def
/seven 26 def
/eight 27 def
/a 68 def
/f 73 def
/i 76 def
/l 79 def
/p 83 def
/s 86 def
/braceleft 94 def
/braceright 96 def
end
WGJAAA+CourierNewPSMT /Encoding get
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 97 /a put
dup 102 /f put
dup 105 /i put
dup 108 /l put
dup 112 /p put
dup 115 /s put
dup 123 /braceleft put
dup 125 /braceright put
pop
end
%ADOEndSubsetFont
/UOQDFG+CourierNewPSMT /WGJAAA+CourierNewPSMT findfont ct_VMDictPut
/UOQDFG+CourierNewPSMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma 4{/.notdef}rp 
/one /two /three /four /five /six /seven /eight 
40{/.notdef}rp /a 4{/.notdef}rp /f 2{/.notdef}rp /i 2{/.notdef}rp /l 
3{/.notdef}rp /p 2{/.notdef}rp /s 7{/.notdef}rp /braceleft /.notdef /braceright 
130{/.notdef}rp]
UOQDFG+CourierNewPSMT nf
UOQDFG+CourierNewPSMT*1 [9.75 0 0 -9.75 0 0 ]msf
44.5768 61.3571 mo
({)sh
50.5968 61.3571 mo
(\()sh
56.6068 61.3571 mo
(p)sh
UOQDFG+CourierNewPSMT*1 [6.775 0 0 -6.775 0 0 ]msf
62.6068 62.727 mo
(1)sh
UOQDFG+CourierNewPSMT*1 [9.75 0 0 -9.75 0 0 ]msf
66.5068 61.3571 mo
(, )
[6.00006 0 ]xsh
78.5268 61.3571 mo
(1)sh
84.5268 61.3571 mo
(\))sh
90.5268 61.3571 mo
(,)sh
96.5268 61.3571 mo
(\()sh
102.547 61.3571 mo
(p)sh
UOQDFG+CourierNewPSMT*1 [6.775 0 0 -6.775 0 0 ]msf
108.557 62.727 mo
(2)sh
UOQDFG+CourierNewPSMT*1 [9.75 0 0 -9.75 0 0 ]msf
112.457 61.3571 mo
(, )
[6.00006 0 ]xsh
124.477 61.3571 mo
(1)sh
130.477 61.3571 mo
(\))sh
136.477 61.3571 mo
(,)sh
142.477 61.3571 mo
(\()sh
148.507 61.3571 mo
(p)sh
UOQDFG+CourierNewPSMT*1 [6.775 0 0 -6.775 0 0 ]msf
154.507 62.727 mo
(3)sh
UOQDFG+CourierNewPSMT*1 [9.75 0 0 -9.75 0 0 ]msf
158.407 61.3571 mo
(, )
[6.00006 0 ]xsh
170.427 61.3571 mo
(1)sh
176.427 61.3571 mo
(\))sh
182.427 61.3571 mo
(,)sh
188.427 61.3571 mo
(\()sh
194.457 61.3571 mo
(p)sh
UOQDFG+CourierNewPSMT*1 [6.775 0 0 -6.775 0 0 ]msf
200.447 62.727 mo
(4)sh
UOQDFG+CourierNewPSMT*1 [9.75 0 0 -9.75 0 0 ]msf
204.357 61.3571 mo
(, )
[6.00006 0 ]xsh
216.347 61.3571 mo
(1)sh
222.377 61.3571 mo
(\))sh
228.377 61.3571 mo
(,)sh
234.377 61.3571 mo
(\()sh
240.377 61.3571 mo
(p)sh
UOQDFG+CourierNewPSMT*1 [6.775 0 0 -6.775 0 0 ]msf
246.397 62.727 mo
(5)sh
UOQDFG+CourierNewPSMT*1 [9.75 0 0 -9.75 0 0 ]msf
250.307 61.3571 mo
(, )
[6.00006 0 ]xsh
262.297 61.3571 mo
(1)sh
268.327 61.3571 mo
(\))sh
274.327 61.3571 mo
(,)sh
280.327 61.3571 mo
(\()sh
286.327 61.3571 mo
(p)sh
UOQDFG+CourierNewPSMT*1 [6.775 0 0 -6.775 0 0 ]msf
292.357 62.727 mo
(6)sh
UOQDFG+CourierNewPSMT*1 [9.75 0 0 -9.75 0 0 ]msf
296.257 61.3571 mo
(, )
[6.00006 0 ]xsh
308.257 61.3571 mo
(1)sh
314.277 61.3571 mo
(\))sh
320.277 61.3571 mo
(,)sh
326.277 61.3571 mo
(\()sh
332.277 61.3571 mo
(p)sh
UOQDFG+CourierNewPSMT*1 [6.775 0 0 -6.775 0 0 ]msf
338.307 62.727 mo
(7)sh
UOQDFG+CourierNewPSMT*1 [9.75 0 0 -9.75 0 0 ]msf
342.197 61.3571 mo
(, )
[6.00006 0 ]xsh
354.207 61.3571 mo
(1)sh
360.197 61.3571 mo
(\))sh
366.227 61.3571 mo
(,)sh
372.227 61.3571 mo
(\()sh
378.227 61.3571 mo
(p)sh
UOQDFG+CourierNewPSMT*1 [6.775 0 0 -6.775 0 0 ]msf
384.227 62.727 mo
(8)sh
UOQDFG+CourierNewPSMT*1 [9.75 0 0 -9.75 0 0 ]msf
388.147 61.3571 mo
(, )
[6.00006 0 ]xsh
400.147 61.3571 mo
(1)sh
406.147 61.3571 mo
(\))sh
412.177 61.3571 mo
(})sh
40.8768 302.647 mo
({)sh
46.9068 302.647 mo
(\()sh
52.8968 302.647 mo
(p)sh
58.8968 302.647 mo
(2)sh
64.9068 302.647 mo
(, )
[6.00006 0 ]xsh
76.9268 302.647 mo
(1)sh
82.9268 302.647 mo
(\))sh
88.9268 302.647 mo
(,)sh
94.9568 302.647 mo
(\()sh
100.957 302.647 mo
(p)sh
106.957 302.647 mo
(3)sh
112.957 302.647 mo
(, )
[6.00006 0 ]xsh
124.977 302.647 mo
(1)sh
130.977 302.647 mo
(\))sh
136.977 302.647 mo
(,)sh
143.007 302.647 mo
(\()sh
149.007 302.647 mo
(p)sh
155.007 302.647 mo
(4)sh
161.007 302.647 mo
(, )
[6.02505 0 ]xsh
173.027 302.647 mo
(1)sh
179.027 302.647 mo
(\))sh
185.027 302.647 mo
(,)sh
191.047 302.647 mo
(\()sh
197.047 302.647 mo
(p)sh
203.057 302.647 mo
(5)sh
209.047 302.647 mo
(, )
[6.02505 0 ]xsh
221.077 302.647 mo
(1)sh
227.077 302.647 mo
(\))sh
233.077 302.647 mo
(,)sh
239.107 302.647 mo
(\()sh
245.107 302.647 mo
(p)sh
251.097 302.647 mo
(6)sh
257.107 302.647 mo
(, )
[6.02505 0 ]xsh
269.127 302.647 mo
(1)sh
275.127 302.647 mo
(\))sh
281.127 302.647 mo
(,)sh
287.147 302.647 mo
(\()sh
293.157 302.647 mo
(p)sh
299.147 302.647 mo
(7)sh
305.147 302.647 mo
(, )
[6.02505 0 ]xsh
317.177 302.647 mo
(1)sh
323.177 302.647 mo
(\))sh
329.177 302.647 mo
(,)sh
335.207 302.647 mo
(\()sh
341.197 302.647 mo
(p)sh
347.207 302.647 mo
(8)sh
353.207 302.647 mo
(, )
[6.02505 0 ]xsh
365.227 302.647 mo
(1)sh
371.227 302.647 mo
(\))sh
377.227 302.647 mo
(})sh
40.8768 314.647 mo
({)sh
46.9068 314.647 mo
(\()sh
52.8968 314.647 mo
(p)sh
58.8968 314.647 mo
(2)sh
64.9068 314.647 mo
(, )
[6.00006 0 ]xsh
76.9268 314.647 mo
(1)sh
82.9268 314.647 mo
(\))sh
88.9268 314.647 mo
(,)sh
94.9568 314.647 mo
(\()sh
100.957 314.647 mo
(p)sh
106.957 314.647 mo
(3)sh
112.957 314.647 mo
(, )
[6.00006 0 ]xsh
124.977 314.647 mo
(1)sh
130.977 314.647 mo
(\))sh
136.977 314.647 mo
(,)sh
143.007 314.647 mo
(\()sh
149.007 314.647 mo
(p)sh
155.007 314.647 mo
(4)sh
161.007 314.647 mo
(, )
[6.02505 0 ]xsh
173.027 314.647 mo
(1)sh
179.027 314.647 mo
(\))sh
185.027 314.647 mo
(,)sh
191.047 314.647 mo
(\()sh
197.047 314.647 mo
(p)sh
203.057 314.647 mo
(5)sh
209.047 314.647 mo
(, )
[6.02505 0 ]xsh
221.077 314.647 mo
(1)sh
227.077 314.647 mo
(\))sh
233.077 314.647 mo
(})sh
40.8768 326.647 mo
({)sh
46.9068 326.647 mo
(\()sh
52.8968 326.647 mo
(p)sh
58.8968 326.647 mo
(2)sh
64.9068 326.647 mo
(, )
[6.00006 0 ]xsh
76.9268 326.647 mo
(1)sh
82.9268 326.647 mo
(\))sh
88.9268 326.647 mo
(,)sh
94.9568 326.647 mo
(\()sh
100.957 326.647 mo
(p)sh
106.957 326.647 mo
(3)sh
112.957 326.647 mo
(, )
[6.00006 0 ]xsh
124.977 326.647 mo
(1)sh
130.977 326.647 mo
(\))sh
136.977 326.647 mo
(})sh
UOQDFG+CourierNewPSMT*1 [9.775 0 0 -9.775 0 0 ]msf
40.8768 338.647 mo
({)sh
46.9068 338.647 mo
(\()sh
52.8968 338.647 mo
(p)sh
58.8968 338.647 mo
(2)sh
64.9068 338.647 mo
(, )
[6.00006 0 ]xsh
76.9268 338.647 mo
(1)sh
82.9268 338.647 mo
(\))sh
88.9268 338.647 mo
(})sh
394.797 299.827 mo
(fail)
[6.00006 6.00006 6.00006 0 ]xsh
UOQDFG+CourierNewPSMT*1 [9.75 0 0 -9.75 0 0 ]msf
394.797 311.857 mo
(fail)
[6.00006 6.00006 6.00006 0 ]xsh
394.797 323.847 mo
(fail)
[6.00006 6.00006 6.00006 0 ]xsh
394.797 335.847 mo
(pass)
[6.00006 6.00006 6.00006 0 ]xsh
40.0568 456.337 mo
441.307 456.337 li
441.307 399.266 li
40.0568 399.266 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
40.0568 456.337 mo
441.307 456.337 li
441.307 399.266 li
40.0568 399.266 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
52.7268 414.547 mo
52.7268 414.607 52.7268 414.667 52.7268 414.717 cv
52.7168 414.757 52.7068 414.797 52.6968 414.837 cv
52.6868 414.867 52.6768 414.907 52.6568 414.927 cv
52.6368 414.957 52.6068 414.987 52.5668 415.027 cv
52.5268 415.067 52.4368 415.127 52.2968 415.207 cv
52.1568 415.287 51.9868 415.367 51.7868 415.447 cv
51.5768 415.517 51.3468 415.587 51.0868 415.637 cv
50.8168 415.687 50.5268 415.717 50.2168 415.717 cv
49.6768 415.717 49.1868 415.637 48.7468 415.467 cv
48.3168 415.307 47.9468 415.067 47.6368 414.747 cv
47.3268 414.427 47.0868 414.027 46.9268 413.557 cv
46.7568 413.087 46.6768 412.547 46.6768 411.927 cv
46.6768 411.297 46.7668 410.737 46.9468 410.247 cv
47.1268 409.757 47.3768 409.337 47.6968 408.997 cv
48.0168 408.657 48.4068 408.397 48.8568 408.217 cv
49.2968 408.037 49.7968 407.947 50.3468 407.947 cv
50.5868 407.947 50.8168 407.967 51.0468 408.007 cv
51.2768 408.047 51.4868 408.097 51.6768 408.167 cv
51.8768 408.227 52.0468 408.297 52.1968 408.377 cv
52.3468 408.457 52.4468 408.527 52.5068 408.577 cv
52.5668 408.637 52.6068 408.677 52.6168 408.697 cv
52.6368 408.727 52.6468 408.757 52.6668 408.797 cv
52.6768 408.837 52.6768 408.877 52.6868 408.927 cv
52.6968 408.977 52.6968 409.037 52.6968 409.107 cv
52.6968 409.187 52.6968 409.257 52.6868 409.307 cv
52.6768 409.367 52.6668 409.407 52.6468 409.447 cv
52.6268 409.487 52.6068 409.517 52.5868 409.527 cv
52.5568 409.547 52.5268 409.557 52.4968 409.557 cv
52.4368 409.557 52.3568 409.517 52.2468 409.447 cv
52.1368 409.367 51.9968 409.287 51.8268 409.187 cv
51.6568 409.097 51.4468 409.017 51.2068 408.937 cv
50.9568 408.867 50.6668 408.827 50.3268 408.827 cv
49.9568 408.827 49.6168 408.887 49.3068 409.027 cv
49.0068 409.157 48.7468 409.357 48.5268 409.617 cv
48.3168 409.887 48.1468 410.207 48.0268 410.577 cv
47.9068 410.957 47.8468 411.387 47.8468 411.867 cv
47.8468 412.347 47.9068 412.777 48.0268 413.147 cv
48.1368 413.517 48.2968 413.827 48.5168 414.067 cv
48.7268 414.317 48.9868 414.507 49.3068 414.637 cv
49.6168 414.757 49.9668 414.827 50.3568 414.827 cv
50.6868 414.827 50.9768 414.787 51.2268 414.717 cv
51.4768 414.637 51.6868 414.557 51.8668 414.467 cv
52.0368 414.377 52.1868 414.287 52.2968 414.217 cv
52.4068 414.137 52.4968 414.107 52.5568 414.107 cv
52.5868 414.107 52.6168 414.107 52.6368 414.117 cv
52.6568 414.137 52.6768 414.157 52.6868 414.187 cv
52.7068 414.227 52.7168 414.267 52.7168 414.327 cv
52.7268 414.387 52.7268 414.457 52.7268 414.547 cv
cp
58.7568 415.477 mo
58.7568 415.507 58.7468 415.537 58.7368 415.557 cv
58.7168 415.577 58.6968 415.597 58.6568 415.607 cv
58.6168 415.627 58.5668 415.637 58.5068 415.647 cv
58.4368 415.657 58.3668 415.657 58.2768 415.657 cv
58.1768 415.657 58.0968 415.657 58.0368 415.647 cv
57.9668 415.637 57.9168 415.627 57.8868 415.607 cv
57.8468 415.597 57.8268 415.577 57.8068 415.557 cv
57.7968 415.537 57.7868 415.507 57.7868 415.477 cv
57.7868 414.777 li
57.4568 415.107 57.1368 415.357 56.8068 415.507 cv
56.4868 415.657 56.1668 415.737 55.8268 415.737 cv
55.4468 415.737 55.1168 415.677 54.8568 415.557 cv
54.5868 415.437 54.3768 415.277 54.2168 415.077 cv
54.0468 414.877 53.9368 414.647 53.8668 414.377 cv
53.7868 414.107 53.7568 413.787 53.7568 413.397 cv
53.7568 410.197 li
53.7568 410.167 53.7668 410.147 53.7768 410.127 cv
53.7968 410.097 53.8268 410.077 53.8668 410.067 cv
53.9068 410.047 53.9668 410.037 54.0368 410.027 cv
54.1068 410.027 54.1868 410.017 54.2868 410.017 cv
54.3968 410.017 54.4768 410.027 54.5468 410.027 cv
54.6168 410.037 54.6768 410.047 54.7168 410.067 cv
54.7568 410.077 54.7868 410.097 54.7968 410.127 cv
54.8168 410.147 54.8268 410.167 54.8268 410.197 cv
54.8268 413.267 li
54.8268 413.577 54.8468 413.827 54.8968 414.017 cv
54.9468 414.197 55.0268 414.357 55.1268 414.487 cv
55.2268 414.617 55.3568 414.717 55.5068 414.797 cv
55.6668 414.867 55.8468 414.897 56.0468 414.897 cv
56.3168 414.897 56.5868 414.817 56.8468 414.647 cv
57.1068 414.467 57.3868 414.217 57.6868 413.887 cv
57.6868 410.197 li
57.6868 410.167 57.6968 410.147 57.7068 410.127 cv
57.7268 410.097 57.7568 410.077 57.7968 410.067 cv
57.8368 410.047 57.8968 410.037 57.9568 410.027 cv
58.0268 410.027 58.1168 410.017 58.2268 410.017 cv
58.3268 410.017 58.4168 410.027 58.4768 410.027 cv
58.5468 410.037 58.6068 410.047 58.6368 410.067 cv
58.6768 410.077 58.7068 410.097 58.7268 410.127 cv
58.7468 410.147 58.7568 410.167 58.7568 410.197 cv
cp
64.6768 410.547 mo
64.6768 410.637 64.6768 410.707 64.6768 410.767 cv
64.6668 410.827 64.6568 410.867 64.6468 410.897 cv
64.6368 410.937 64.6168 410.957 64.5968 410.977 cv
64.5768 410.997 64.5568 411.007 64.5168 411.007 cv
64.4868 411.007 64.4368 410.997 64.3968 410.977 cv
64.3468 410.957 64.2868 410.947 64.2268 410.927 cv
64.1668 410.907 64.0968 410.887 64.0168 410.877 cv
63.9368 410.857 63.8568 410.847 63.7668 410.847 cv
63.6568 410.847 63.5468 410.867 63.4468 410.907 cv
63.3468 410.947 63.2368 411.017 63.1268 411.107 cv
63.0068 411.197 62.8868 411.317 62.7668 411.457 cv
62.6368 411.607 62.5068 411.787 62.3568 412.007 cv
62.3568 415.477 li
62.3568 415.507 62.3468 415.537 62.3268 415.557 cv
62.3068 415.577 62.2768 415.597 62.2468 415.607 cv
62.2068 415.627 62.1468 415.637 62.0768 415.647 cv
62.0168 415.657 61.9268 415.657 61.8168 415.657 cv
61.7168 415.657 61.6268 415.657 61.5568 415.647 cv
61.4868 415.637 61.4368 415.627 61.3968 415.607 cv
61.3568 415.597 61.3268 415.577 61.3068 415.557 cv
61.2968 415.537 61.2868 415.507 61.2868 415.477 cv
61.2868 410.197 li
61.2868 410.167 61.2968 410.147 61.3068 410.127 cv
61.3168 410.097 61.3468 410.077 61.3868 410.067 cv
61.4268 410.047 61.4768 410.037 61.5368 410.027 cv
61.5968 410.027 61.6768 410.017 61.7668 410.017 cv
61.8668 410.017 61.9468 410.027 62.0068 410.027 cv
62.0668 410.037 62.1168 410.047 62.1568 410.067 cv
62.1868 410.077 62.2068 410.097 62.2268 410.127 cv
62.2368 410.147 62.2468 410.167 62.2468 410.197 cv
62.2468 410.967 li
62.4068 410.757 62.5568 410.587 62.6968 410.457 cv
62.8368 410.317 62.9668 410.217 63.0968 410.137 cv
63.2168 410.067 63.3368 410.007 63.4668 409.977 cv
63.5868 409.957 63.7068 409.937 63.8368 409.937 cv
63.8868 409.937 63.9568 409.937 64.0268 409.947 cv
64.0968 409.957 64.1668 409.967 64.2468 409.977 cv
64.3268 409.997 64.3968 410.017 64.4568 410.027 cv
64.5168 410.047 64.5668 410.067 64.5868 410.087 cv
64.6168 410.107 64.6268 410.127 64.6368 410.147 cv
64.6468 410.167 64.6568 410.187 64.6668 410.217 cv
64.6668 410.237 64.6768 410.277 64.6768 410.337 cv
64.6768 410.387 64.6768 410.457 64.6768 410.547 cv
cp
69.1768 410.547 mo
69.1768 410.637 69.1768 410.707 69.1768 410.767 cv
69.1668 410.827 69.1568 410.867 69.1468 410.897 cv
69.1368 410.937 69.1168 410.957 69.0968 410.977 cv
69.0768 410.997 69.0568 411.007 69.0168 411.007 cv
68.9868 411.007 68.9368 410.997 68.8968 410.977 cv
68.8468 410.957 68.7868 410.947 68.7268 410.927 cv
68.6668 410.907 68.5968 410.887 68.5168 410.877 cv
68.4368 410.857 68.3568 410.847 68.2668 410.847 cv
68.1568 410.847 68.0468 410.867 67.9468 410.907 cv
67.8468 410.947 67.7368 411.017 67.6268 411.107 cv
67.5068 411.197 67.3868 411.317 67.2668 411.457 cv
67.1368 411.607 67.0068 411.787 66.8568 412.007 cv
66.8568 415.477 li
66.8568 415.507 66.8468 415.537 66.8268 415.557 cv
66.8068 415.577 66.7768 415.597 66.7468 415.607 cv
66.7068 415.627 66.6468 415.637 66.5768 415.647 cv
66.5168 415.657 66.4268 415.657 66.3168 415.657 cv
66.2168 415.657 66.1268 415.657 66.0568 415.647 cv
65.9868 415.637 65.9368 415.627 65.8968 415.607 cv
65.8568 415.597 65.8268 415.577 65.8068 415.557 cv
65.7968 415.537 65.7868 415.507 65.7868 415.477 cv
65.7868 410.197 li
65.7868 410.167 65.7968 410.147 65.8068 410.127 cv
65.8168 410.097 65.8468 410.077 65.8868 410.067 cv
65.9268 410.047 65.9768 410.037 66.0368 410.027 cv
66.0968 410.027 66.1768 410.017 66.2668 410.017 cv
66.3668 410.017 66.4468 410.027 66.5068 410.027 cv
66.5668 410.037 66.6168 410.047 66.6568 410.067 cv
66.6868 410.077 66.7068 410.097 66.7268 410.127 cv
66.7368 410.147 66.7468 410.167 66.7468 410.197 cv
66.7468 410.967 li
66.9068 410.757 67.0568 410.587 67.1968 410.457 cv
67.3368 410.317 67.4668 410.217 67.5968 410.137 cv
67.7168 410.067 67.8368 410.007 67.9668 409.977 cv
68.0868 409.957 68.2068 409.937 68.3368 409.937 cv
68.3868 409.937 68.4568 409.937 68.5268 409.947 cv
68.5968 409.957 68.6668 409.967 68.7468 409.977 cv
68.8268 409.997 68.8968 410.017 68.9568 410.027 cv
69.0168 410.047 69.0668 410.067 69.0868 410.087 cv
69.1168 410.107 69.1268 410.127 69.1368 410.147 cv
69.1468 410.167 69.1568 410.187 69.1668 410.217 cv
69.1668 410.237 69.1768 410.277 69.1768 410.337 cv
69.1768 410.387 69.1768 410.457 69.1768 410.547 cv
cp
75.2368 412.607 mo
75.2368 412.767 75.1968 412.867 75.1168 412.937 cv
75.0268 412.997 74.9368 413.027 74.8268 413.027 cv
71.0068 413.027 li
71.0068 413.327 71.0368 413.587 71.0968 413.827 cv
71.1668 414.057 71.2768 414.257 71.4268 414.427 cv
71.5768 414.597 71.7768 414.727 72.0168 414.817 cv
72.2568 414.907 72.5468 414.947 72.8968 414.947 cv
73.1768 414.947 73.4268 414.927 73.6368 414.887 cv
73.8568 414.847 74.0468 414.797 74.1968 414.747 cv
74.3568 414.697 74.4868 414.647 74.5868 414.607 cv
74.6868 414.567 74.7668 414.547 74.8168 414.547 cv
74.8468 414.547 74.8768 414.557 74.8968 414.567 cv
74.9268 414.587 74.9368 414.607 74.9568 414.627 cv
74.9668 414.657 74.9768 414.697 74.9868 414.747 cv
74.9868 414.797 74.9968 414.857 74.9968 414.927 cv
74.9968 414.977 74.9868 415.017 74.9868 415.057 cv
74.9868 415.097 74.9768 415.127 74.9668 415.157 cv
74.9668 415.187 74.9568 415.207 74.9368 415.237 cv
74.9268 415.257 74.9068 415.277 74.8768 415.307 cv
74.8568 415.327 74.7868 415.357 74.6668 415.407 cv
74.5568 415.457 74.4068 415.507 74.2168 415.547 cv
74.0368 415.597 73.8168 415.637 73.5768 415.677 cv
73.3368 415.717 73.0768 415.737 72.8068 415.737 cv
72.3268 415.737 71.9068 415.677 71.5468 415.547 cv
71.1868 415.427 70.8868 415.247 70.6468 415.017 cv
70.3968 414.777 70.2168 414.477 70.0868 414.117 cv
69.9668 413.757 69.8968 413.337 69.8968 412.857 cv
69.8968 412.407 69.9668 411.997 70.0968 411.637 cv
70.2268 411.277 70.4068 410.977 70.6568 410.717 cv
70.8968 410.467 71.1868 410.277 71.5368 410.137 cv
71.8768 410.007 72.2568 409.937 72.6868 409.937 cv
73.1368 409.937 73.5268 410.007 73.8468 410.137 cv
74.1668 410.267 74.4368 410.447 74.6368 410.677 cv
74.8468 410.897 74.9968 411.157 75.0968 411.467 cv
75.1868 411.767 75.2368 412.087 75.2368 412.437 cv
cp
74.1668 412.327 mo
74.1768 411.817 74.0568 411.417 73.7968 411.127 cv
73.5368 410.837 73.1468 410.697 72.6268 410.697 cv
72.3668 410.697 72.1368 410.737 71.9368 410.827 cv
71.7368 410.917 71.5768 411.037 71.4368 411.187 cv
71.3068 411.337 71.1968 411.507 71.1268 411.707 cv
71.0568 411.897 71.0168 412.107 71.0068 412.327 cv
cp
82.0368 415.477 mo
82.0368 415.507 82.0268 415.537 82.0068 415.557 cv
81.9868 415.577 81.9668 415.597 81.9268 415.607 cv
81.8868 415.627 81.8268 415.637 81.7668 415.647 cv
81.6968 415.657 81.6068 415.657 81.5068 415.657 cv
81.3968 415.657 81.3068 415.657 81.2368 415.647 cv
81.1768 415.637 81.1168 415.627 81.0768 415.607 cv
81.0368 415.597 81.0168 415.577 80.9968 415.557 cv
80.9768 415.537 80.9668 415.507 80.9668 415.477 cv
80.9668 412.387 li
80.9668 412.087 80.9468 411.847 80.8968 411.657 cv
80.8368 411.477 80.7668 411.317 80.6668 411.187 cv
80.5668 411.057 80.4368 410.947 80.2868 410.877 cv
80.1268 410.807 79.9468 410.777 79.7368 410.777 cv
79.4768 410.777 79.2068 410.857 78.9368 411.037 cv
78.6768 411.207 78.3968 411.457 78.1068 411.787 cv
78.1068 415.477 li
78.1068 415.507 78.0968 415.537 78.0768 415.557 cv
78.0568 415.577 78.0268 415.597 77.9968 415.607 cv
77.9568 415.627 77.8968 415.637 77.8268 415.647 cv
77.7668 415.657 77.6768 415.657 77.5668 415.657 cv
77.4668 415.657 77.3768 415.657 77.3068 415.647 cv
77.2368 415.637 77.1868 415.627 77.1468 415.607 cv
77.1068 415.597 77.0768 415.577 77.0568 415.557 cv
77.0468 415.537 77.0368 415.507 77.0368 415.477 cv
77.0368 410.197 li
77.0368 410.167 77.0468 410.147 77.0568 410.127 cv
77.0668 410.097 77.0968 410.077 77.1368 410.067 cv
77.1768 410.047 77.2268 410.037 77.2868 410.027 cv
77.3468 410.027 77.4268 410.017 77.5168 410.017 cv
77.6168 410.017 77.6968 410.027 77.7568 410.027 cv
77.8168 410.037 77.8668 410.047 77.9068 410.067 cv
77.9368 410.077 77.9568 410.097 77.9768 410.127 cv
77.9868 410.147 77.9968 410.167 77.9968 410.197 cv
77.9968 410.897 li
78.3268 410.567 78.6468 410.327 78.9768 410.167 cv
79.2968 410.017 79.6268 409.937 79.9568 409.937 cv
80.3468 409.937 80.6668 409.997 80.9368 410.117 cv
81.1968 410.237 81.4168 410.397 81.5768 410.597 cv
81.7368 410.797 81.8568 411.027 81.9268 411.297 cv
81.9968 411.557 82.0368 411.887 82.0368 412.257 cv
cp
86.8068 415.087 mo
86.8068 415.197 86.7968 415.287 86.7768 415.357 cv
86.7668 415.427 86.7368 415.477 86.6968 415.507 cv
86.6668 415.537 86.6168 415.567 86.5468 415.597 cv
86.4768 415.617 86.3968 415.647 86.3068 415.657 cv
86.2268 415.677 86.1268 415.687 86.0268 415.707 cv
85.9368 415.717 85.8368 415.717 85.7368 415.717 cv
85.4368 415.717 85.1768 415.687 84.9568 415.617 cv
84.7468 415.537 84.5668 415.427 84.4368 415.287 cv
84.2968 415.137 84.1968 414.957 84.1368 414.727 cv
84.0668 414.507 84.0368 414.237 84.0368 413.937 cv
84.0368 410.847 li
83.2268 410.847 li
83.1668 410.847 83.1068 410.817 83.0768 410.757 cv
83.0368 410.697 83.0168 410.597 83.0168 410.457 cv
83.0168 410.377 83.0168 410.317 83.0268 410.267 cv
83.0368 410.217 83.0568 410.177 83.0768 410.137 cv
83.0868 410.107 83.1168 410.087 83.1368 410.067 cv
83.1668 410.057 83.1968 410.047 83.2368 410.047 cv
84.0368 410.047 li
84.0368 408.797 li
84.0368 408.767 84.0468 408.747 84.0668 408.717 cv
84.0768 408.697 84.1068 408.677 84.1468 408.657 cv
84.1868 408.637 84.2368 408.627 84.3068 408.617 cv
84.3768 408.607 84.4668 408.607 84.5668 408.607 cv
84.6768 408.607 84.7668 408.607 84.8368 408.617 cv
84.8968 408.627 84.9568 408.637 84.9968 408.657 cv
85.0368 408.677 85.0568 408.697 85.0768 408.717 cv
85.0968 408.747 85.1068 408.767 85.1068 408.797 cv
85.1068 410.047 li
86.5968 410.047 li
86.6268 410.047 86.6568 410.057 86.6868 410.067 cv
86.7068 410.087 86.7268 410.107 86.7468 410.137 cv
86.7668 410.177 86.7868 410.217 86.7968 410.267 cv
86.7968 410.317 86.8068 410.377 86.8068 410.457 cv
86.8068 410.597 86.7868 410.697 86.7468 410.757 cv
86.7068 410.817 86.6568 410.847 86.5968 410.847 cv
85.1068 410.847 li
85.1068 413.797 li
85.1068 414.157 85.1668 414.427 85.2768 414.617 cv
85.3968 414.807 85.6068 414.897 85.9168 414.897 cv
86.0168 414.897 86.1068 414.887 86.1768 414.867 cv
86.2568 414.847 86.3268 414.837 86.3868 414.817 cv
86.4468 414.797 86.4968 414.777 86.5368 414.757 cv
86.5868 414.737 86.6268 414.727 86.6568 414.727 cv
86.6768 414.727 86.6968 414.737 86.7168 414.747 cv
86.7368 414.757 86.7568 414.777 86.7668 414.797 cv
86.7768 414.827 86.7868 414.867 86.7968 414.917 cv
86.7968 414.957 86.8068 415.017 86.8068 415.087 cv
cp
95.7968 408.477 mo
95.7968 408.547 95.7868 408.607 95.7768 408.667 cv
95.7768 408.717 95.7568 408.767 95.7368 408.797 cv
95.7168 408.827 95.6868 408.857 95.6568 408.867 cv
95.6368 408.887 95.6068 408.897 95.5768 408.897 cv
92.5168 408.897 li
92.5168 411.477 li
95.4068 411.477 li
95.4368 411.477 95.4668 411.477 95.4968 411.497 cv
95.5268 411.507 95.5468 411.527 95.5668 411.557 cv
95.5868 411.597 95.6068 411.637 95.6168 411.687 cv
95.6268 411.737 95.6268 411.807 95.6268 411.887 cv
95.6268 411.967 95.6268 412.027 95.6168 412.077 cv
95.6068 412.137 95.5868 412.177 95.5668 412.207 cv
95.5468 412.237 95.5268 412.267 95.4968 412.287 cv
95.4668 412.307 95.4368 412.307 95.4068 412.307 cv
92.5168 412.307 li
92.5168 415.467 li
92.5168 415.497 92.5068 415.527 92.4968 415.547 cv
92.4768 415.577 92.4468 415.597 92.4068 415.607 cv
92.3568 415.617 92.3068 415.637 92.2368 415.647 cv
92.1668 415.647 92.0768 415.657 91.9668 415.657 cv
91.8668 415.657 91.7768 415.647 91.6968 415.647 cv
91.6268 415.637 91.5668 415.617 91.5268 415.607 cv
91.4868 415.597 91.4568 415.577 91.4368 415.547 cv
91.4168 415.527 91.4068 415.497 91.4068 415.467 cv
91.4068 408.447 li
91.4068 408.297 91.4568 408.187 91.5468 408.127 cv
91.6268 408.067 91.7268 408.037 91.8268 408.037 cv
95.5768 408.037 li
95.6068 408.037 95.6368 408.047 95.6568 408.067 cv
95.6868 408.077 95.7168 408.107 95.7368 408.137 cv
95.7568 408.177 95.7768 408.217 95.7768 408.277 cv
95.7868 408.337 95.7968 408.397 95.7968 408.477 cv
cp
101.887 413.497 mo
101.887 413.847 101.817 414.167 101.677 414.447 cv
101.527 414.717 101.327 414.957 101.077 415.147 cv
100.817 415.347 100.517 415.487 100.177 415.587 cv
99.8268 415.687 99.4568 415.737 99.0568 415.737 cv
98.7768 415.737 98.5168 415.707 98.2768 415.667 cv
98.0368 415.627 97.8268 415.577 97.6368 415.507 cv
97.4568 415.447 97.2968 415.387 97.1668 415.317 cv
97.0468 415.247 96.9568 415.197 96.9068 415.147 cv
96.8568 415.097 96.8168 415.037 96.7968 414.967 cv
96.7668 414.897 96.7568 414.797 96.7568 414.677 cv
96.7568 414.597 96.7668 414.517 96.7768 414.467 cv
96.7768 414.407 96.7968 414.357 96.8068 414.327 cv
96.8268 414.287 96.8468 414.267 96.8768 414.257 cv
96.8968 414.237 96.9268 414.237 96.9668 414.237 cv
97.0268 414.237 97.1068 414.267 97.2168 414.337 cv
97.3268 414.397 97.4668 414.467 97.6468 414.547 cv
97.8168 414.627 98.0268 414.697 98.2668 414.767 cv
98.5068 414.837 98.7868 414.867 99.1068 414.867 cv
99.3468 414.867 99.5668 414.847 99.7668 414.787 cv
99.9668 414.727 100.137 414.647 100.287 414.537 cv
100.427 414.427 100.537 414.297 100.617 414.137 cv
100.687 413.987 100.727 413.807 100.727 413.607 cv
100.727 413.387 100.677 413.207 100.567 413.057 cv
100.457 412.907 100.317 412.767 100.147 412.657 cv
99.9668 412.537 99.7668 412.437 99.5368 412.337 cv
99.3168 412.237 99.0868 412.147 98.8468 412.047 cv
98.6168 411.947 98.3868 411.837 98.1568 411.717 cv
97.9368 411.597 97.7368 411.447 97.5568 411.287 cv
97.3868 411.117 97.2368 410.927 97.1268 410.707 cv
97.0168 410.487 96.9668 410.227 96.9668 409.917 cv
96.9668 409.597 97.0268 409.317 97.1568 409.067 cv
97.2868 408.817 97.4568 408.607 97.6868 408.447 cv
97.9068 408.277 98.1768 408.147 98.4868 408.057 cv
98.8068 407.977 99.1368 407.927 99.4968 407.927 cv
99.6868 407.927 99.8668 407.947 100.057 407.977 cv
100.247 407.997 100.417 408.037 100.587 408.087 cv
100.747 408.137 100.897 408.197 101.027 408.257 cv
101.157 408.317 101.237 408.367 101.277 408.397 cv
101.327 408.437 101.347 408.467 101.367 408.487 cv
101.377 408.507 101.387 408.537 101.397 408.567 cv
101.407 408.607 101.407 408.647 101.417 408.687 cv
101.417 408.737 101.417 408.797 101.417 408.867 cv
101.417 408.937 101.417 409.007 101.407 409.057 cv
101.407 409.117 101.397 409.157 101.377 409.197 cv
101.367 409.237 101.347 409.257 101.327 409.277 cv
101.307 409.297 101.277 409.307 101.247 409.307 cv
101.197 409.307 101.127 409.277 101.027 409.227 cv
100.927 409.167 100.797 409.107 100.657 409.037 cv
100.507 408.967 100.337 408.907 100.137 408.847 cv
99.9368 408.797 99.7068 408.767 99.4568 408.767 cv
99.2268 408.767 99.0268 408.797 98.8568 408.847 cv
98.6868 408.907 98.5368 408.987 98.4268 409.077 cv
98.3168 409.167 98.2368 409.277 98.1768 409.407 cv
98.1268 409.537 98.0968 409.677 98.0968 409.817 cv
98.0968 410.027 98.1468 410.217 98.2568 410.367 cv
98.3668 410.517 98.5068 410.657 98.6868 410.767 cv
98.8668 410.887 99.0668 410.997 99.2968 411.097 cv
99.5168 411.187 99.7568 411.287 99.9868 411.387 cv
100.227 411.487 100.457 411.597 100.687 411.717 cv
100.917 411.837 101.117 411.977 101.297 412.137 cv
101.477 412.297 101.617 412.487 101.727 412.717 cv
101.837 412.937 101.887 413.197 101.887 413.497 cv
cp
107.887 413.497 mo
107.887 413.847 107.817 414.167 107.677 414.447 cv
107.527 414.717 107.327 414.957 107.077 415.147 cv
106.817 415.347 106.517 415.487 106.177 415.587 cv
105.827 415.687 105.457 415.737 105.057 415.737 cv
104.777 415.737 104.517 415.707 104.277 415.667 cv
104.037 415.627 103.827 415.577 103.637 415.507 cv
103.457 415.447 103.297 415.387 103.167 415.317 cv
103.047 415.247 102.957 415.197 102.907 415.147 cv
102.857 415.097 102.817 415.037 102.797 414.967 cv
102.767 414.897 102.757 414.797 102.757 414.677 cv
102.757 414.597 102.767 414.517 102.777 414.467 cv
102.777 414.407 102.797 414.357 102.807 414.327 cv
102.827 414.287 102.847 414.267 102.877 414.257 cv
102.897 414.237 102.927 414.237 102.967 414.237 cv
103.027 414.237 103.107 414.267 103.217 414.337 cv
103.327 414.397 103.467 414.467 103.647 414.547 cv
103.817 414.627 104.027 414.697 104.267 414.767 cv
104.507 414.837 104.787 414.867 105.107 414.867 cv
105.347 414.867 105.567 414.847 105.767 414.787 cv
105.967 414.727 106.137 414.647 106.287 414.537 cv
106.427 414.427 106.537 414.297 106.617 414.137 cv
106.687 413.987 106.727 413.807 106.727 413.607 cv
106.727 413.387 106.677 413.207 106.567 413.057 cv
106.457 412.907 106.317 412.767 106.147 412.657 cv
105.967 412.537 105.767 412.437 105.537 412.337 cv
105.317 412.237 105.087 412.147 104.847 412.047 cv
104.617 411.947 104.387 411.837 104.157 411.717 cv
103.937 411.597 103.737 411.447 103.557 411.287 cv
103.387 411.117 103.237 410.927 103.127 410.707 cv
103.017 410.487 102.967 410.227 102.967 409.917 cv
102.967 409.597 103.027 409.317 103.157 409.067 cv
103.287 408.817 103.457 408.607 103.687 408.447 cv
103.907 408.277 104.177 408.147 104.487 408.057 cv
104.807 407.977 105.137 407.927 105.497 407.927 cv
105.687 407.927 105.867 407.947 106.057 407.977 cv
106.247 407.997 106.417 408.037 106.587 408.087 cv
106.747 408.137 106.897 408.197 107.027 408.257 cv
107.157 408.317 107.237 408.367 107.277 408.397 cv
107.327 408.437 107.347 408.467 107.367 408.487 cv
107.377 408.507 107.387 408.537 107.397 408.567 cv
107.407 408.607 107.407 408.647 107.417 408.687 cv
107.417 408.737 107.417 408.797 107.417 408.867 cv
107.417 408.937 107.417 409.007 107.407 409.057 cv
107.407 409.117 107.397 409.157 107.377 409.197 cv
107.367 409.237 107.347 409.257 107.327 409.277 cv
107.307 409.297 107.277 409.307 107.247 409.307 cv
107.197 409.307 107.127 409.277 107.027 409.227 cv
106.927 409.167 106.797 409.107 106.657 409.037 cv
106.507 408.967 106.337 408.907 106.137 408.847 cv
105.937 408.797 105.707 408.767 105.457 408.767 cv
105.227 408.767 105.027 408.797 104.857 408.847 cv
104.687 408.907 104.537 408.987 104.427 409.077 cv
104.317 409.167 104.237 409.277 104.177 409.407 cv
104.127 409.537 104.097 409.677 104.097 409.817 cv
104.097 410.027 104.147 410.217 104.257 410.367 cv
104.367 410.517 104.507 410.657 104.687 410.767 cv
104.867 410.887 105.067 410.997 105.297 411.097 cv
105.517 411.187 105.757 411.287 105.987 411.387 cv
106.227 411.487 106.457 411.597 106.687 411.717 cv
106.917 411.837 107.117 411.977 107.297 412.137 cv
107.477 412.297 107.617 412.487 107.727 412.717 cv
107.837 412.937 107.887 413.197 107.887 413.497 cv
cp
f
40.4568 596.537 mo
441.707 596.537 li
441.707 539.466 li
40.4568 539.466 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
40.4568 596.537 mo
441.707 596.537 li
441.707 539.466 li
40.4568 539.466 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
52.6868 550.457 mo
52.6868 550.837 52.6168 551.177 52.4868 551.487 cv
52.3468 551.787 52.1468 552.047 51.8968 552.267 cv
51.6368 552.477 51.3268 552.647 50.9568 552.757 cv
50.5768 552.877 50.1368 552.937 49.6268 552.937 cv
48.6768 552.937 li
48.6768 555.667 li
48.6768 555.697 48.6668 555.727 48.6468 555.747 cv
48.6268 555.777 48.5968 555.797 48.5568 555.807 cv
48.5168 555.817 48.4568 555.827 48.3868 555.837 cv
48.3168 555.847 48.2268 555.857 48.1168 555.857 cv
48.0168 555.857 47.9268 555.847 47.8568 555.837 cv
47.7768 555.827 47.7268 555.817 47.6868 555.807 cv
47.6368 555.797 47.6068 555.777 47.5868 555.747 cv
47.5768 555.727 47.5668 555.697 47.5668 555.667 cv
47.5668 548.667 li
47.5668 548.517 47.6068 548.407 47.6968 548.337 cv
47.7868 548.267 47.8968 548.237 48.0068 548.237 cv
49.7868 548.237 li
49.9668 548.237 50.1468 548.247 50.3068 548.257 cv
50.4768 548.277 50.6668 548.297 50.8968 548.347 cv
51.1168 548.387 51.3468 548.477 51.5868 548.597 cv
51.8168 548.717 52.0168 548.877 52.1768 549.057 cv
52.3468 549.237 52.4668 549.437 52.5568 549.677 cv
52.6468 549.917 52.6868 550.177 52.6868 550.457 cv
cp
51.5268 550.537 mo
51.5268 550.237 51.4568 549.977 51.3368 549.767 cv
51.2068 549.557 51.0468 549.407 50.8668 549.307 cv
50.6768 549.207 50.4868 549.137 50.2868 549.107 cv
50.0868 549.087 49.8868 549.067 49.6968 549.067 cv
48.6768 549.067 li
48.6768 552.107 li
49.6768 552.107 li
50.0068 552.107 50.2868 552.077 50.5068 551.997 cv
50.7268 551.917 50.9168 551.807 51.0668 551.667 cv
51.2168 551.527 51.3268 551.367 51.4068 551.167 cv
51.4868 550.977 51.5268 550.767 51.5268 550.537 cv
cp
59.1468 552.807 mo
59.1468 552.957 59.0968 553.067 59.0168 553.137 cv
58.9368 553.197 58.8368 553.227 58.7268 553.227 cv
54.9068 553.227 li
54.9068 553.527 54.9368 553.787 55.0068 554.017 cv
55.0668 554.257 55.1768 554.457 55.3268 554.627 cv
55.4768 554.797 55.6768 554.917 55.9168 555.007 cv
56.1568 555.097 56.4568 555.147 56.8068 555.147 cv
57.0868 555.147 57.3268 555.127 57.5468 555.087 cv
57.7568 555.047 57.9468 554.997 58.1068 554.947 cv
58.2668 554.897 58.3968 554.847 58.4968 554.807 cv
58.5968 554.767 58.6668 554.747 58.7268 554.747 cv
58.7568 554.747 58.7768 554.757 58.8068 554.767 cv
58.8268 554.787 58.8468 554.807 58.8568 554.827 cv
58.8768 554.857 58.8868 554.897 58.8868 554.947 cv
58.8968 554.997 58.8968 555.057 58.8968 555.127 cv
58.8968 555.177 58.8968 555.217 58.8968 555.257 cv
58.8868 555.297 58.8868 555.327 58.8768 555.357 cv
58.8668 555.387 58.8568 555.407 58.8468 555.437 cv
58.8268 555.457 58.8068 555.477 58.7868 555.497 cv
58.7668 555.527 58.6968 555.557 58.5768 555.607 cv
58.4568 555.657 58.3068 555.707 58.1268 555.747 cv
57.9368 555.797 57.7268 555.837 57.4868 555.877 cv
57.2368 555.917 56.9868 555.927 56.7068 555.927 cv
56.2268 555.927 55.8168 555.867 55.4568 555.747 cv
55.0968 555.627 54.7968 555.447 54.5468 555.207 cv
54.3068 554.977 54.1168 554.677 53.9968 554.317 cv
53.8668 553.957 53.8068 553.537 53.8068 553.057 cv
53.8068 552.607 53.8668 552.197 53.9968 551.837 cv
54.1268 551.477 54.3168 551.167 54.5568 550.917 cv
54.7968 550.667 55.0968 550.477 55.4368 550.337 cv
55.7768 550.207 56.1668 550.137 56.5868 550.137 cv
57.0468 550.137 57.4368 550.207 57.7568 550.337 cv
58.0768 550.467 58.3368 550.647 58.5468 550.877 cv
58.7468 551.097 58.8968 551.357 58.9968 551.667 cv
59.0968 551.967 59.1468 552.287 59.1468 552.637 cv
cp
58.0768 552.517 mo
58.0868 552.017 57.9668 551.617 57.6968 551.327 cv
57.4368 551.037 57.0468 550.897 56.5368 550.897 cv
56.2768 550.897 56.0368 550.937 55.8468 551.027 cv
55.6468 551.117 55.4768 551.237 55.3468 551.387 cv
55.2068 551.537 55.1068 551.707 55.0368 551.907 cv
54.9568 552.097 54.9168 552.307 54.9068 552.517 cv
cp
65.9368 555.677 mo
65.9368 555.707 65.9268 555.727 65.9168 555.757 cv
65.8968 555.777 65.8668 555.797 65.8268 555.807 cv
65.7868 555.827 65.7368 555.837 65.6668 555.847 cv
65.5968 555.847 65.5168 555.857 65.4068 555.857 cv
65.3068 555.857 65.2168 555.847 65.1468 555.847 cv
65.0768 555.837 65.0268 555.827 64.9868 555.807 cv
64.9468 555.797 64.9168 555.777 64.8968 555.757 cv
64.8868 555.727 64.8768 555.707 64.8768 555.677 cv
64.8768 552.587 li
64.8768 552.287 64.8468 552.047 64.7968 551.857 cv
64.7468 551.677 64.6668 551.517 64.5768 551.387 cv
64.4768 551.257 64.3468 551.147 64.1868 551.077 cv
64.0268 551.007 63.8468 550.977 63.6468 550.977 cv
63.3768 550.977 63.1068 551.057 62.8468 551.237 cv
62.5768 551.407 62.2968 551.657 62.0068 551.987 cv
62.0068 555.677 li
62.0068 555.707 61.9968 555.727 61.9768 555.757 cv
61.9668 555.777 61.9368 555.797 61.8968 555.807 cv
61.8568 555.827 61.8068 555.837 61.7368 555.847 cv
61.6668 555.847 61.5768 555.857 61.4768 555.857 cv
61.3668 555.857 61.2868 555.847 61.2168 555.847 cv
61.1468 555.837 61.0868 555.827 61.0468 555.807 cv
61.0068 555.797 60.9768 555.777 60.9668 555.757 cv
60.9468 555.727 60.9468 555.707 60.9468 555.677 cv
60.9468 550.397 li
60.9468 550.367 60.9468 550.347 60.9668 550.317 cv
60.9768 550.297 60.9968 550.277 61.0368 550.267 cv
61.0768 550.247 61.1268 550.237 61.1868 550.227 cv
61.2468 550.217 61.3268 550.217 61.4268 550.217 cv
61.5168 550.217 61.5968 550.217 61.6668 550.227 cv
61.7268 550.237 61.7768 550.247 61.8068 550.267 cv
61.8368 550.277 61.8668 550.297 61.8768 550.317 cv
61.8968 550.347 61.9068 550.367 61.9068 550.397 cv
61.9068 551.097 li
62.2268 550.767 62.5568 550.527 62.8768 550.367 cv
63.2068 550.217 63.5368 550.137 63.8668 550.137 cv
64.2468 550.137 64.5768 550.197 64.8368 550.317 cv
65.1068 550.437 65.3168 550.597 65.4768 550.797 cv
65.6468 550.997 65.7568 551.227 65.8368 551.497 cv
65.9068 551.757 65.9368 552.087 65.9368 552.457 cv
cp
72.6668 555.677 mo
72.6668 555.707 72.6568 555.737 72.6368 555.757 cv
72.6268 555.777 72.5968 555.797 72.5668 555.807 cv
72.5268 555.827 72.4768 555.837 72.4168 555.847 cv
72.3568 555.847 72.2868 555.857 72.1968 555.857 cv
72.1068 555.857 72.0368 555.847 71.9768 555.847 cv
71.9168 555.837 71.8668 555.827 71.8268 555.807 cv
71.7868 555.797 71.7568 555.777 71.7368 555.757 cv
71.7268 555.737 71.7168 555.707 71.7168 555.677 cv
71.7168 554.977 li
71.4068 555.277 71.0968 555.507 70.7668 555.677 cv
70.4368 555.847 70.0768 555.927 69.6868 555.927 cv
69.2568 555.927 68.8968 555.857 68.5968 555.707 cv
68.2968 555.557 68.0468 555.357 67.8668 555.097 cv
67.6768 554.837 67.5368 554.537 67.4568 554.197 cv
67.3668 553.847 67.3268 553.487 67.3268 553.097 cv
67.3268 552.647 67.3768 552.237 67.4868 551.877 cv
67.5968 551.507 67.7568 551.197 67.9668 550.937 cv
68.1768 550.677 68.4368 550.487 68.7468 550.347 cv
69.0568 550.207 69.4168 550.137 69.8268 550.137 cv
70.1668 550.137 70.4768 550.207 70.7568 550.337 cv
71.0368 550.477 71.3168 550.667 71.5968 550.937 cv
71.5968 547.867 li
71.5968 547.837 71.5968 547.817 71.6168 547.787 cv
71.6268 547.767 71.6568 547.747 71.7068 547.727 cv
71.7468 547.717 71.7968 547.707 71.8668 547.697 cv
71.9368 547.687 72.0168 547.677 72.1168 547.677 cv
72.2268 547.677 72.3168 547.687 72.3868 547.697 cv
72.4568 547.707 72.5068 547.717 72.5468 547.727 cv
72.5868 547.747 72.6168 547.767 72.6368 547.787 cv
72.6568 547.817 72.6668 547.837 72.6668 547.867 cv
cp
71.5968 551.967 mo
71.3068 551.637 71.0268 551.397 70.7568 551.227 cv
70.4868 551.057 70.2068 550.967 69.9168 550.967 cv
69.6468 550.967 69.4168 551.027 69.2268 551.147 cv
69.0368 551.257 68.8868 551.417 68.7668 551.607 cv
68.6468 551.797 68.5668 552.017 68.5068 552.257 cv
68.4568 552.497 68.4268 552.747 68.4268 552.997 cv
68.4268 553.257 68.4468 553.517 68.4968 553.777 cv
68.5368 554.027 68.6168 554.257 68.7268 554.457 cv
68.8468 554.647 68.9868 554.807 69.1768 554.927 cv
69.3568 555.047 69.5968 555.107 69.8768 555.107 cv
70.0168 555.107 70.1468 555.087 70.2768 555.057 cv
70.4168 555.017 70.5468 554.957 70.6868 554.877 cv
70.8168 554.797 70.9668 554.687 71.1168 554.557 cv
71.2668 554.427 71.4268 554.267 71.5968 554.077 cv
cp
75.5068 555.677 mo
75.5068 555.707 75.4968 555.727 75.4768 555.757 cv
75.4668 555.777 75.4368 555.797 75.3968 555.807 cv
75.3568 555.827 75.3068 555.837 75.2368 555.847 cv
75.1668 555.847 75.0768 555.857 74.9768 555.857 cv
74.8668 555.857 74.7868 555.847 74.7168 555.847 cv
74.6468 555.837 74.5868 555.827 74.5468 555.807 cv
74.5068 555.797 74.4768 555.777 74.4668 555.757 cv
74.4468 555.727 74.4468 555.707 74.4468 555.677 cv
74.4468 550.397 li
74.4468 550.377 74.4468 550.347 74.4668 550.327 cv
74.4768 550.297 74.5068 550.277 74.5468 550.267 cv
74.5868 550.247 74.6468 550.237 74.7168 550.227 cv
74.7868 550.227 74.8668 550.217 74.9768 550.217 cv
75.0768 550.217 75.1668 550.227 75.2368 550.227 cv
75.3068 550.237 75.3568 550.247 75.3968 550.267 cv
75.4368 550.277 75.4668 550.297 75.4768 550.327 cv
75.4968 550.347 75.5068 550.377 75.5068 550.397 cv
cp
75.6268 548.617 mo
75.6268 548.847 75.5868 548.997 75.4868 549.087 cv
75.3968 549.167 75.2168 549.207 74.9668 549.207 cv
74.7168 549.207 74.5468 549.167 74.4568 549.087 cv
74.3568 549.007 74.3168 548.857 74.3168 548.627 cv
74.3168 548.407 74.3568 548.247 74.4568 548.167 cv
74.5468 548.087 74.7268 548.047 74.9768 548.047 cv
75.2268 548.047 75.3968 548.087 75.4868 548.167 cv
75.5868 548.247 75.6268 548.397 75.6268 548.617 cv
cp
82.4368 555.677 mo
82.4368 555.707 82.4268 555.727 82.4168 555.757 cv
82.3968 555.777 82.3668 555.797 82.3268 555.807 cv
82.2868 555.827 82.2368 555.837 82.1668 555.847 cv
82.0968 555.847 82.0168 555.857 81.9068 555.857 cv
81.8068 555.857 81.7168 555.847 81.6468 555.847 cv
81.5768 555.837 81.5268 555.827 81.4868 555.807 cv
81.4468 555.797 81.4168 555.777 81.3968 555.757 cv
81.3868 555.727 81.3768 555.707 81.3768 555.677 cv
81.3768 552.587 li
81.3768 552.287 81.3468 552.047 81.2968 551.857 cv
81.2468 551.677 81.1668 551.517 81.0768 551.387 cv
80.9768 551.257 80.8468 551.147 80.6868 551.077 cv
80.5268 551.007 80.3468 550.977 80.1468 550.977 cv
79.8768 550.977 79.6068 551.057 79.3468 551.237 cv
79.0768 551.407 78.7968 551.657 78.5068 551.987 cv
78.5068 555.677 li
78.5068 555.707 78.4968 555.727 78.4768 555.757 cv
78.4668 555.777 78.4368 555.797 78.3968 555.807 cv
78.3568 555.827 78.3068 555.837 78.2368 555.847 cv
78.1668 555.847 78.0768 555.857 77.9768 555.857 cv
77.8668 555.857 77.7868 555.847 77.7168 555.847 cv
77.6468 555.837 77.5868 555.827 77.5468 555.807 cv
77.5068 555.797 77.4768 555.777 77.4668 555.757 cv
77.4468 555.727 77.4468 555.707 77.4468 555.677 cv
77.4468 550.397 li
77.4468 550.367 77.4468 550.347 77.4668 550.317 cv
77.4768 550.297 77.4968 550.277 77.5368 550.267 cv
77.5768 550.247 77.6268 550.237 77.6868 550.227 cv
77.7468 550.217 77.8268 550.217 77.9268 550.217 cv
78.0168 550.217 78.0968 550.217 78.1668 550.227 cv
78.2268 550.237 78.2768 550.247 78.3068 550.267 cv
78.3368 550.277 78.3668 550.297 78.3768 550.317 cv
78.3968 550.347 78.4068 550.367 78.4068 550.397 cv
78.4068 551.097 li
78.7268 550.767 79.0568 550.527 79.3768 550.367 cv
79.7068 550.217 80.0368 550.137 80.3668 550.137 cv
80.7468 550.137 81.0768 550.197 81.3368 550.317 cv
81.6068 550.437 81.8168 550.597 81.9768 550.797 cv
82.1468 550.997 82.2568 551.227 82.3368 551.497 cv
82.4068 551.757 82.4368 552.087 82.4368 552.457 cv
cp
89.7868 550.637 mo
89.7868 550.777 89.7668 550.877 89.7268 550.937 cv
89.6868 550.997 89.6368 551.027 89.5668 551.027 cv
88.7368 551.027 li
88.8868 551.167 88.9968 551.327 89.0568 551.497 cv
89.1168 551.667 89.1468 551.837 89.1468 552.027 cv
89.1468 552.327 89.0968 552.597 88.9868 552.837 cv
88.8768 553.067 88.7268 553.267 88.5268 553.427 cv
88.3268 553.587 88.0868 553.717 87.8068 553.797 cv
87.5368 553.887 87.2268 553.927 86.8968 553.927 cv
86.6568 553.927 86.4368 553.897 86.2268 553.847 cv
86.0068 553.787 85.8468 553.717 85.7268 553.627 cv
85.6568 553.697 85.5868 553.777 85.5368 553.867 cv
85.4868 553.957 85.4668 554.067 85.4668 554.177 cv
85.4668 554.317 85.5368 554.427 85.6768 554.517 cv
85.8168 554.607 85.9968 554.657 86.2368 554.667 cv
87.7468 554.727 li
88.0368 554.737 88.2968 554.767 88.5368 554.837 cv
88.7768 554.897 88.9868 554.987 89.1668 555.107 cv
89.3368 555.227 89.4768 555.377 89.5768 555.547 cv
89.6768 555.717 89.7268 555.927 89.7268 556.157 cv
89.7268 556.397 89.6668 556.627 89.5568 556.847 cv
89.4468 557.067 89.2768 557.257 89.0468 557.427 cv
88.8168 557.587 88.5268 557.717 88.1668 557.817 cv
87.8068 557.907 87.3868 557.957 86.9068 557.957 cv
86.4368 557.957 86.0368 557.927 85.7068 557.847 cv
85.3768 557.777 85.1068 557.677 84.8968 557.557 cv
84.6868 557.427 84.5368 557.277 84.4368 557.107 cv
84.3468 556.937 84.2968 556.747 84.2968 556.537 cv
84.2968 556.417 84.3168 556.287 84.3468 556.167 cv
84.3868 556.047 84.4368 555.927 84.5068 555.817 cv
84.5768 555.707 84.6668 555.607 84.7768 555.507 cv
84.8768 555.407 84.9968 555.307 85.1368 555.207 cv
84.9268 555.117 84.7668 554.987 84.6668 554.837 cv
84.5668 554.697 84.5168 554.537 84.5168 554.357 cv
84.5168 554.127 84.5668 553.907 84.6768 553.727 cv
84.7868 553.537 84.9168 553.367 85.0768 553.217 cv
84.9468 553.077 84.8368 552.907 84.7668 552.727 cv
84.6868 552.547 84.6468 552.327 84.6468 552.067 cv
84.6468 551.767 84.7068 551.497 84.8168 551.257 cv
84.9268 551.027 85.0768 550.827 85.2768 550.657 cv
85.4768 550.497 85.7168 550.367 85.9868 550.277 cv
86.2668 550.197 86.5668 550.147 86.8968 550.147 cv
87.0768 550.147 87.2368 550.157 87.3868 550.177 cv
87.5468 550.197 87.6868 550.217 87.8168 550.247 cv
89.5668 550.247 li
89.6468 550.247 89.6968 550.277 89.7368 550.347 cv
89.7768 550.407 89.7868 550.507 89.7868 550.637 cv
cp
88.1268 552.027 mo
88.1268 551.667 88.0168 551.387 87.8068 551.187 cv
87.5868 550.987 87.2768 550.887 86.8768 550.887 cv
86.6668 550.887 86.4868 550.917 86.3368 550.977 cv
86.1868 551.047 86.0568 551.127 85.9568 551.237 cv
85.8568 551.347 85.7868 551.477 85.7368 551.617 cv
85.6868 551.757 85.6568 551.907 85.6568 552.067 cv
85.6568 552.417 85.7668 552.687 85.9868 552.887 cv
86.1968 553.087 86.5068 553.187 86.8968 553.187 cv
87.1068 553.187 87.2868 553.157 87.4468 553.097 cv
87.5968 553.037 87.7268 552.947 87.8268 552.837 cv
87.9268 552.737 88.0068 552.607 88.0568 552.467 cv
88.1068 552.327 88.1268 552.177 88.1268 552.027 cv
cp
88.6668 556.207 mo
88.6668 555.977 88.5568 555.807 88.3568 555.687 cv
88.1568 555.557 87.8768 555.497 87.5268 555.487 cv
86.0268 555.437 li
85.8868 555.537 85.7768 555.627 85.6868 555.717 cv
85.5968 555.807 85.5268 555.887 85.4768 555.967 cv
85.4268 556.047 85.3868 556.127 85.3768 556.207 cv
85.3568 556.287 85.3468 556.367 85.3468 556.447 cv
85.3468 556.697 85.4868 556.897 85.7668 557.027 cv
86.0568 557.157 86.4468 557.217 86.9568 557.217 cv
87.2768 557.217 87.5468 557.197 87.7668 557.137 cv
87.9768 557.077 88.1568 557.007 88.2868 556.907 cv
88.4168 556.817 88.5168 556.707 88.5768 556.587 cv
88.6368 556.467 88.6668 556.337 88.6668 556.207 cv
cp
98.3868 555.377 mo
98.3868 555.457 98.3868 555.527 98.3768 555.577 cv
98.3668 555.627 98.3568 555.677 98.3368 555.717 cv
98.3168 555.747 98.2968 555.777 98.2668 555.797 cv
98.2368 555.807 98.2068 555.817 98.1668 555.817 cv
94.4768 555.817 li
94.3768 555.817 94.2868 555.787 94.1968 555.727 cv
94.1068 555.667 94.0668 555.567 94.0668 555.407 cv
94.0668 548.387 li
94.0668 548.357 94.0768 548.337 94.0868 548.307 cv
94.1068 548.287 94.1368 548.267 94.1768 548.257 cv
94.2268 548.237 94.2868 548.227 94.3568 548.217 cv
94.4268 548.207 94.5168 548.207 94.6168 548.207 cv
94.7268 548.207 94.8168 548.207 94.8868 548.217 cv
94.9568 548.227 95.0168 548.237 95.0568 548.257 cv
95.0968 548.267 95.1268 548.287 95.1468 548.307 cv
95.1668 548.337 95.1768 548.357 95.1768 548.387 cv
95.1768 554.947 li
98.1668 554.947 li
98.2068 554.947 98.2368 554.957 98.2668 554.977 cv
98.2968 554.987 98.3168 555.017 98.3368 555.047 cv
98.3568 555.087 98.3668 555.127 98.3768 555.177 cv
98.3868 555.237 98.3868 555.307 98.3868 555.377 cv
cp
100.257 555.677 mo
100.257 555.707 100.247 555.727 100.227 555.757 cv
100.217 555.777 100.187 555.797 100.147 555.807 cv
100.107 555.827 100.057 555.837 99.9868 555.847 cv
99.9168 555.847 99.8268 555.857 99.7268 555.857 cv
99.6168 555.857 99.5368 555.847 99.4668 555.847 cv
99.3968 555.837 99.3368 555.827 99.2968 555.807 cv
99.2568 555.797 99.2268 555.777 99.2168 555.757 cv
99.1968 555.727 99.1968 555.707 99.1968 555.677 cv
99.1968 550.397 li
99.1968 550.377 99.1968 550.347 99.2168 550.327 cv
99.2268 550.297 99.2568 550.277 99.2968 550.267 cv
99.3368 550.247 99.3968 550.237 99.4668 550.227 cv
99.5368 550.227 99.6168 550.217 99.7268 550.217 cv
99.8268 550.217 99.9168 550.227 99.9868 550.227 cv
100.057 550.237 100.107 550.247 100.147 550.267 cv
100.187 550.277 100.217 550.297 100.227 550.327 cv
100.247 550.347 100.257 550.377 100.257 550.397 cv
cp
100.377 548.617 mo
100.377 548.847 100.337 548.997 100.237 549.087 cv
100.147 549.167 99.9668 549.207 99.7168 549.207 cv
99.4668 549.207 99.2968 549.167 99.2068 549.087 cv
99.1068 549.007 99.0668 548.857 99.0668 548.627 cv
99.0668 548.407 99.1068 548.247 99.2068 548.167 cv
99.2968 548.087 99.4768 548.047 99.7268 548.047 cv
99.9768 548.047 100.147 548.087 100.237 548.167 cv
100.337 548.247 100.377 548.397 100.377 548.617 cv
cp
105.837 554.237 mo
105.837 554.507 105.777 554.747 105.667 554.957 cv
105.557 555.167 105.407 555.347 105.207 555.497 cv
104.997 555.637 104.757 555.747 104.477 555.817 cv
104.207 555.897 103.897 555.927 103.557 555.927 cv
103.357 555.927 103.157 555.917 102.967 555.887 cv
102.787 555.857 102.617 555.817 102.467 555.777 cv
102.317 555.727 102.197 555.687 102.087 555.637 cv
101.987 555.587 101.917 555.547 101.867 555.507 cv
101.817 555.467 101.787 555.407 101.757 555.337 cv
101.737 555.267 101.727 555.177 101.727 555.057 cv
101.727 554.977 101.737 554.917 101.747 554.867 cv
101.747 554.817 101.757 554.777 101.777 554.747 cv
101.787 554.707 101.807 554.687 101.827 554.677 cv
101.857 554.657 101.877 554.657 101.907 554.657 cv
101.957 554.657 102.027 554.677 102.117 554.737 cv
102.207 554.787 102.327 554.847 102.457 554.907 cv
102.597 554.967 102.757 555.027 102.937 555.077 cv
103.127 555.127 103.337 555.157 103.577 555.157 cv
103.757 555.157 103.927 555.137 104.067 555.107 cv
104.217 555.067 104.337 555.017 104.447 554.947 cv
104.557 554.877 104.637 554.797 104.697 554.687 cv
104.757 554.587 104.787 554.457 104.787 554.317 cv
104.787 554.167 104.747 554.037 104.657 553.937 cv
104.577 553.837 104.467 553.747 104.327 553.667 cv
104.187 553.587 104.037 553.527 103.867 553.467 cv
103.687 553.397 103.517 553.337 103.327 553.267 cv
103.147 553.207 102.967 553.127 102.797 553.047 cv
102.627 552.967 102.467 552.857 102.327 552.737 cv
102.187 552.617 102.077 552.477 101.997 552.307 cv
101.917 552.137 101.867 551.937 101.867 551.697 cv
101.867 551.497 101.917 551.297 102.007 551.107 cv
102.087 550.917 102.227 550.747 102.397 550.607 cv
102.577 550.467 102.797 550.347 103.057 550.267 cv
103.327 550.177 103.637 550.137 103.987 550.137 cv
104.137 550.137 104.297 550.147 104.447 550.167 cv
104.607 550.197 104.747 550.227 104.867 550.257 cv
104.997 550.297 105.097 550.337 105.187 550.377 cv
105.277 550.417 105.347 550.447 105.387 550.487 cv
105.437 550.517 105.467 550.537 105.477 550.567 cv
105.497 550.587 105.507 550.617 105.507 550.647 cv
105.517 550.677 105.527 550.707 105.527 550.757 cv
105.537 550.797 105.537 550.847 105.537 550.907 cv
105.537 550.977 105.537 551.037 105.527 551.087 cv
105.527 551.127 105.507 551.167 105.497 551.207 cv
105.477 551.237 105.467 551.257 105.437 551.267 cv
105.417 551.287 105.397 551.287 105.367 551.287 cv
105.337 551.287 105.277 551.267 105.207 551.227 cv
105.127 551.187 105.037 551.137 104.917 551.087 cv
104.807 551.037 104.667 550.997 104.507 550.947 cv
104.357 550.907 104.177 550.887 103.977 550.887 cv
103.787 550.887 103.637 550.907 103.497 550.947 cv
103.357 550.977 103.247 551.037 103.157 551.097 cv
103.067 551.167 103.007 551.247 102.957 551.347 cv
102.917 551.437 102.887 551.537 102.887 551.647 cv
102.887 551.797 102.937 551.927 103.017 552.037 cv
103.107 552.137 103.217 552.227 103.357 552.307 cv
103.487 552.387 103.647 552.457 103.827 552.517 cv
103.997 552.577 104.177 552.647 104.367 552.707 cv
104.547 552.777 104.727 552.847 104.907 552.927 cv
105.087 553.017 105.237 553.117 105.377 553.227 cv
105.517 553.347 105.627 553.487 105.707 553.657 cv
105.797 553.817 105.837 554.007 105.837 554.237 cv
cp
110.457 555.287 mo
110.457 555.397 110.447 555.487 110.437 555.557 cv
110.417 555.627 110.387 555.667 110.357 555.707 cv
110.327 555.737 110.267 555.767 110.207 555.787 cv
110.137 555.817 110.057 555.837 109.967 555.857 cv
109.877 555.877 109.787 555.887 109.687 555.907 cv
109.587 555.917 109.487 555.917 109.387 555.917 cv
109.087 555.917 108.827 555.887 108.617 555.807 cv
108.397 555.737 108.227 555.627 108.087 555.487 cv
107.947 555.337 107.847 555.147 107.787 554.927 cv
107.727 554.707 107.697 554.437 107.697 554.137 cv
107.697 551.047 li
106.887 551.047 li
106.817 551.047 106.767 551.017 106.727 550.957 cv
106.687 550.897 106.667 550.797 106.667 550.657 cv
106.667 550.577 106.677 550.517 106.687 550.467 cv
106.697 550.417 106.707 550.377 106.727 550.337 cv
106.747 550.307 106.767 550.287 106.797 550.267 cv
106.827 550.257 106.857 550.247 106.887 550.247 cv
107.697 550.247 li
107.697 548.997 li
107.697 548.967 107.707 548.937 107.717 548.917 cv
107.737 548.897 107.757 548.877 107.797 548.857 cv
107.847 548.837 107.897 548.827 107.967 548.817 cv
108.037 548.807 108.117 548.807 108.227 548.807 cv
108.327 548.807 108.417 548.807 108.487 548.817 cv
108.557 548.827 108.607 548.837 108.647 548.857 cv
108.687 548.877 108.717 548.897 108.737 548.917 cv
108.747 548.937 108.757 548.967 108.757 548.997 cv
108.757 550.247 li
110.247 550.247 li
110.277 550.247 110.307 550.257 110.337 550.267 cv
110.367 550.287 110.387 550.307 110.407 550.337 cv
110.427 550.377 110.437 550.417 110.447 550.467 cv
110.457 550.517 110.457 550.577 110.457 550.657 cv
110.457 550.797 110.437 550.897 110.397 550.957 cv
110.367 551.017 110.307 551.047 110.247 551.047 cv
108.757 551.047 li
108.757 553.997 li
108.757 554.357 108.817 554.627 108.937 554.817 cv
109.057 554.997 109.267 555.097 109.567 555.097 cv
109.667 555.097 109.757 555.087 109.837 555.067 cv
109.917 555.047 109.977 555.027 110.037 555.007 cv
110.097 554.997 110.157 554.977 110.197 554.957 cv
110.237 554.937 110.277 554.927 110.307 554.927 cv
110.337 554.927 110.357 554.937 110.377 554.947 cv
110.397 554.957 110.407 554.977 110.417 554.997 cv
110.427 555.027 110.437 555.067 110.447 555.107 cv
110.457 555.157 110.457 555.217 110.457 555.287 cv
cp
f
40.0568 527.577 mo
441.307 527.577 li
441.307 470.506 li
40.0568 470.506 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
40.0568 527.577 mo
441.307 527.577 li
441.307 470.506 li
40.0568 470.506 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
52.7268 485.797 mo
52.7268 485.857 52.7268 485.907 52.7268 485.957 cv
52.7168 486.007 52.7068 486.047 52.6968 486.077 cv
52.6868 486.117 52.6768 486.147 52.6568 486.177 cv
52.6368 486.197 52.6068 486.237 52.5668 486.277 cv
52.5268 486.317 52.4368 486.377 52.2968 486.457 cv
52.1568 486.537 51.9868 486.607 51.7868 486.687 cv
51.5768 486.767 51.3468 486.827 51.0868 486.877 cv
50.8168 486.937 50.5268 486.957 50.2168 486.957 cv
49.6768 486.957 49.1868 486.877 48.7468 486.717 cv
48.3168 486.547 47.9468 486.307 47.6368 485.987 cv
47.3268 485.667 47.0868 485.267 46.9268 484.797 cv
46.7568 484.327 46.6768 483.787 46.6768 483.177 cv
46.6768 482.547 46.7668 481.987 46.9468 481.497 cv
47.1268 480.997 47.3768 480.587 47.6968 480.237 cv
48.0168 479.897 48.4068 479.637 48.8568 479.457 cv
49.2968 479.277 49.7968 479.187 50.3468 479.187 cv
50.5868 479.187 50.8168 479.207 51.0468 479.247 cv
51.2768 479.297 51.4868 479.347 51.6768 479.407 cv
51.8768 479.467 52.0468 479.537 52.1968 479.627 cv
52.3468 479.707 52.4468 479.777 52.5068 479.827 cv
52.5668 479.877 52.6068 479.917 52.6168 479.947 cv
52.6368 479.977 52.6468 480.007 52.6668 480.047 cv
52.6768 480.077 52.6768 480.127 52.6868 480.177 cv
52.6968 480.227 52.6968 480.287 52.6968 480.357 cv
52.6968 480.437 52.6968 480.497 52.6868 480.557 cv
52.6768 480.607 52.6668 480.657 52.6468 480.697 cv
52.6268 480.727 52.6068 480.757 52.5868 480.777 cv
52.5568 480.797 52.5268 480.797 52.4968 480.797 cv
52.4368 480.797 52.3568 480.767 52.2468 480.687 cv
52.1368 480.607 51.9968 480.527 51.8268 480.437 cv
51.6568 480.347 51.4468 480.257 51.2068 480.187 cv
50.9568 480.107 50.6668 480.067 50.3268 480.067 cv
49.9568 480.067 49.6168 480.137 49.3068 480.267 cv
49.0068 480.407 48.7468 480.607 48.5268 480.867 cv
48.3168 481.127 48.1468 481.447 48.0268 481.827 cv
47.9068 482.197 47.8468 482.627 47.8468 483.117 cv
47.8468 483.597 47.9068 484.017 48.0268 484.387 cv
48.1368 484.757 48.2968 485.067 48.5168 485.317 cv
48.7268 485.567 48.9868 485.747 49.3068 485.877 cv
49.6168 486.007 49.9668 486.067 50.3568 486.067 cv
50.6868 486.067 50.9768 486.027 51.2268 485.957 cv
51.4768 485.887 51.6868 485.797 51.8668 485.707 cv
52.0368 485.617 52.1868 485.537 52.2968 485.457 cv
52.4068 485.387 52.4968 485.347 52.5568 485.347 cv
52.5868 485.347 52.6168 485.357 52.6368 485.367 cv
52.6568 485.377 52.6768 485.397 52.6868 485.437 cv
52.7068 485.467 52.7168 485.517 52.7168 485.567 cv
52.7268 485.627 52.7268 485.707 52.7268 485.797 cv
cp
58.7568 486.717 mo
58.7568 486.747 58.7468 486.777 58.7368 486.797 cv
58.7168 486.817 58.6968 486.837 58.6568 486.857 cv
58.6168 486.867 58.5668 486.877 58.5068 486.887 cv
58.4368 486.897 58.3668 486.897 58.2768 486.897 cv
58.1768 486.897 58.0968 486.897 58.0368 486.887 cv
57.9668 486.877 57.9168 486.867 57.8868 486.857 cv
57.8468 486.837 57.8268 486.817 57.8068 486.797 cv
57.7968 486.777 57.7868 486.747 57.7868 486.717 cv
57.7868 486.027 li
57.4568 486.357 57.1368 486.597 56.8068 486.747 cv
56.4868 486.897 56.1668 486.977 55.8268 486.977 cv
55.4468 486.977 55.1168 486.917 54.8568 486.797 cv
54.5868 486.687 54.3768 486.527 54.2168 486.327 cv
54.0468 486.127 53.9368 485.887 53.8668 485.617 cv
53.7868 485.357 53.7568 485.027 53.7568 484.647 cv
53.7568 481.447 li
53.7568 481.417 53.7668 481.387 53.7768 481.367 cv
53.7968 481.347 53.8268 481.327 53.8668 481.307 cv
53.9068 481.287 53.9668 481.277 54.0368 481.277 cv
54.1068 481.267 54.1868 481.267 54.2868 481.267 cv
54.3968 481.267 54.4768 481.267 54.5468 481.277 cv
54.6168 481.277 54.6768 481.287 54.7168 481.307 cv
54.7568 481.327 54.7868 481.347 54.7968 481.367 cv
54.8168 481.387 54.8268 481.417 54.8268 481.447 cv
54.8268 484.517 li
54.8268 484.827 54.8468 485.067 54.8968 485.257 cv
54.9468 485.447 55.0268 485.597 55.1268 485.737 cv
55.2268 485.867 55.3568 485.967 55.5068 486.037 cv
55.6668 486.107 55.8468 486.147 56.0468 486.147 cv
56.3168 486.147 56.5868 486.057 56.8468 485.887 cv
57.1068 485.717 57.3868 485.467 57.6868 485.127 cv
57.6868 481.447 li
57.6868 481.417 57.6968 481.387 57.7068 481.367 cv
57.7268 481.347 57.7568 481.327 57.7968 481.307 cv
57.8368 481.287 57.8968 481.277 57.9568 481.277 cv
58.0268 481.267 58.1168 481.267 58.2268 481.267 cv
58.3268 481.267 58.4168 481.267 58.4768 481.277 cv
58.5468 481.277 58.6068 481.287 58.6368 481.307 cv
58.6768 481.327 58.7068 481.347 58.7268 481.367 cv
58.7468 481.387 58.7568 481.417 58.7568 481.447 cv
cp
64.6768 481.787 mo
64.6768 481.877 64.6768 481.947 64.6768 482.007 cv
64.6668 482.067 64.6568 482.117 64.6468 482.147 cv
64.6368 482.177 64.6168 482.207 64.5968 482.227 cv
64.5768 482.237 64.5568 482.247 64.5168 482.247 cv
64.4868 482.247 64.4368 482.237 64.3968 482.227 cv
64.3468 482.207 64.2868 482.187 64.2268 482.167 cv
64.1668 482.147 64.0968 482.137 64.0168 482.117 cv
63.9368 482.107 63.8568 482.097 63.7668 482.097 cv
63.6568 482.097 63.5468 482.117 63.4468 482.157 cv
63.3468 482.197 63.2368 482.257 63.1268 482.347 cv
63.0068 482.437 62.8868 482.557 62.7668 482.707 cv
62.6368 482.857 62.5068 483.037 62.3568 483.247 cv
62.3568 486.717 li
62.3568 486.747 62.3468 486.777 62.3268 486.797 cv
62.3068 486.817 62.2768 486.837 62.2468 486.857 cv
62.2068 486.867 62.1468 486.877 62.0768 486.887 cv
62.0168 486.897 61.9268 486.897 61.8168 486.897 cv
61.7168 486.897 61.6268 486.897 61.5568 486.887 cv
61.4868 486.877 61.4368 486.867 61.3968 486.857 cv
61.3568 486.837 61.3268 486.817 61.3068 486.797 cv
61.2968 486.777 61.2868 486.747 61.2868 486.717 cv
61.2868 481.447 li
61.2868 481.417 61.2968 481.387 61.3068 481.367 cv
61.3168 481.347 61.3468 481.327 61.3868 481.307 cv
61.4268 481.287 61.4768 481.277 61.5368 481.277 cv
61.5968 481.267 61.6768 481.267 61.7668 481.267 cv
61.8668 481.267 61.9468 481.267 62.0068 481.277 cv
62.0668 481.277 62.1168 481.287 62.1568 481.307 cv
62.1868 481.327 62.2068 481.347 62.2268 481.367 cv
62.2368 481.387 62.2468 481.417 62.2468 481.447 cv
62.2468 482.217 li
62.4068 482.007 62.5568 481.827 62.6968 481.697 cv
62.8368 481.567 62.9668 481.457 63.0968 481.387 cv
63.2168 481.307 63.3368 481.257 63.4668 481.227 cv
63.5868 481.197 63.7068 481.187 63.8368 481.187 cv
63.8868 481.187 63.9568 481.187 64.0268 481.187 cv
64.0968 481.197 64.1668 481.207 64.2468 481.227 cv
64.3268 481.237 64.3968 481.257 64.4568 481.277 cv
64.5168 481.297 64.5668 481.317 64.5868 481.337 cv
64.6168 481.357 64.6268 481.377 64.6368 481.387 cv
64.6468 481.407 64.6568 481.427 64.6668 481.457 cv
64.6668 481.487 64.6768 481.527 64.6768 481.577 cv
64.6768 481.627 64.6768 481.697 64.6768 481.787 cv
cp
69.1768 481.787 mo
69.1768 481.877 69.1768 481.947 69.1768 482.007 cv
69.1668 482.067 69.1568 482.117 69.1468 482.147 cv
69.1368 482.177 69.1168 482.207 69.0968 482.227 cv
69.0768 482.237 69.0568 482.247 69.0168 482.247 cv
68.9868 482.247 68.9368 482.237 68.8968 482.227 cv
68.8468 482.207 68.7868 482.187 68.7268 482.167 cv
68.6668 482.147 68.5968 482.137 68.5168 482.117 cv
68.4368 482.107 68.3568 482.097 68.2668 482.097 cv
68.1568 482.097 68.0468 482.117 67.9468 482.157 cv
67.8468 482.197 67.7368 482.257 67.6268 482.347 cv
67.5068 482.437 67.3868 482.557 67.2668 482.707 cv
67.1368 482.857 67.0068 483.037 66.8568 483.247 cv
66.8568 486.717 li
66.8568 486.747 66.8468 486.777 66.8268 486.797 cv
66.8068 486.817 66.7768 486.837 66.7468 486.857 cv
66.7068 486.867 66.6468 486.877 66.5768 486.887 cv
66.5168 486.897 66.4268 486.897 66.3168 486.897 cv
66.2168 486.897 66.1268 486.897 66.0568 486.887 cv
65.9868 486.877 65.9368 486.867 65.8968 486.857 cv
65.8568 486.837 65.8268 486.817 65.8068 486.797 cv
65.7968 486.777 65.7868 486.747 65.7868 486.717 cv
65.7868 481.447 li
65.7868 481.417 65.7968 481.387 65.8068 481.367 cv
65.8168 481.347 65.8468 481.327 65.8868 481.307 cv
65.9268 481.287 65.9768 481.277 66.0368 481.277 cv
66.0968 481.267 66.1768 481.267 66.2668 481.267 cv
66.3668 481.267 66.4468 481.267 66.5068 481.277 cv
66.5668 481.277 66.6168 481.287 66.6568 481.307 cv
66.6868 481.327 66.7068 481.347 66.7268 481.367 cv
66.7368 481.387 66.7468 481.417 66.7468 481.447 cv
66.7468 482.217 li
66.9068 482.007 67.0568 481.827 67.1968 481.697 cv
67.3368 481.567 67.4668 481.457 67.5968 481.387 cv
67.7168 481.307 67.8368 481.257 67.9668 481.227 cv
68.0868 481.197 68.2068 481.187 68.3368 481.187 cv
68.3868 481.187 68.4568 481.187 68.5268 481.187 cv
68.5968 481.197 68.6668 481.207 68.7468 481.227 cv
68.8268 481.237 68.8968 481.257 68.9568 481.277 cv
69.0168 481.297 69.0668 481.317 69.0868 481.337 cv
69.1168 481.357 69.1268 481.377 69.1368 481.387 cv
69.1468 481.407 69.1568 481.427 69.1668 481.457 cv
69.1668 481.487 69.1768 481.527 69.1768 481.577 cv
69.1768 481.627 69.1768 481.697 69.1768 481.787 cv
cp
75.2368 483.857 mo
75.2368 484.007 75.1968 484.117 75.1168 484.177 cv
75.0268 484.247 74.9368 484.277 74.8268 484.277 cv
71.0068 484.277 li
71.0068 484.567 71.0368 484.837 71.0968 485.067 cv
71.1668 485.297 71.2768 485.507 71.4268 485.667 cv
71.5768 485.837 71.7768 485.967 72.0168 486.057 cv
72.2568 486.147 72.5468 486.197 72.8968 486.197 cv
73.1768 486.197 73.4268 486.167 73.6368 486.127 cv
73.8568 486.087 74.0468 486.047 74.1968 485.997 cv
74.3568 485.947 74.4868 485.897 74.5868 485.857 cv
74.6868 485.817 74.7668 485.797 74.8168 485.797 cv
74.8468 485.797 74.8768 485.797 74.8968 485.817 cv
74.9268 485.827 74.9368 485.847 74.9568 485.877 cv
74.9668 485.907 74.9768 485.937 74.9868 485.987 cv
74.9868 486.037 74.9968 486.097 74.9968 486.167 cv
74.9968 486.217 74.9868 486.267 74.9868 486.297 cv
74.9868 486.337 74.9768 486.367 74.9668 486.397 cv
74.9668 486.427 74.9568 486.457 74.9368 486.477 cv
74.9268 486.507 74.9068 486.527 74.8768 486.547 cv
74.8568 486.567 74.7868 486.607 74.6668 486.647 cv
74.5568 486.697 74.4068 486.747 74.2168 486.797 cv
74.0368 486.847 73.8168 486.887 73.5768 486.917 cv
73.3368 486.957 73.0768 486.977 72.8068 486.977 cv
72.3268 486.977 71.9068 486.917 71.5468 486.797 cv
71.1868 486.677 70.8868 486.497 70.6468 486.257 cv
70.3968 486.017 70.2168 485.717 70.0868 485.357 cv
69.9668 484.997 69.8968 484.587 69.8968 484.107 cv
69.8968 483.657 69.9668 483.247 70.0968 482.887 cv
70.2268 482.527 70.4068 482.217 70.6568 481.967 cv
70.8968 481.717 71.1868 481.517 71.5368 481.387 cv
71.8768 481.247 72.2568 481.187 72.6868 481.187 cv
73.1368 481.187 73.5268 481.247 73.8468 481.377 cv
74.1668 481.517 74.4368 481.697 74.6368 481.917 cv
74.8468 482.147 74.9968 482.407 75.0968 482.707 cv
75.1868 483.007 75.2368 483.337 75.2368 483.677 cv
cp
74.1668 483.567 mo
74.1768 483.057 74.0568 482.657 73.7968 482.367 cv
73.5368 482.087 73.1468 481.937 72.6268 481.937 cv
72.3668 481.937 72.1368 481.987 71.9368 482.077 cv
71.7368 482.167 71.5768 482.277 71.4368 482.427 cv
71.3068 482.577 71.1968 482.747 71.1268 482.947 cv
71.0568 483.147 71.0168 483.357 71.0068 483.567 cv
cp
82.0368 486.717 mo
82.0368 486.747 82.0268 486.777 82.0068 486.797 cv
81.9868 486.817 81.9668 486.837 81.9268 486.857 cv
81.8868 486.867 81.8268 486.877 81.7668 486.887 cv
81.6968 486.897 81.6068 486.897 81.5068 486.897 cv
81.3968 486.897 81.3068 486.897 81.2368 486.887 cv
81.1768 486.877 81.1168 486.867 81.0768 486.857 cv
81.0368 486.837 81.0168 486.817 80.9968 486.797 cv
80.9768 486.777 80.9668 486.747 80.9668 486.717 cv
80.9668 483.627 li
80.9668 483.327 80.9468 483.087 80.8968 482.907 cv
80.8368 482.717 80.7668 482.567 80.6668 482.427 cv
80.5668 482.297 80.4368 482.197 80.2868 482.127 cv
80.1268 482.057 79.9468 482.017 79.7368 482.017 cv
79.4768 482.017 79.2068 482.107 78.9368 482.277 cv
78.6768 482.447 78.3968 482.697 78.1068 483.037 cv
78.1068 486.717 li
78.1068 486.747 78.0968 486.777 78.0768 486.797 cv
78.0568 486.817 78.0268 486.837 77.9968 486.857 cv
77.9568 486.867 77.8968 486.877 77.8268 486.887 cv
77.7668 486.897 77.6768 486.897 77.5668 486.897 cv
77.4668 486.897 77.3768 486.897 77.3068 486.887 cv
77.2368 486.877 77.1868 486.867 77.1468 486.857 cv
77.1068 486.837 77.0768 486.817 77.0568 486.797 cv
77.0468 486.777 77.0368 486.747 77.0368 486.717 cv
77.0368 481.447 li
77.0368 481.417 77.0468 481.387 77.0568 481.367 cv
77.0668 481.347 77.0968 481.327 77.1368 481.307 cv
77.1768 481.287 77.2268 481.277 77.2868 481.277 cv
77.3468 481.267 77.4268 481.267 77.5168 481.267 cv
77.6168 481.267 77.6968 481.267 77.7568 481.277 cv
77.8168 481.277 77.8668 481.287 77.9068 481.307 cv
77.9368 481.327 77.9568 481.347 77.9768 481.367 cv
77.9868 481.387 77.9968 481.417 77.9968 481.447 cv
77.9968 482.147 li
78.3268 481.807 78.6468 481.567 78.9768 481.417 cv
79.2968 481.257 79.6268 481.187 79.9568 481.187 cv
80.3468 481.187 80.6668 481.237 80.9368 481.357 cv
81.1968 481.477 81.4168 481.637 81.5768 481.837 cv
81.7368 482.037 81.8568 482.267 81.9268 482.537 cv
81.9968 482.807 82.0368 483.127 82.0368 483.507 cv
cp
86.8068 486.337 mo
86.8068 486.447 86.7968 486.537 86.7768 486.607 cv
86.7668 486.667 86.7368 486.717 86.6968 486.747 cv
86.6668 486.777 86.6168 486.807 86.5468 486.837 cv
86.4768 486.867 86.3968 486.887 86.3068 486.907 cv
86.2268 486.917 86.1268 486.937 86.0268 486.947 cv
85.9368 486.957 85.8368 486.967 85.7368 486.967 cv
85.4368 486.967 85.1768 486.927 84.9568 486.857 cv
84.7468 486.787 84.5668 486.677 84.4368 486.527 cv
84.2968 486.387 84.1968 486.197 84.1368 485.977 cv
84.0668 485.747 84.0368 485.487 84.0368 485.177 cv
84.0368 482.097 li
83.2268 482.097 li
83.1668 482.097 83.1068 482.067 83.0768 482.007 cv
83.0368 481.937 83.0168 481.837 83.0168 481.697 cv
83.0168 481.627 83.0168 481.557 83.0268 481.507 cv
83.0368 481.457 83.0568 481.417 83.0768 481.387 cv
83.0868 481.347 83.1168 481.327 83.1368 481.317 cv
83.1668 481.297 83.1968 481.297 83.2368 481.297 cv
84.0368 481.297 li
84.0368 480.037 li
84.0368 480.017 84.0468 479.987 84.0668 479.967 cv
84.0768 479.937 84.1068 479.917 84.1468 479.897 cv
84.1868 479.887 84.2368 479.867 84.3068 479.867 cv
84.3768 479.857 84.4668 479.857 84.5668 479.857 cv
84.6768 479.857 84.7668 479.857 84.8368 479.867 cv
84.8968 479.867 84.9568 479.887 84.9968 479.897 cv
85.0368 479.917 85.0568 479.937 85.0768 479.967 cv
85.0968 479.987 85.1068 480.017 85.1068 480.037 cv
85.1068 481.297 li
86.5968 481.297 li
86.6268 481.297 86.6568 481.297 86.6868 481.317 cv
86.7068 481.327 86.7268 481.347 86.7468 481.387 cv
86.7668 481.417 86.7868 481.457 86.7968 481.507 cv
86.7968 481.557 86.8068 481.627 86.8068 481.697 cv
86.8068 481.837 86.7868 481.937 86.7468 482.007 cv
86.7068 482.067 86.6568 482.097 86.5968 482.097 cv
85.1068 482.097 li
85.1068 485.037 li
85.1068 485.397 85.1668 485.677 85.2768 485.857 cv
85.3968 486.047 85.6068 486.137 85.9168 486.137 cv
86.0168 486.137 86.1068 486.127 86.1768 486.117 cv
86.2568 486.097 86.3268 486.077 86.3868 486.057 cv
86.4468 486.037 86.4968 486.017 86.5368 485.997 cv
86.5868 485.987 86.6268 485.977 86.6568 485.977 cv
86.6768 485.977 86.6968 485.977 86.7168 485.987 cv
86.7368 485.997 86.7568 486.017 86.7668 486.047 cv
86.7768 486.077 86.7868 486.107 86.7968 486.157 cv
86.7968 486.207 86.8068 486.267 86.8068 486.337 cv
cp
97.4168 486.717 mo
97.4168 486.747 97.4068 486.777 97.3968 486.797 cv
97.3768 486.817 97.3468 486.837 97.3068 486.847 cv
97.2568 486.867 97.2068 486.877 97.1268 486.887 cv
97.0568 486.897 96.9768 486.897 96.8668 486.897 cv
96.7568 486.897 96.6668 486.897 96.5968 486.887 cv
96.5268 486.877 96.4768 486.867 96.4268 486.847 cv
96.3868 486.837 96.3568 486.817 96.3368 486.797 cv
96.3268 486.777 96.3168 486.747 96.3168 486.717 cv
96.3168 483.347 li
92.5168 483.347 li
92.5168 486.717 li
92.5168 486.747 92.5068 486.777 92.4968 486.797 cv
92.4768 486.817 92.4468 486.837 92.4068 486.847 cv
92.3568 486.867 92.3068 486.877 92.2368 486.887 cv
92.1568 486.897 92.0768 486.897 91.9668 486.897 cv
91.8668 486.897 91.7768 486.897 91.6968 486.887 cv
91.6268 486.877 91.5668 486.867 91.5268 486.847 cv
91.4868 486.837 91.4568 486.817 91.4368 486.797 cv
91.4168 486.777 91.4068 486.747 91.4068 486.717 cv
91.4068 479.437 li
91.4068 479.407 91.4168 479.377 91.4368 479.357 cv
91.4568 479.327 91.4868 479.317 91.5268 479.297 cv
91.5668 479.287 91.6268 479.277 91.6968 479.267 cv
91.7768 479.257 91.8668 479.247 91.9668 479.247 cv
92.0768 479.247 92.1568 479.257 92.2368 479.267 cv
92.3068 479.277 92.3568 479.287 92.4068 479.297 cv
92.4468 479.317 92.4768 479.327 92.4968 479.357 cv
92.5068 479.377 92.5168 479.407 92.5168 479.437 cv
92.5168 482.467 li
96.3168 482.467 li
96.3168 479.437 li
96.3168 479.407 96.3268 479.377 96.3368 479.357 cv
96.3568 479.327 96.3868 479.317 96.4268 479.297 cv
96.4768 479.287 96.5268 479.277 96.5968 479.267 cv
96.6668 479.257 96.7568 479.247 96.8668 479.247 cv
96.9768 479.247 97.0568 479.257 97.1268 479.267 cv
97.2068 479.277 97.2568 479.287 97.3068 479.297 cv
97.3468 479.317 97.3768 479.327 97.3968 479.357 cv
97.4068 479.377 97.4168 479.407 97.4168 479.437 cv
cp
104.137 484.737 mo
104.137 485.097 104.067 485.407 103.927 485.687 cv
103.777 485.967 103.577 486.197 103.327 486.397 cv
103.067 486.587 102.767 486.737 102.427 486.827 cv
102.077 486.927 101.707 486.977 101.307 486.977 cv
101.027 486.977 100.767 486.957 100.527 486.917 cv
100.287 486.867 100.077 486.817 99.8868 486.757 cv
99.7068 486.697 99.5468 486.627 99.4168 486.557 cv
99.2968 486.497 99.2068 486.437 99.1568 486.387 cv
99.1068 486.347 99.0668 486.287 99.0468 486.217 cv
99.0168 486.137 99.0068 486.047 99.0068 485.927 cv
99.0068 485.837 99.0168 485.767 99.0268 485.707 cv
99.0268 485.647 99.0468 485.607 99.0568 485.567 cv
99.0768 485.537 99.0968 485.507 99.1268 485.497 cv
99.1468 485.487 99.1768 485.477 99.2168 485.477 cv
99.2768 485.477 99.3568 485.507 99.4668 485.577 cv
99.5768 485.647 99.7168 485.717 99.8968 485.797 cv
100.067 485.867 100.277 485.947 100.517 486.017 cv
100.757 486.077 101.037 486.117 101.357 486.117 cv
101.597 486.117 101.817 486.087 102.017 486.027 cv
102.217 485.967 102.387 485.887 102.537 485.777 cv
102.677 485.667 102.787 485.537 102.867 485.387 cv
102.937 485.227 102.977 485.047 102.977 484.847 cv
102.977 484.637 102.927 484.447 102.817 484.297 cv
102.707 484.147 102.567 484.017 102.397 483.897 cv
102.217 483.787 102.017 483.677 101.787 483.577 cv
101.567 483.487 101.337 483.387 101.097 483.287 cv
100.867 483.187 100.637 483.077 100.407 482.957 cv
100.187 482.837 99.9868 482.697 99.8068 482.527 cv
99.6368 482.367 99.4868 482.177 99.3768 481.957 cv
99.2668 481.727 99.2168 481.467 99.2168 481.157 cv
99.2168 480.847 99.2768 480.557 99.4068 480.317 cv
99.5368 480.067 99.7068 479.857 99.9368 479.687 cv
100.157 479.517 100.427 479.397 100.737 479.307 cv
101.057 479.217 101.387 479.177 101.747 479.177 cv
101.937 479.177 102.117 479.187 102.307 479.217 cv
102.497 479.247 102.667 479.287 102.837 479.337 cv
102.997 479.387 103.147 479.437 103.277 479.497 cv
103.407 479.557 103.487 479.607 103.527 479.647 cv
103.577 479.677 103.597 479.707 103.617 479.727 cv
103.627 479.757 103.637 479.777 103.647 479.817 cv
103.657 479.847 103.657 479.887 103.667 479.937 cv
103.667 479.977 103.667 480.037 103.667 480.117 cv
103.667 480.187 103.667 480.247 103.657 480.307 cv
103.657 480.357 103.647 480.407 103.627 480.437 cv
103.617 480.477 103.597 480.507 103.577 480.527 cv
103.557 480.537 103.527 480.547 103.497 480.547 cv
103.447 480.547 103.377 480.527 103.277 480.467 cv
103.177 480.417 103.047 480.347 102.907 480.287 cv
102.757 480.217 102.587 480.147 102.387 480.097 cv
102.187 480.037 101.957 480.007 101.707 480.007 cv
101.477 480.007 101.277 480.037 101.107 480.097 cv
100.937 480.147 100.787 480.227 100.677 480.317 cv
100.567 480.417 100.487 480.527 100.427 480.657 cv
100.377 480.787 100.347 480.917 100.347 481.067 cv
100.347 481.277 100.397 481.457 100.507 481.607 cv
100.617 481.767 100.757 481.897 100.937 482.017 cv
101.117 482.127 101.317 482.237 101.547 482.337 cv
101.767 482.437 102.007 482.537 102.237 482.637 cv
102.477 482.727 102.707 482.837 102.937 482.957 cv
103.167 483.077 103.367 483.217 103.547 483.387 cv
103.727 483.547 103.867 483.737 103.977 483.957 cv
104.087 484.177 104.137 484.437 104.137 484.737 cv
cp
110.137 484.737 mo
110.137 485.097 110.067 485.407 109.927 485.687 cv
109.777 485.967 109.577 486.197 109.327 486.397 cv
109.067 486.587 108.767 486.737 108.427 486.827 cv
108.077 486.927 107.707 486.977 107.307 486.977 cv
107.027 486.977 106.767 486.957 106.527 486.917 cv
106.287 486.867 106.077 486.817 105.887 486.757 cv
105.707 486.697 105.547 486.627 105.417 486.557 cv
105.297 486.497 105.207 486.437 105.157 486.387 cv
105.107 486.347 105.067 486.287 105.047 486.217 cv
105.017 486.137 105.007 486.047 105.007 485.927 cv
105.007 485.837 105.017 485.767 105.027 485.707 cv
105.027 485.647 105.047 485.607 105.057 485.567 cv
105.077 485.537 105.097 485.507 105.127 485.497 cv
105.147 485.487 105.177 485.477 105.217 485.477 cv
105.277 485.477 105.357 485.507 105.467 485.577 cv
105.577 485.647 105.717 485.717 105.897 485.797 cv
106.067 485.867 106.277 485.947 106.517 486.017 cv
106.757 486.077 107.037 486.117 107.357 486.117 cv
107.597 486.117 107.817 486.087 108.017 486.027 cv
108.217 485.967 108.387 485.887 108.537 485.777 cv
108.677 485.667 108.787 485.537 108.867 485.387 cv
108.937 485.227 108.977 485.047 108.977 484.847 cv
108.977 484.637 108.927 484.447 108.817 484.297 cv
108.707 484.147 108.567 484.017 108.397 483.897 cv
108.217 483.787 108.017 483.677 107.787 483.577 cv
107.567 483.487 107.337 483.387 107.097 483.287 cv
106.867 483.187 106.637 483.077 106.407 482.957 cv
106.187 482.837 105.987 482.697 105.807 482.527 cv
105.637 482.367 105.487 482.177 105.377 481.957 cv
105.267 481.727 105.217 481.467 105.217 481.157 cv
105.217 480.847 105.277 480.557 105.407 480.317 cv
105.537 480.067 105.707 479.857 105.937 479.687 cv
106.157 479.517 106.427 479.397 106.737 479.307 cv
107.057 479.217 107.387 479.177 107.747 479.177 cv
107.937 479.177 108.117 479.187 108.307 479.217 cv
108.497 479.247 108.667 479.287 108.837 479.337 cv
108.997 479.387 109.147 479.437 109.277 479.497 cv
109.407 479.557 109.487 479.607 109.527 479.647 cv
109.577 479.677 109.597 479.707 109.617 479.727 cv
109.627 479.757 109.637 479.777 109.647 479.817 cv
109.657 479.847 109.657 479.887 109.667 479.937 cv
109.667 479.977 109.667 480.037 109.667 480.117 cv
109.667 480.187 109.667 480.247 109.657 480.307 cv
109.657 480.357 109.647 480.407 109.627 480.437 cv
109.617 480.477 109.597 480.507 109.577 480.527 cv
109.557 480.537 109.527 480.547 109.497 480.547 cv
109.447 480.547 109.377 480.527 109.277 480.467 cv
109.177 480.417 109.047 480.347 108.907 480.287 cv
108.757 480.217 108.587 480.147 108.387 480.097 cv
108.187 480.037 107.957 480.007 107.707 480.007 cv
107.477 480.007 107.277 480.037 107.107 480.097 cv
106.937 480.147 106.787 480.227 106.677 480.317 cv
106.567 480.417 106.487 480.527 106.427 480.657 cv
106.377 480.787 106.347 480.917 106.347 481.067 cv
106.347 481.277 106.397 481.457 106.507 481.607 cv
106.617 481.767 106.757 481.897 106.937 482.017 cv
107.117 482.127 107.317 482.237 107.547 482.337 cv
107.767 482.437 108.007 482.537 108.237 482.637 cv
108.477 482.727 108.707 482.837 108.937 482.957 cv
109.167 483.077 109.367 483.217 109.547 483.387 cv
109.727 483.547 109.867 483.737 109.977 483.957 cv
110.087 484.177 110.137 484.437 110.137 484.737 cv
cp
f
2.33984 665.527 mo
450.21 665.527 li
450.21 615.659 li
2.33984 615.659 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
2.33984 665.527 mo
450.21 665.527 li
450.21 615.659 li
2.33984 615.659 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
2.33984 665.527 mo
27.8518 665.527 li
27.8518 615.659 li
2.33984 615.659 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
2.33984 665.527 mo
27.8518 665.527 li
27.8518 615.659 li
2.33984 615.659 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
17.6268 649.977 mo
17.6868 649.977 17.7368 649.977 17.7868 649.977 cv
17.8368 649.987 17.8768 649.987 17.9068 649.997 cv
17.9468 650.017 17.9768 650.027 18.0068 650.047 cv
18.0268 650.057 18.0668 650.087 18.1068 650.137 cv
18.1468 650.177 18.2068 650.267 18.2868 650.407 cv
18.3668 650.547 18.4368 650.717 18.5168 650.917 cv
18.5968 651.117 18.6568 651.357 18.7068 651.617 cv
18.7668 651.887 18.7868 652.177 18.7868 652.487 cv
18.7868 653.027 18.7068 653.517 18.5468 653.957 cv
18.3768 654.387 18.1368 654.757 17.8168 655.067 cv
17.4968 655.377 17.0968 655.607 16.6268 655.777 cv
16.1568 655.947 15.6168 656.027 15.0068 656.027 cv
14.3768 656.027 13.8168 655.937 13.3268 655.757 cv
12.8268 655.577 12.4168 655.327 12.0668 655.007 cv
11.7268 654.687 11.4668 654.297 11.2868 653.847 cv
11.1068 653.397 11.0168 652.907 11.0168 652.357 cv
11.0168 652.117 11.0368 651.887 11.0768 651.657 cv
11.1268 651.427 11.1768 651.217 11.2368 651.027 cv
11.2968 650.827 11.3668 650.657 11.4568 650.507 cv
11.5368 650.357 11.6068 650.257 11.6568 650.197 cv
11.7068 650.137 11.7468 650.097 11.7768 650.087 cv
11.8068 650.067 11.8368 650.047 11.8768 650.037 cv
11.9068 650.027 11.9568 650.017 12.0068 650.017 cv
12.0568 650.007 12.1168 650.007 12.1868 650.007 cv
12.2668 650.007 12.3268 650.007 12.3868 650.017 cv
12.4368 650.027 12.4868 650.037 12.5268 650.057 cv
12.5568 650.077 12.5868 650.097 12.6068 650.117 cv
12.6268 650.147 12.6268 650.167 12.6268 650.207 cv
12.6268 650.267 12.5968 650.347 12.5168 650.457 cv
12.4368 650.567 12.3568 650.707 12.2668 650.877 cv
12.1768 651.047 12.0868 651.257 12.0168 651.497 cv
11.9368 651.747 11.8968 652.037 11.8968 652.377 cv
11.8968 652.747 11.9668 653.087 12.0968 653.387 cv
12.2368 653.697 12.4368 653.957 12.6968 654.167 cv
12.9568 654.387 13.2768 654.557 13.6568 654.677 cv
14.0268 654.797 14.4568 654.857 14.9468 654.857 cv
15.4268 654.857 15.8468 654.797 16.2168 654.677 cv
16.5868 654.567 16.8968 654.397 17.1468 654.187 cv
17.3968 653.977 17.5768 653.707 17.7068 653.397 cv
17.8368 653.087 17.8968 652.737 17.8968 652.347 cv
17.8968 652.007 17.8568 651.717 17.7868 651.477 cv
17.7168 651.227 17.6268 651.017 17.5368 650.837 cv
17.4468 650.667 17.3668 650.517 17.2868 650.407 cv
17.2168 650.297 17.1768 650.207 17.1768 650.137 cv
17.1768 650.107 17.1868 650.087 17.1968 650.067 cv
17.2068 650.047 17.2268 650.027 17.2668 650.007 cv
17.2968 649.997 17.3468 649.987 17.3968 649.987 cv
17.4568 649.977 17.5368 649.977 17.6268 649.977 cv
cp
18.5468 643.917 mo
18.5768 643.917 18.6068 643.927 18.6268 643.947 cv
18.6468 643.957 18.6668 643.987 18.6868 644.027 cv
18.6968 644.067 18.7068 644.117 18.7168 644.187 cv
18.7268 644.257 18.7268 644.347 18.7268 644.447 cv
18.7268 644.557 18.7268 644.647 18.7168 644.707 cv
18.7068 644.777 18.6968 644.837 18.6868 644.877 cv
18.6668 644.907 18.6468 644.937 18.6268 644.957 cv
18.6068 644.977 18.5768 644.987 18.5468 644.987 cv
15.4568 644.987 li
15.1568 644.987 14.9168 645.007 14.7368 645.057 cv
14.5468 645.107 14.3968 645.187 14.2568 645.287 cv
14.1268 645.387 14.0268 645.517 13.9568 645.667 cv
13.8868 645.827 13.8468 646.007 13.8468 646.217 cv
13.8468 646.477 13.9368 646.747 14.1068 647.017 cv
14.2768 647.277 14.5268 647.557 14.8668 647.847 cv
18.5468 647.847 li
18.5768 647.847 18.6068 647.857 18.6268 647.877 cv
18.6468 647.897 18.6668 647.917 18.6868 647.957 cv
18.6968 647.997 18.7068 648.057 18.7168 648.117 cv
18.7268 648.187 18.7268 648.277 18.7268 648.387 cv
18.7268 648.487 18.7268 648.577 18.7168 648.647 cv
18.7068 648.717 18.6968 648.767 18.6868 648.807 cv
18.6668 648.847 18.6468 648.877 18.6268 648.887 cv
18.6068 648.907 18.5768 648.917 18.5468 648.917 cv
10.7168 648.917 li
10.6868 648.917 10.6668 648.907 10.6368 648.887 cv
10.6168 648.877 10.5968 648.847 10.5768 648.807 cv
10.5668 648.767 10.5568 648.717 10.5468 648.647 cv
10.5368 648.577 10.5368 648.487 10.5368 648.387 cv
10.5368 648.277 10.5368 648.187 10.5468 648.117 cv
10.5568 648.057 10.5668 647.997 10.5768 647.957 cv
10.5968 647.917 10.6168 647.897 10.6368 647.877 cv
10.6668 647.857 10.6868 647.847 10.7168 647.847 cv
13.8768 647.847 li
13.5868 647.547 13.3668 647.237 13.2268 646.927 cv
13.0868 646.617 13.0168 646.307 13.0168 645.997 cv
13.0168 645.607 13.0668 645.287 13.1868 645.017 cv
13.3068 644.757 13.4668 644.537 13.6668 644.377 cv
13.8668 644.217 14.0968 644.097 14.3668 644.027 cv
14.6368 643.957 14.9568 643.917 15.3368 643.917 cv
cp
15.6868 636.467 mo
15.8368 636.467 15.9468 636.507 16.0068 636.587 cv
16.0768 636.677 16.1068 636.767 16.1068 636.877 cv
16.1068 640.697 li
16.3968 640.697 16.6668 640.667 16.8968 640.597 cv
17.1268 640.537 17.3368 640.427 17.4968 640.277 cv
17.6668 640.127 17.7968 639.927 17.8868 639.687 cv
17.9768 639.447 18.0168 639.147 18.0168 638.797 cv
18.0168 638.527 17.9968 638.277 17.9568 638.067 cv
17.9168 637.847 17.8768 637.657 17.8268 637.507 cv
17.7668 637.347 17.7268 637.217 17.6868 637.117 cv
17.6468 637.017 17.6268 636.937 17.6268 636.887 cv
17.6268 636.857 17.6268 636.827 17.6468 636.807 cv
17.6568 636.777 17.6768 636.757 17.7068 636.747 cv
17.7368 636.737 17.7668 636.727 17.8168 636.717 cv
17.8668 636.717 17.9268 636.707 17.9968 636.707 cv
18.0468 636.707 18.0968 636.707 18.1268 636.717 cv
18.1668 636.717 18.1968 636.727 18.2268 636.727 cv
18.2568 636.737 18.2868 636.747 18.3068 636.767 cv
18.3368 636.777 18.3568 636.797 18.3768 636.817 cv
18.3968 636.847 18.4368 636.917 18.4768 637.027 cv
18.5268 637.147 18.5768 637.297 18.6268 637.487 cv
18.6768 637.667 18.7168 637.877 18.7468 638.127 cv
18.7868 638.367 18.8068 638.627 18.8068 638.897 cv
18.8068 639.377 18.7468 639.797 18.6268 640.157 cv
18.5068 640.517 18.3268 640.817 18.0868 641.057 cv
17.8468 641.307 17.5468 641.487 17.1868 641.617 cv
16.8268 641.737 16.4168 641.797 15.9368 641.797 cv
15.4868 641.797 15.0768 641.737 14.7168 641.607 cv
14.3568 641.477 14.0468 641.297 13.7968 641.047 cv
13.5468 640.807 13.3468 640.517 13.2168 640.167 cv
13.0768 639.827 13.0168 639.437 13.0168 639.017 cv
13.0168 638.557 13.0768 638.177 13.2068 637.857 cv
13.3468 637.537 13.5268 637.267 13.7468 637.067 cv
13.9768 636.857 14.2368 636.707 14.5368 636.607 cv
14.8368 636.517 15.1668 636.467 15.5068 636.467 cv
cp
15.3968 637.537 mo
14.8868 637.517 14.4868 637.647 14.1968 637.907 cv
13.9168 638.167 13.7668 638.557 13.7668 639.067 cv
13.7668 639.337 13.8168 639.567 13.9068 639.767 cv
13.9968 639.967 14.1068 640.127 14.2568 640.267 cv
14.4068 640.397 14.5768 640.507 14.7768 640.577 cv
14.9768 640.647 15.1868 640.687 15.3968 640.697 cv
cp
17.7468 631.247 mo
17.8168 631.247 17.8668 631.247 17.9168 631.247 cv
17.9668 631.257 18.0068 631.267 18.0468 631.277 cv
18.0768 631.287 18.1068 631.297 18.1268 631.307 cv
18.1568 631.327 18.1968 631.357 18.2368 631.417 cv
18.2868 631.467 18.3468 631.557 18.4268 631.687 cv
18.4968 631.817 18.5568 631.967 18.6168 632.127 cv
18.6768 632.287 18.7168 632.457 18.7568 632.647 cv
18.7868 632.837 18.8068 633.037 18.8068 633.237 cv
18.8068 633.657 18.7468 634.017 18.6168 634.347 cv
18.4968 634.667 18.3068 634.937 18.0668 635.157 cv
17.8268 635.367 17.5368 635.537 17.1868 635.647 cv
16.8368 635.767 16.4368 635.817 15.9768 635.817 cv
15.4568 635.817 15.0068 635.747 14.6368 635.607 cv
14.2668 635.467 13.9568 635.277 13.7168 635.037 cv
13.4868 634.797 13.3068 634.507 13.1868 634.177 cv
13.0768 633.847 13.0168 633.497 13.0168 633.117 cv
13.0168 632.927 13.0368 632.747 13.0668 632.577 cv
13.0968 632.397 13.1368 632.237 13.1868 632.097 cv
13.2368 631.947 13.2968 631.817 13.3668 631.707 cv
13.4268 631.587 13.4868 631.507 13.5368 631.457 cv
13.5768 631.407 13.6168 631.367 13.6468 631.347 cv
13.6768 631.327 13.7068 631.317 13.7368 631.307 cv
13.7768 631.287 13.8168 631.277 13.8668 631.277 cv
13.9168 631.267 13.9768 631.267 14.0468 631.267 cv
14.1968 631.267 14.3068 631.287 14.3668 631.327 cv
14.4268 631.367 14.4568 631.417 14.4568 631.467 cv
14.4568 631.537 14.4168 631.607 14.3568 631.697 cv
14.2968 631.777 14.2168 631.887 14.1468 632.007 cv
14.0668 632.137 13.9968 632.297 13.9268 632.477 cv
13.8668 632.657 13.8368 632.877 13.8368 633.127 cv
13.8368 633.637 14.0068 634.027 14.3668 634.307 cv
14.7268 634.577 15.2468 634.707 15.9268 634.707 cv
16.2668 634.707 16.5568 634.677 16.8168 634.607 cv
17.0768 634.537 17.2868 634.427 17.4568 634.297 cv
17.6268 634.157 17.7568 633.987 17.8468 633.787 cv
17.9268 633.587 17.9668 633.357 17.9668 633.097 cv
17.9668 632.857 17.9368 632.637 17.8668 632.457 cv
17.7968 632.267 17.7168 632.107 17.6368 631.977 cv
17.5468 631.837 17.4768 631.727 17.4068 631.637 cv
17.3368 631.537 17.2968 631.467 17.2968 631.417 cv
17.2968 631.387 17.3068 631.367 17.3268 631.337 cv
17.3368 631.317 17.3668 631.297 17.4068 631.287 cv
17.4368 631.267 17.4868 631.257 17.5468 631.257 cv
17.5968 631.247 17.6668 631.247 17.7468 631.247 cv
cp
18.5468 624.647 mo
18.5768 624.647 18.6068 624.657 18.6268 624.677 cv
18.6468 624.697 18.6668 624.727 18.6868 624.767 cv
18.6968 624.807 18.7068 624.857 18.7168 624.937 cv
18.7268 625.007 18.7268 625.097 18.7268 625.207 cv
18.7268 625.327 18.7268 625.427 18.7268 625.497 cv
18.7168 625.577 18.7068 625.637 18.6968 625.687 cv
18.6768 625.737 18.6568 625.787 18.6368 625.817 cv
18.6068 625.847 18.5768 625.877 18.5468 625.897 cv
15.6268 628.347 li
18.5468 628.347 li
18.5768 628.347 18.6068 628.357 18.6268 628.377 cv
18.6468 628.397 18.6668 628.417 18.6868 628.457 cv
18.6968 628.497 18.7068 628.557 18.7168 628.617 cv
18.7268 628.687 18.7268 628.777 18.7268 628.887 cv
18.7268 628.987 18.7268 629.077 18.7168 629.147 cv
18.7068 629.217 18.6968 629.267 18.6868 629.307 cv
18.6668 629.347 18.6468 629.377 18.6268 629.387 cv
18.6068 629.407 18.5768 629.417 18.5468 629.417 cv
10.7168 629.417 li
10.6868 629.417 10.6668 629.407 10.6368 629.387 cv
10.6168 629.377 10.5968 629.347 10.5768 629.307 cv
10.5668 629.267 10.5568 629.217 10.5468 629.147 cv
10.5368 629.077 10.5368 628.987 10.5368 628.887 cv
10.5368 628.777 10.5368 628.687 10.5468 628.617 cv
10.5568 628.557 10.5668 628.497 10.5768 628.457 cv
10.5968 628.417 10.6168 628.397 10.6368 628.377 cv
10.6668 628.357 10.6868 628.347 10.7168 628.347 cv
15.4868 628.347 li
13.2968 626.157 li
13.2568 626.127 13.2268 626.087 13.2068 626.047 cv
13.1768 626.007 13.1568 625.967 13.1368 625.907 cv
13.1168 625.857 13.1068 625.797 13.1068 625.717 cv
13.0968 625.647 13.0968 625.557 13.0968 625.457 cv
13.0968 625.347 13.0968 625.257 13.1068 625.187 cv
13.1068 625.117 13.1168 625.057 13.1368 625.007 cv
13.1468 624.967 13.1668 624.927 13.1868 624.917 cv
13.2068 624.897 13.2368 624.887 13.2668 624.887 cv
13.3168 624.887 13.3668 624.897 13.4068 624.927 cv
13.4568 624.957 13.5168 624.997 13.5768 625.067 cv
15.4868 627.167 li
18.2668 624.807 li
18.3368 624.747 18.3868 624.707 18.4268 624.687 cv
18.4668 624.667 18.5068 624.647 18.5468 624.647 cv
cp
f
UOQDFG+CourierNewPSMT*1 [9.75 0 0 -9.75 0 0 ]msf
44.1768 443.897 mo
({)sh
50.1768 443.897 mo
(\()sh
56.2068 443.897 mo
(p)sh
UOQDFG+CourierNewPSMT*1 [6.775 0 0 -6.775 0 0 ]msf
62.2068 445.277 mo
(2)sh
UOQDFG+CourierNewPSMT*1 [9.75 0 0 -9.75 0 0 ]msf
66.1068 443.897 mo
(, )
[6.00006 0 ]xsh
78.1068 443.897 mo
(1)sh
84.1268 443.897 mo
(\))sh
90.1268 443.897 mo
(,)sh
96.1268 443.897 mo
(\()sh
102.127 443.897 mo
(p)sh
UOQDFG+CourierNewPSMT*1 [6.775 0 0 -6.775 0 0 ]msf
108.147 445.277 mo
(3)sh
UOQDFG+CourierNewPSMT*1 [9.75 0 0 -9.75 0 0 ]msf
112.047 443.897 mo
(, )
[6.00006 0 ]xsh
124.057 443.897 mo
(1)sh
130.077 443.897 mo
(\))sh
136.077 443.897 mo
(})sh
UOQDFG+CourierNewPSMT*1 [9.775 0 0 -9.775 0 0 ]msf
44.5768 584.177 mo
({)sh
50.5968 584.177 mo
(\()sh
56.6068 584.177 mo
(p)sh
UOQDFG+CourierNewPSMT*1 [6.75 0 0 -6.75 0 0 ]msf
62.6068 585.577 mo
(3)sh
UOQDFG+CourierNewPSMT*1 [9.775 0 0 -9.775 0 0 ]msf
66.5068 584.177 mo
(, )
[6.00006 0 ]xsh
78.5268 584.177 mo
(1)sh
84.5268 584.177 mo
(\))sh
90.5268 584.177 mo
(})sh
44.1768 515.177 mo
({)sh
50.1768 515.177 mo
(\()sh
56.2068 515.177 mo
(p)sh
UOQDFG+CourierNewPSMT*1 [6.75 0 0 -6.75 0 0 ]msf
62.2068 516.577 mo
(2)sh
UOQDFG+CourierNewPSMT*1 [9.775 0 0 -9.775 0 0 ]msf
66.1068 515.177 mo
(, )
[6.00006 0 ]xsh
78.1068 515.177 mo
(1)sh
84.1268 515.177 mo
(\))sh
90.1268 515.177 mo
(})sh
40.4768 645.457 mo
({)sh
46.4768 645.457 mo
(\()sh
52.5068 645.457 mo
(p)sh
UOQDFG+CourierNewPSMT*1 [6.75 0 0 -6.75 0 0 ]msf
58.5068 646.847 mo
(3)sh
UOQDFG+CourierNewPSMT*1 [9.775 0 0 -9.775 0 0 ]msf
62.3968 645.457 mo
(, )
[6.00006 0 ]xsh
74.3968 645.457 mo
(1)sh
80.4268 645.457 mo
(\))sh
86.4268 645.457 mo
(})sh
UOQDFG+CourierNewPSMT*1 [9.75 0 0 -9.75 0 0 ]msf
394.407 642.647 mo
(pass)
[6.00006 6.00006 6.00006 0 ]xsh
42.4268 256.277 mo
441.707 256.277 li
441.707 126.757 li
42.4268 126.757 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
42.4268 256.277 mo
441.707 256.277 li
441.707 126.757 li
42.4268 126.757 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
54.6668 137.757 mo
54.6668 138.137 54.5968 138.477 54.4568 138.777 cv
54.3168 139.087 54.1168 139.347 53.8668 139.557 cv
53.6068 139.777 53.2968 139.937 52.9268 140.057 cv
52.5568 140.177 52.1068 140.237 51.5968 140.237 cv
50.6468 140.237 li
50.6468 142.967 li
50.6468 142.997 50.6368 143.027 50.6168 143.047 cv
50.5968 143.067 50.5668 143.087 50.5268 143.107 cv
50.4868 143.117 50.4268 143.127 50.3568 143.137 cv
50.2868 143.147 50.1968 143.157 50.0968 143.157 cv
49.9868 143.157 49.8968 143.147 49.8268 143.137 cv
49.7568 143.127 49.6968 143.117 49.6568 143.107 cv
49.6068 143.087 49.5768 143.067 49.5668 143.047 cv
49.5468 143.027 49.5368 142.997 49.5368 142.967 cv
49.5368 135.967 li
49.5368 135.817 49.5868 135.697 49.6768 135.637 cv
49.7668 135.567 49.8668 135.537 49.9768 135.537 cv
51.7568 135.537 li
51.9468 135.537 52.1168 135.547 52.2768 135.557 cv
52.4468 135.567 52.6368 135.597 52.8668 135.647 cv
53.0968 135.687 53.3268 135.777 53.5568 135.897 cv
53.7868 136.017 53.9868 136.167 54.1568 136.347 cv
54.3168 136.527 54.4368 136.737 54.5268 136.977 cv
54.6168 137.207 54.6668 137.467 54.6668 137.757 cv
cp
53.4968 137.837 mo
53.4968 137.527 53.4368 137.267 53.3068 137.067 cv
53.1768 136.857 53.0168 136.707 52.8368 136.597 cv
52.6468 136.497 52.4568 136.437 52.2568 136.407 cv
52.0568 136.377 51.8568 136.367 51.6668 136.367 cv
50.6468 136.367 li
50.6468 139.407 li
51.6468 139.407 li
51.9768 139.407 52.2568 139.367 52.4768 139.287 cv
52.6968 139.217 52.8868 139.107 53.0368 138.967 cv
53.1868 138.827 53.3068 138.657 53.3768 138.467 cv
53.4568 138.277 53.4968 138.067 53.4968 137.837 cv
cp
61.1168 140.107 mo
61.1168 140.257 61.0768 140.367 60.9868 140.427 cv
60.9068 140.497 60.8068 140.527 60.6968 140.527 cv
56.8768 140.527 li
56.8768 140.817 56.9168 141.087 56.9768 141.317 cv
57.0468 141.557 57.1468 141.757 57.3068 141.927 cv
57.4568 142.087 57.6468 142.217 57.8868 142.307 cv
58.1368 142.397 58.4268 142.447 58.7768 142.447 cv
59.0568 142.447 59.2968 142.427 59.5168 142.387 cv
59.7368 142.337 59.9168 142.297 60.0768 142.247 cv
60.2368 142.197 60.3668 142.147 60.4668 142.107 cv
60.5668 142.067 60.6468 142.047 60.6968 142.047 cv
60.7268 142.047 60.7568 142.047 60.7768 142.067 cv
60.7968 142.077 60.8168 142.097 60.8268 142.127 cv
60.8468 142.157 60.8568 142.197 60.8568 142.237 cv
60.8668 142.287 60.8668 142.347 60.8668 142.417 cv
60.8668 142.467 60.8668 142.517 60.8668 142.547 cv
60.8568 142.587 60.8568 142.627 60.8468 142.647 cv
60.8368 142.677 60.8268 142.707 60.8168 142.727 cv
60.7968 142.757 60.7768 142.777 60.7568 142.797 cv
60.7368 142.817 60.6668 142.857 60.5468 142.907 cv
60.4368 142.957 60.2868 142.997 60.0968 143.047 cv
59.9168 143.097 59.6968 143.137 59.4568 143.177 cv
59.2168 143.207 58.9568 143.227 58.6768 143.227 cv
58.2068 143.227 57.7868 143.167 57.4268 143.047 cv
57.0668 142.927 56.7668 142.747 56.5168 142.507 cv
56.2768 142.267 56.0868 141.967 55.9668 141.607 cv
55.8368 141.257 55.7768 140.837 55.7768 140.357 cv
55.7768 139.907 55.8468 139.497 55.9768 139.137 cv
56.0968 138.777 56.2868 138.467 56.5268 138.217 cv
56.7768 137.967 57.0668 137.767 57.4068 137.637 cv
57.7568 137.497 58.1368 137.437 58.5668 137.437 cv
59.0168 137.437 59.4068 137.497 59.7268 137.637 cv
60.0468 137.767 60.3068 137.947 60.5168 138.167 cv
60.7268 138.397 60.8768 138.657 60.9668 138.957 cv
61.0668 139.267 61.1168 139.587 61.1168 139.927 cv
cp
60.0468 139.817 mo
60.0568 139.307 59.9368 138.917 59.6768 138.627 cv
59.4068 138.337 59.0268 138.187 58.5068 138.187 cv
58.2468 138.187 58.0168 138.237 57.8168 138.327 cv
57.6168 138.417 57.4468 138.537 57.3168 138.677 cv
57.1768 138.827 57.0768 139.007 57.0068 139.197 cv
56.9268 139.397 56.8868 139.607 56.8768 139.817 cv
cp
67.9068 142.967 mo
67.9068 143.007 67.9068 143.027 67.8868 143.047 cv
67.8668 143.067 67.8368 143.087 67.7968 143.107 cv
67.7668 143.117 67.7068 143.137 67.6368 143.137 cv
67.5668 143.147 67.4868 143.157 67.3868 143.157 cv
67.2768 143.157 67.1868 143.147 67.1168 143.137 cv
67.0468 143.137 66.9968 143.117 66.9568 143.107 cv
66.9168 143.087 66.8868 143.067 66.8768 143.047 cv
66.8568 143.027 66.8468 143.007 66.8468 142.967 cv
66.8468 139.887 li
66.8468 139.587 66.8168 139.337 66.7668 139.157 cv
66.7168 138.977 66.6468 138.817 66.5468 138.677 cv
66.4468 138.547 66.3168 138.447 66.1568 138.377 cv
66.0068 138.307 65.8268 138.267 65.6168 138.267 cv
65.3468 138.267 65.0868 138.357 64.8168 138.527 cv
64.5468 138.697 64.2668 138.957 63.9768 139.287 cv
63.9768 142.967 li
63.9768 143.007 63.9668 143.027 63.9568 143.047 cv
63.9368 143.067 63.9068 143.087 63.8668 143.107 cv
63.8268 143.117 63.7768 143.137 63.7068 143.137 cv
63.6368 143.147 63.5468 143.157 63.4468 143.157 cv
63.3368 143.157 63.2568 143.147 63.1868 143.137 cv
63.1168 143.137 63.0668 143.117 63.0168 143.107 cv
62.9768 143.087 62.9568 143.067 62.9368 143.047 cv
62.9268 143.027 62.9168 143.007 62.9168 142.967 cv
62.9168 137.697 li
62.9168 137.667 62.9268 137.637 62.9368 137.617 cv
62.9468 137.597 62.9768 137.577 63.0168 137.557 cv
63.0468 137.547 63.0968 137.527 63.1568 137.527 cv
63.2168 137.517 63.2968 137.517 63.3968 137.517 cv
63.4968 137.517 63.5668 137.517 63.6368 137.527 cv
63.6968 137.527 63.7468 137.547 63.7768 137.557 cv
63.8168 137.577 63.8368 137.597 63.8568 137.617 cv
63.8668 137.637 63.8768 137.667 63.8768 137.697 cv
63.8768 138.397 li
64.2068 138.067 64.5268 137.817 64.8568 137.667 cv
65.1768 137.507 65.5068 137.437 65.8368 137.437 cv
66.2268 137.437 66.5468 137.497 66.8068 137.617 cv
67.0768 137.727 67.2868 137.887 67.4568 138.087 cv
67.6168 138.287 67.7368 138.527 67.8068 138.787 cv
67.8768 139.057 67.9068 139.377 67.9068 139.757 cv
cp
74.6368 142.967 mo
74.6368 143.007 74.6268 143.027 74.6168 143.057 cv
74.5968 143.077 74.5668 143.097 74.5368 143.107 cv
74.4968 143.127 74.4468 143.137 74.3868 143.137 cv
74.3268 143.147 74.2568 143.157 74.1668 143.157 cv
74.0768 143.157 74.0068 143.147 73.9468 143.137 cv
73.8868 143.137 73.8368 143.127 73.7968 143.107 cv
73.7568 143.097 73.7268 143.077 73.7168 143.057 cv
73.6968 143.027 73.6868 143.007 73.6868 142.967 cv
73.6868 142.277 li
73.3868 142.577 73.0668 142.807 72.7368 142.977 cv
72.4068 143.147 72.0468 143.227 71.6568 143.227 cv
71.2268 143.227 70.8668 143.157 70.5668 143.007 cv
70.2668 142.857 70.0268 142.647 69.8368 142.397 cv
69.6468 142.137 69.5168 141.837 69.4268 141.487 cv
69.3368 141.147 69.2968 140.777 69.2968 140.397 cv
69.2968 139.947 69.3468 139.537 69.4568 139.167 cv
69.5668 138.807 69.7268 138.497 69.9368 138.237 cv
70.1468 137.977 70.4068 137.777 70.7168 137.637 cv
71.0268 137.507 71.3868 137.437 71.7968 137.437 cv
72.1368 137.437 72.4468 137.497 72.7268 137.637 cv
73.0068 137.767 73.2868 137.967 73.5668 138.227 cv
73.5668 135.167 li
73.5668 135.137 73.5768 135.117 73.5868 135.087 cv
73.6068 135.057 73.6268 135.047 73.6768 135.027 cv
73.7168 135.017 73.7768 135.007 73.8368 134.997 cv
73.9068 134.987 73.9868 134.977 74.0968 134.977 cv
74.1968 134.977 74.2868 134.987 74.3568 134.997 cv
74.4268 135.007 74.4768 135.017 74.5168 135.027 cv
74.5568 135.047 74.5868 135.057 74.6068 135.087 cv
74.6268 135.117 74.6368 135.137 74.6368 135.167 cv
cp
73.5668 139.257 mo
73.2768 138.937 72.9968 138.687 72.7268 138.517 cv
72.4568 138.347 72.1768 138.267 71.8868 138.267 cv
71.6168 138.267 71.3868 138.327 71.1968 138.437 cv
71.0068 138.557 70.8568 138.717 70.7368 138.907 cv
70.6168 139.097 70.5368 139.317 70.4768 139.557 cv
70.4268 139.797 70.3968 140.047 70.3968 140.297 cv
70.3968 140.557 70.4268 140.817 70.4668 141.077 cv
70.5168 141.327 70.5868 141.547 70.7068 141.747 cv
70.8168 141.947 70.9668 142.107 71.1468 142.227 cv
71.3368 142.347 71.5668 142.407 71.8468 142.407 cv
71.9868 142.407 72.1268 142.387 72.2568 142.347 cv
72.3868 142.317 72.5168 142.257 72.6568 142.177 cv
72.7968 142.097 72.9368 141.987 73.0868 141.857 cv
73.2368 141.727 73.3968 141.567 73.5668 141.367 cv
cp
77.4768 142.967 mo
77.4768 143.007 77.4668 143.027 77.4568 143.047 cv
77.4368 143.067 77.4068 143.087 77.3668 143.107 cv
77.3268 143.117 77.2768 143.137 77.2068 143.137 cv
77.1368 143.147 77.0468 143.157 76.9468 143.157 cv
76.8368 143.157 76.7568 143.147 76.6868 143.137 cv
76.6168 143.137 76.5668 143.117 76.5168 143.107 cv
76.4768 143.087 76.4568 143.067 76.4368 143.047 cv
76.4268 143.027 76.4168 143.007 76.4168 142.967 cv
76.4168 137.697 li
76.4168 137.667 76.4268 137.647 76.4368 137.617 cv
76.4568 137.597 76.4768 137.577 76.5168 137.567 cv
76.5668 137.547 76.6168 137.537 76.6868 137.527 cv
76.7568 137.517 76.8368 137.517 76.9468 137.517 cv
77.0468 137.517 77.1368 137.517 77.2068 137.527 cv
77.2768 137.537 77.3268 137.547 77.3668 137.567 cv
77.4068 137.577 77.4368 137.597 77.4568 137.617 cv
77.4668 137.647 77.4768 137.667 77.4768 137.697 cv
cp
77.5968 135.917 mo
77.5968 136.147 77.5568 136.297 77.4568 136.377 cv
77.3668 136.457 77.1868 136.507 76.9368 136.507 cv
76.6868 136.507 76.5168 136.467 76.4268 136.387 cv
76.3368 136.297 76.2868 136.147 76.2868 135.927 cv
76.2868 135.697 76.3368 135.547 76.4268 135.467 cv
76.5268 135.387 76.6968 135.337 76.9468 135.337 cv
77.1968 135.337 77.3668 135.387 77.4668 135.467 cv
77.5568 135.547 77.5968 135.697 77.5968 135.917 cv
cp
84.4068 142.967 mo
84.4068 143.007 84.4068 143.027 84.3868 143.047 cv
84.3668 143.067 84.3368 143.087 84.2968 143.107 cv
84.2668 143.117 84.2068 143.137 84.1368 143.137 cv
84.0668 143.147 83.9868 143.157 83.8868 143.157 cv
83.7768 143.157 83.6868 143.147 83.6168 143.137 cv
83.5468 143.137 83.4968 143.117 83.4568 143.107 cv
83.4168 143.087 83.3868 143.067 83.3768 143.047 cv
83.3568 143.027 83.3468 143.007 83.3468 142.967 cv
83.3468 139.887 li
83.3468 139.587 83.3168 139.337 83.2668 139.157 cv
83.2168 138.977 83.1468 138.817 83.0468 138.677 cv
82.9468 138.547 82.8168 138.447 82.6568 138.377 cv
82.5068 138.307 82.3268 138.267 82.1168 138.267 cv
81.8468 138.267 81.5868 138.357 81.3168 138.527 cv
81.0468 138.697 80.7668 138.957 80.4768 139.287 cv
80.4768 142.967 li
80.4768 143.007 80.4668 143.027 80.4568 143.047 cv
80.4368 143.067 80.4068 143.087 80.3668 143.107 cv
80.3268 143.117 80.2768 143.137 80.2068 143.137 cv
80.1368 143.147 80.0468 143.157 79.9468 143.157 cv
79.8368 143.157 79.7568 143.147 79.6868 143.137 cv
79.6168 143.137 79.5668 143.117 79.5168 143.107 cv
79.4768 143.087 79.4568 143.067 79.4368 143.047 cv
79.4268 143.027 79.4168 143.007 79.4168 142.967 cv
79.4168 137.697 li
79.4168 137.667 79.4268 137.637 79.4368 137.617 cv
79.4468 137.597 79.4768 137.577 79.5168 137.557 cv
79.5468 137.547 79.5968 137.527 79.6568 137.527 cv
79.7168 137.517 79.7968 137.517 79.8968 137.517 cv
79.9968 137.517 80.0668 137.517 80.1368 137.527 cv
80.1968 137.527 80.2468 137.547 80.2768 137.557 cv
80.3168 137.577 80.3368 137.597 80.3568 137.617 cv
80.3668 137.637 80.3768 137.667 80.3768 137.697 cv
80.3768 138.397 li
80.7068 138.067 81.0268 137.817 81.3568 137.667 cv
81.6768 137.507 82.0068 137.437 82.3368 137.437 cv
82.7268 137.437 83.0468 137.497 83.3068 137.617 cv
83.5768 137.727 83.7868 137.887 83.9568 138.087 cv
84.1168 138.287 84.2368 138.527 84.3068 138.787 cv
84.3768 139.057 84.4068 139.377 84.4068 139.757 cv
cp
91.7668 137.937 mo
91.7668 138.077 91.7468 138.177 91.6968 138.237 cv
91.6568 138.297 91.6068 138.327 91.5468 138.327 cv
90.7068 138.327 li
90.8668 138.467 90.9668 138.617 91.0268 138.787 cv
91.0868 138.957 91.1168 139.137 91.1168 139.317 cv
91.1168 139.627 91.0668 139.897 90.9568 140.127 cv
90.8468 140.367 90.6968 140.557 90.4968 140.727 cv
90.2968 140.887 90.0568 141.007 89.7868 141.097 cv
89.5068 141.177 89.2068 141.227 88.8668 141.227 cv
88.6368 141.227 88.4068 141.197 88.1968 141.137 cv
87.9868 141.087 87.8168 141.007 87.6968 140.927 cv
87.6268 140.997 87.5568 141.077 87.5068 141.167 cv
87.4668 141.257 87.4368 141.357 87.4368 141.477 cv
87.4368 141.617 87.5068 141.727 87.6468 141.817 cv
87.7868 141.907 87.9768 141.957 88.2068 141.967 cv
89.7168 142.017 li
90.0068 142.027 90.2668 142.067 90.5168 142.127 cv
90.7568 142.197 90.9568 142.287 91.1368 142.407 cv
91.3168 142.527 91.4468 142.667 91.5468 142.847 cv
91.6468 143.017 91.6968 143.217 91.6968 143.447 cv
91.6968 143.697 91.6468 143.927 91.5268 144.147 cv
91.4168 144.357 91.2468 144.557 91.0168 144.717 cv
90.7868 144.887 90.4968 145.017 90.1368 145.117 cv
89.7768 145.207 89.3568 145.257 88.8768 145.257 cv
88.4068 145.257 88.0068 145.217 87.6768 145.147 cv
87.3468 145.077 87.0768 144.977 86.8668 144.847 cv
86.6568 144.727 86.5068 144.577 86.4168 144.407 cv
86.3168 144.227 86.2668 144.037 86.2668 143.837 cv
86.2668 143.707 86.2868 143.587 86.3268 143.467 cv
86.3568 143.347 86.4068 143.227 86.4768 143.117 cv
86.5468 143.007 86.6368 142.907 86.7468 142.807 cv
86.8468 142.707 86.9668 142.607 87.1068 142.507 cv
86.8968 142.407 86.7468 142.287 86.6368 142.137 cv
86.5368 141.987 86.4868 141.827 86.4868 141.657 cv
86.4868 141.417 86.5468 141.207 86.6468 141.017 cv
86.7568 140.837 86.8968 140.667 87.0468 140.517 cv
86.9168 140.367 86.8168 140.207 86.7368 140.027 cv
86.6568 139.847 86.6168 139.627 86.6168 139.367 cv
86.6168 139.067 86.6768 138.797 86.7868 138.557 cv
86.8968 138.317 87.0568 138.117 87.2468 137.957 cv
87.4468 137.787 87.6868 137.667 87.9668 137.577 cv
88.2368 137.487 88.5468 137.447 88.8668 137.447 cv
89.0468 137.447 89.2068 137.457 89.3568 137.467 cv
89.5168 137.487 89.6568 137.517 89.7868 137.547 cv
91.5468 137.547 li
91.6168 137.547 91.6668 137.577 91.7068 137.637 cv
91.7468 137.707 91.7668 137.807 91.7668 137.937 cv
cp
90.0968 139.327 mo
90.0968 138.967 89.9868 138.687 89.7768 138.487 cv
89.5568 138.287 89.2468 138.187 88.8468 138.187 cv
88.6468 138.187 88.4668 138.217 88.3068 138.277 cv
88.1568 138.337 88.0268 138.427 87.9268 138.537 cv
87.8268 138.647 87.7568 138.767 87.7068 138.917 cv
87.6568 139.057 87.6268 139.207 87.6268 139.357 cv
87.6268 139.707 87.7368 139.987 87.9568 140.177 cv
88.1768 140.377 88.4768 140.477 88.8668 140.477 cv
89.0768 140.477 89.2568 140.447 89.4168 140.387 cv
89.5668 140.327 89.6968 140.247 89.7968 140.137 cv
89.8968 140.027 89.9768 139.907 90.0268 139.767 cv
90.0768 139.627 90.0968 139.477 90.0968 139.327 cv
cp
90.6368 143.507 mo
90.6368 143.277 90.5368 143.107 90.3268 142.977 cv
90.1268 142.857 89.8468 142.787 89.4968 142.787 cv
87.9968 142.737 li
87.8568 142.837 87.7468 142.927 87.6568 143.017 cv
87.5668 143.107 87.5068 143.187 87.4468 143.267 cv
87.3968 143.347 87.3668 143.427 87.3468 143.507 cv
87.3268 143.587 87.3168 143.667 87.3168 143.747 cv
87.3168 143.997 87.4568 144.187 87.7368 144.317 cv
88.0268 144.457 88.4168 144.517 88.9268 144.517 cv
89.2468 144.517 89.5168 144.487 89.7368 144.437 cv
89.9568 144.377 90.1268 144.297 90.2568 144.207 cv
90.3968 144.117 90.4868 144.007 90.5468 143.887 cv
90.6068 143.767 90.6368 143.637 90.6368 143.507 cv
cp
100.367 142.677 mo
100.367 142.757 100.357 142.817 100.347 142.877 cv
100.337 142.927 100.327 142.967 100.307 143.007 cv
100.287 143.047 100.267 143.077 100.237 143.087 cv
100.207 143.107 100.177 143.117 100.137 143.117 cv
96.4468 143.117 li
96.3468 143.117 96.2568 143.087 96.1668 143.027 cv
96.0868 142.967 96.0368 142.857 96.0368 142.707 cv
96.0368 135.687 li
96.0368 135.657 96.0468 135.627 96.0668 135.607 cv
96.0768 135.587 96.1068 135.567 96.1568 135.547 cv
96.1968 135.537 96.2568 135.527 96.3268 135.517 cv
96.3968 135.507 96.4868 135.497 96.5968 135.497 cv
96.6968 135.497 96.7868 135.507 96.8568 135.517 cv
96.9268 135.527 96.9868 135.537 97.0268 135.547 cv
97.0768 135.567 97.1068 135.587 97.1168 135.607 cv
97.1368 135.627 97.1468 135.657 97.1468 135.687 cv
97.1468 142.247 li
100.137 142.247 li
100.177 142.247 100.207 142.257 100.237 142.267 cv
100.267 142.287 100.287 142.317 100.307 142.347 cv
100.327 142.377 100.337 142.427 100.347 142.477 cv
100.357 142.537 100.367 142.597 100.367 142.677 cv
cp
102.227 142.967 mo
102.227 143.007 102.217 143.027 102.207 143.047 cv
102.187 143.067 102.157 143.087 102.117 143.107 cv
102.077 143.117 102.027 143.137 101.957 143.137 cv
101.887 143.147 101.797 143.157 101.697 143.157 cv
101.587 143.157 101.507 143.147 101.437 143.137 cv
101.367 143.137 101.317 143.117 101.267 143.107 cv
101.227 143.087 101.207 143.067 101.187 143.047 cv
101.177 143.027 101.167 143.007 101.167 142.967 cv
101.167 137.697 li
101.167 137.667 101.177 137.647 101.187 137.617 cv
101.207 137.597 101.227 137.577 101.267 137.567 cv
101.317 137.547 101.367 137.537 101.437 137.527 cv
101.507 137.517 101.587 137.517 101.697 137.517 cv
101.797 137.517 101.887 137.517 101.957 137.527 cv
102.027 137.537 102.077 137.547 102.117 137.567 cv
102.157 137.577 102.187 137.597 102.207 137.617 cv
102.217 137.647 102.227 137.667 102.227 137.697 cv
cp
102.347 135.917 mo
102.347 136.147 102.307 136.297 102.207 136.377 cv
102.117 136.457 101.937 136.507 101.687 136.507 cv
101.437 136.507 101.267 136.467 101.177 136.387 cv
101.087 136.297 101.037 136.147 101.037 135.927 cv
101.037 135.697 101.087 135.547 101.177 135.467 cv
101.277 135.387 101.447 135.337 101.697 135.337 cv
101.947 135.337 102.117 135.387 102.217 135.467 cv
102.307 135.547 102.347 135.697 102.347 135.917 cv
cp
107.807 141.537 mo
107.807 141.807 107.757 142.047 107.647 142.257 cv
107.537 142.467 107.377 142.647 107.177 142.787 cv
106.977 142.937 106.737 143.047 106.457 143.117 cv
106.177 143.187 105.867 143.227 105.537 143.227 cv
105.327 143.227 105.127 143.217 104.947 143.187 cv
104.757 143.157 104.587 143.117 104.437 143.077 cv
104.287 143.027 104.167 142.977 104.067 142.937 cv
103.957 142.887 103.887 142.837 103.837 142.797 cv
103.787 142.757 103.757 142.707 103.737 142.637 cv
103.717 142.567 103.697 142.467 103.697 142.347 cv
103.697 142.277 103.707 142.217 103.717 142.167 cv
103.727 142.107 103.737 142.067 103.747 142.037 cv
103.757 142.007 103.777 141.987 103.797 141.967 cv
103.827 141.957 103.847 141.947 103.887 141.947 cv
103.927 141.947 103.997 141.977 104.087 142.027 cv
104.187 142.087 104.297 142.137 104.437 142.207 cv
104.567 142.267 104.727 142.327 104.917 142.377 cv
105.097 142.427 105.307 142.457 105.547 142.457 cv
105.727 142.457 105.897 142.437 106.037 142.407 cv
106.187 142.367 106.317 142.317 106.417 142.247 cv
106.527 142.177 106.607 142.097 106.667 141.987 cv
106.727 141.877 106.757 141.757 106.757 141.607 cv
106.757 141.467 106.717 141.337 106.627 141.237 cv
106.547 141.137 106.437 141.047 106.297 140.967 cv
106.157 140.887 106.007 140.817 105.837 140.757 cv
105.667 140.697 105.487 140.637 105.307 140.567 cv
105.117 140.507 104.947 140.427 104.767 140.347 cv
104.597 140.257 104.437 140.157 104.297 140.037 cv
104.167 139.917 104.057 139.767 103.967 139.597 cv
103.887 139.437 103.847 139.237 103.847 138.997 cv
103.847 138.787 103.887 138.597 103.977 138.407 cv
104.067 138.217 104.197 138.047 104.367 137.907 cv
104.547 137.767 104.767 137.647 105.037 137.567 cv
105.297 137.477 105.607 137.437 105.957 137.437 cv
106.117 137.437 106.267 137.447 106.417 137.467 cv
106.577 137.497 106.717 137.517 106.837 137.557 cv
106.967 137.587 107.067 137.627 107.157 137.667 cv
107.247 137.717 107.317 137.747 107.357 137.777 cv
107.407 137.807 107.437 137.837 107.447 137.857 cv
107.467 137.887 107.477 137.907 107.477 137.937 cv
107.487 137.967 107.497 138.007 107.497 138.047 cv
107.507 138.097 107.507 138.147 107.507 138.207 cv
107.507 138.277 107.507 138.327 107.497 138.377 cv
107.497 138.427 107.487 138.467 107.467 138.497 cv
107.457 138.527 107.437 138.557 107.417 138.567 cv
107.397 138.577 107.367 138.587 107.347 138.587 cv
107.307 138.587 107.247 138.567 107.177 138.527 cv
107.107 138.477 107.007 138.437 106.897 138.387 cv
106.777 138.337 106.637 138.287 106.487 138.247 cv
106.327 138.207 106.147 138.187 105.947 138.187 cv
105.767 138.187 105.607 138.207 105.467 138.237 cv
105.327 138.277 105.217 138.327 105.127 138.397 cv
105.037 138.467 104.977 138.547 104.927 138.637 cv
104.887 138.737 104.857 138.837 104.857 138.947 cv
104.857 139.097 104.907 139.227 104.987 139.327 cv
105.077 139.437 105.187 139.527 105.327 139.597 cv
105.467 139.677 105.617 139.747 105.797 139.817 cv
105.977 139.877 106.147 139.937 106.337 140.007 cv
106.517 140.077 106.697 140.147 106.877 140.227 cv
107.057 140.307 107.217 140.407 107.347 140.527 cv
107.487 140.647 107.597 140.787 107.677 140.947 cv
107.767 141.117 107.807 141.307 107.807 141.537 cv
cp
112.437 142.587 mo
112.437 142.697 112.427 142.787 112.407 142.857 cv
112.387 142.917 112.367 142.967 112.327 142.997 cv
112.297 143.027 112.247 143.057 112.177 143.087 cv
112.107 143.117 112.027 143.137 111.937 143.157 cv
111.847 143.177 111.757 143.187 111.657 143.197 cv
111.557 143.207 111.457 143.217 111.367 143.217 cv
111.057 143.217 110.807 143.177 110.587 143.107 cv
110.377 143.037 110.197 142.927 110.057 142.777 cv
109.927 142.637 109.827 142.447 109.757 142.227 cv
109.697 141.997 109.667 141.737 109.667 141.427 cv
109.667 138.347 li
108.857 138.347 li
108.787 138.347 108.737 138.317 108.697 138.257 cv
108.657 138.187 108.647 138.087 108.647 137.947 cv
108.647 137.877 108.647 137.817 108.657 137.757 cv
108.667 137.707 108.687 137.667 108.697 137.637 cv
108.717 137.607 108.737 137.577 108.767 137.567 cv
108.797 137.547 108.827 137.547 108.857 137.547 cv
109.667 137.547 li
109.667 136.287 li
109.667 136.267 109.677 136.237 109.687 136.217 cv
109.707 136.187 109.737 136.167 109.777 136.157 cv
109.817 136.137 109.867 136.127 109.937 136.117 cv
110.007 136.107 110.097 136.107 110.197 136.107 cv
110.307 136.107 110.387 136.107 110.457 136.117 cv
110.527 136.127 110.587 136.137 110.617 136.157 cv
110.657 136.167 110.687 136.187 110.707 136.217 cv
110.717 136.237 110.727 136.267 110.727 136.287 cv
110.727 137.547 li
112.217 137.547 li
112.257 137.547 112.287 137.547 112.307 137.567 cv
112.337 137.577 112.357 137.607 112.377 137.637 cv
112.397 137.667 112.407 137.707 112.417 137.757 cv
112.427 137.817 112.437 137.877 112.437 137.947 cv
112.437 138.087 112.417 138.187 112.377 138.257 cv
112.337 138.317 112.287 138.347 112.217 138.347 cv
110.727 138.347 li
110.727 141.287 li
110.727 141.657 110.787 141.927 110.907 142.117 cv
111.027 142.297 111.237 142.387 111.547 142.387 cv
111.637 142.387 111.727 142.387 111.807 142.367 cv
111.887 142.347 111.957 142.327 112.017 142.307 cv
112.077 142.287 112.127 142.267 112.167 142.257 cv
112.207 142.237 112.247 142.227 112.287 142.227 cv
112.307 142.227 112.327 142.227 112.347 142.237 cv
112.367 142.247 112.377 142.267 112.387 142.297 cv
112.397 142.327 112.407 142.357 112.417 142.407 cv
112.427 142.457 112.437 142.517 112.437 142.587 cv
cp
f
UOQDFG+CourierNewPSMT*1 [9.775 0 0 -9.775 0 0 ]msf
46.5568 171.427 mo
({)sh
52.5568 171.427 mo
(\()sh
58.5768 171.427 mo
(p)sh
64.5768 171.427 mo
(2)sh
70.5768 171.427 mo
(, )
[6.00006 0 ]xsh
82.6068 171.427 mo
(1)sh
88.6068 171.427 mo
(\))sh
94.5968 171.427 mo
(,)sh
100.627 171.427 mo
(\()sh
106.627 171.427 mo
(p)sh
112.627 171.427 mo
(3)sh
118.627 171.427 mo
(, )
[6.00006 0 ]xsh
130.647 171.427 mo
(1)sh
136.647 171.427 mo
(\))sh
142.657 171.427 mo
(,)sh
148.677 171.427 mo
(\()sh
154.677 171.427 mo
(p)sh
160.677 171.427 mo
(4)sh
166.677 171.427 mo
(, )
[6.00006 0 ]xsh
178.697 171.427 mo
(1)sh
184.707 171.427 mo
(\))sh
190.707 171.427 mo
(,)sh
196.727 171.427 mo
(\()sh
202.727 171.427 mo
(p)sh
208.727 171.427 mo
(5)sh
214.727 171.427 mo
(, )
[6.02505 0 ]xsh
226.757 171.427 mo
(1)sh
232.757 171.427 mo
(\))sh
238.757 171.427 mo
(,)sh
244.777 171.427 mo
(\()sh
250.777 171.427 mo
(p)sh
256.777 171.427 mo
(6)sh
262.777 171.427 mo
(, )
[6.02505 0 ]xsh
274.797 171.427 mo
(1)sh
280.807 171.427 mo
(\))sh
286.797 171.427 mo
(,)sh
292.827 171.427 mo
(\()sh
298.827 171.427 mo
(p)sh
304.827 171.427 mo
(7)sh
310.827 171.427 mo
(, )
[6.02505 0 ]xsh
322.857 171.427 mo
(1)sh
328.847 171.427 mo
(\))sh
334.857 171.427 mo
(,)sh
340.877 171.427 mo
(\()sh
346.877 171.427 mo
(p)sh
352.877 171.427 mo
(8)sh
358.877 171.427 mo
(, )
[6.02505 0 ]xsh
370.897 171.427 mo
(1)sh
376.897 171.427 mo
(\))sh
382.907 171.427 mo
(})sh
UOQDFG+CourierNewPSMT*1 [9.75 0 0 -9.75 0 0 ]msf
46.5568 183.457 mo
({)sh
52.5568 183.457 mo
(\()sh
58.5768 183.457 mo
(p)sh
64.5768 183.457 mo
(2)sh
70.5768 183.457 mo
(, )
[6.00006 0 ]xsh
82.6068 183.457 mo
(1)sh
88.6068 183.457 mo
(\))sh
94.5968 183.457 mo
(,)sh
100.627 183.457 mo
(\()sh
106.627 183.457 mo
(p)sh
112.627 183.457 mo
(3)sh
118.627 183.457 mo
(, )
[6.00006 0 ]xsh
130.647 183.457 mo
(1)sh
136.647 183.457 mo
(\))sh
142.657 183.457 mo
(,)sh
148.677 183.457 mo
(\()sh
154.677 183.457 mo
(p)sh
160.677 183.457 mo
(4)sh
166.677 183.457 mo
(, )
[6.00006 0 ]xsh
178.697 183.457 mo
(1)sh
184.707 183.457 mo
(\))sh
190.707 183.457 mo
(,)sh
196.727 183.457 mo
(\()sh
202.727 183.457 mo
(p)sh
208.727 183.457 mo
(5)sh
214.727 183.457 mo
(, )
[6.02505 0 ]xsh
226.757 183.457 mo
(1)sh
232.757 183.457 mo
(\))sh
238.757 183.457 mo
(,)sh
244.777 183.457 mo
(\()sh
250.777 183.457 mo
(p)sh
256.777 183.457 mo
(6)sh
262.777 183.457 mo
(, )
[6.02505 0 ]xsh
274.797 183.457 mo
(1)sh
280.807 183.457 mo
(\))sh
286.797 183.457 mo
(,)sh
292.827 183.457 mo
(\()sh
298.827 183.457 mo
(p)sh
304.827 183.457 mo
(7)sh
310.827 183.457 mo
(, )
[6.02505 0 ]xsh
322.857 183.457 mo
(1)sh
328.847 183.457 mo
(\))sh
334.857 183.457 mo
(})sh
46.5568 195.457 mo
({)sh
52.5568 195.457 mo
(\()sh
58.5768 195.457 mo
(p)sh
64.5768 195.457 mo
(2)sh
70.5768 195.457 mo
(, )
[6.00006 0 ]xsh
82.6068 195.457 mo
(1)sh
88.6068 195.457 mo
(\))sh
94.5968 195.457 mo
(,)sh
100.627 195.457 mo
(\()sh
106.627 195.457 mo
(p)sh
112.627 195.457 mo
(3)sh
118.627 195.457 mo
(, )
[6.00006 0 ]xsh
130.647 195.457 mo
(1)sh
136.647 195.457 mo
(\))sh
142.657 195.457 mo
(,)sh
148.677 195.457 mo
(\()sh
154.677 195.457 mo
(p)sh
160.677 195.457 mo
(4)sh
166.677 195.457 mo
(, )
[6.00006 0 ]xsh
178.697 195.457 mo
(1)sh
184.707 195.457 mo
(\))sh
190.707 195.457 mo
(,)sh
196.727 195.457 mo
(\()sh
202.727 195.457 mo
(p)sh
208.727 195.457 mo
(5)sh
214.727 195.457 mo
(, )
[6.02505 0 ]xsh
226.757 195.457 mo
(1)sh
232.757 195.457 mo
(\))sh
238.757 195.457 mo
(,)sh
244.777 195.457 mo
(\()sh
250.777 195.457 mo
(p)sh
256.777 195.457 mo
(6)sh
262.777 195.457 mo
(, )
[6.02505 0 ]xsh
274.797 195.457 mo
(1)sh
280.807 195.457 mo
(\))sh
286.797 195.457 mo
(})sh
46.5568 207.457 mo
({)sh
52.5568 207.457 mo
(\()sh
58.5768 207.457 mo
(p)sh
64.5768 207.457 mo
(2)sh
70.5768 207.457 mo
(, )
[6.00006 0 ]xsh
82.6068 207.457 mo
(1)sh
88.6068 207.457 mo
(\))sh
94.5968 207.457 mo
(,)sh
100.627 207.457 mo
(\()sh
106.627 207.457 mo
(p)sh
112.627 207.457 mo
(3)sh
118.627 207.457 mo
(, )
[6.00006 0 ]xsh
130.647 207.457 mo
(1)sh
136.647 207.457 mo
(\))sh
142.657 207.457 mo
(,)sh
148.677 207.457 mo
(\()sh
154.677 207.457 mo
(p)sh
160.677 207.457 mo
(4)sh
166.677 207.457 mo
(, )
[6.00006 0 ]xsh
178.697 207.457 mo
(1)sh
184.707 207.457 mo
(\))sh
190.707 207.457 mo
(,)sh
196.727 207.457 mo
(\()sh
202.727 207.457 mo
(p)sh
208.727 207.457 mo
(5)sh
214.727 207.457 mo
(, )
[6.02505 0 ]xsh
226.757 207.457 mo
(1)sh
232.757 207.457 mo
(\))sh
238.757 207.457 mo
(})sh
46.5568 219.477 mo
({)sh
52.5568 219.477 mo
(\()sh
58.5768 219.477 mo
(p)sh
64.5768 219.477 mo
(2)sh
70.5768 219.477 mo
(, )
[6.00006 0 ]xsh
82.6068 219.477 mo
(1)sh
88.6068 219.477 mo
(\))sh
94.5968 219.477 mo
(,)sh
100.627 219.477 mo
(\()sh
106.627 219.477 mo
(p)sh
112.627 219.477 mo
(3)sh
118.627 219.477 mo
(, )
[6.00006 0 ]xsh
130.647 219.477 mo
(1)sh
136.647 219.477 mo
(\))sh
142.657 219.477 mo
(,)sh
148.677 219.477 mo
(\()sh
154.677 219.477 mo
(p)sh
160.677 219.477 mo
(4)sh
166.677 219.477 mo
(, )
[6.00006 0 ]xsh
178.697 219.477 mo
(1)sh
184.707 219.477 mo
(\))sh
190.707 219.477 mo
(})sh
46.5568 231.477 mo
({)sh
52.5568 231.477 mo
(\()sh
58.5768 231.477 mo
(p)sh
64.5768 231.477 mo
(2)sh
70.5768 231.477 mo
(, )
[6.00006 0 ]xsh
82.6068 231.477 mo
(1)sh
88.6068 231.477 mo
(\))sh
94.5968 231.477 mo
(,)sh
100.627 231.477 mo
(\()sh
106.627 231.477 mo
(p)sh
112.627 231.477 mo
(3)sh
118.627 231.477 mo
(, )
[6.00006 0 ]xsh
130.647 231.477 mo
(1)sh
136.647 231.477 mo
(\))sh
142.657 231.477 mo
(})sh
46.5568 243.477 mo
({)sh
52.5568 243.477 mo
(\()sh
58.5768 243.477 mo
(p)sh
64.5768 243.477 mo
(2)sh
70.5768 243.477 mo
(, )
[6.00006 0 ]xsh
82.6068 243.477 mo
(1)sh
88.6068 243.477 mo
(\))sh
94.5968 243.477 mo
(})sh
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
[/CSD [/0 ]]
] del_res
/UOQDFG+CourierNewPSMT*1 uf
/UOQDFG+CourierNewPSMT uf
/WGJAAA+CourierNewPSMT uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
